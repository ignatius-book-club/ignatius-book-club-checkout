{"version":3,"file":"checkout-533fa2fc.js","mappings":"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","sources":["webpack://checkout/./packages/analytics/src/AnalyticsContext.ts","webpack://checkout/./packages/analytics/src/createAnalyticsService.ts","webpack://checkout/./packages/analytics/src/AnalyticsProvider.tsx","webpack://checkout/./packages/core/src/app/address/AddressType.ts","webpack://checkout/./packages/locale/src/localizeAddress.ts","webpack://checkout/./packages/core/src/app/address/StaticAddress.tsx","webpack://checkout/./packages/core/src/app/formFields/getFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/getAddressFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/isValidAddress.ts","webpack://checkout/./packages/core/src/app/address/mapAddressToFormValues.ts","webpack://checkout/./packages/core/src/app/analytics/withAnalytics.ts","webpack://checkout/./packages/core/src/app/billing/StaticBillingAddress.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionContext.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionReducer.ts","webpack://checkout/./packages/checkout-extension/src/handlers/createReloadCheckoutHandler.ts","webpack://checkout/./packages/checkout-extension/src/handlers/createSetIframeStyleHandler.ts","webpack://checkout/./packages/checkout-extension/src/handlers/createShowLoadingIndicatorHandler.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionService.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionProvider.tsx","webpack://checkout/./packages/checkout-extension/src/isCheckoutExtensionEnabled.ts","webpack://checkout/./packages/core/src/app/checkout/NoopCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutSupport.ts","webpack://checkout/./packages/checkout-extension/src/withExtension.ts","webpack://checkout/./packages/core/src/app/cart/EmptyCartMessage.tsx","webpack://checkout/./packages/core/src/app/customer/CustomerViewType.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/WalletButtonContainerSkeleton.tsx","webpack://checkout/./packages/core/src/app/common/utility/is-apple-pay-window.ts","webpack://checkout/./packages/core/src/app/customer/getSupportedMethods.ts","webpack://checkout/./packages/core/src/app/customer/CheckoutButton.tsx","webpack://checkout/./packages/core/src/app/checkout/navigateToOrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/ApplePayButton.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/AmazonPayV2Button.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/PayPalCommerceButton.tsx","webpack://checkout/./packages/core/src/app/customer/WalletButtonV1Resolver.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonContainer.tsx","webpack://checkout/./packages/core/src/app/customer/resolveCheckoutButton.ts","webpack://checkout/./packages/analytics/src/useAnalytics.tsx","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/BoltCheckoutSuggestion.tsx","webpack://checkout/./packages/dom-utils/src/stopPropagation.ts","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/CheckoutSuggestion.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonList.tsx","webpack://checkout/./packages/core/src/app/customer/canSignOut.ts","webpack://checkout/./packages/core/src/app/customer/CustomerInfo.tsx","webpack://checkout/./packages/instrument-utils/src/guards/shouldUseStripeLinkByMinimumAmount.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CustomerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/validationPatterns.ts","webpack://checkout/./packages/core/src/app/customer/getEmailValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/getCreateCustomerValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/CreateAccountForm.tsx","webpack://checkout/./packages/locale/src/TranslatedLink.tsx","webpack://checkout/./packages/core/src/app/customer/EmailField.tsx","webpack://checkout/./packages/core/src/app/customer/EmailLoginForm.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/PrivacyPolicyField.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/getPrivacyPolicyValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/SubscribeField.tsx","webpack://checkout/./packages/core/src/app/customer/SubscribeSessionStorage.ts","webpack://checkout/./packages/core/src/app/customer/GuestForm.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEye.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEyeSlash.tsx","webpack://checkout/./packages/core/src/app/customer/PasswordField.tsx","webpack://checkout/./packages/core/src/app/customer/LoginForm.tsx","webpack://checkout/./packages/core/src/app/customer/mapErrorMessage.ts","webpack://checkout/./packages/core/src/app/customer/mapCreateAccountFromFormValues.ts","webpack://checkout/./packages/core/src/app/customer/StripeGuestForm.tsx","webpack://checkout/./packages/core/src/app/customer/Customer.tsx","webpack://checkout/./packages/core/src/app/payment/getProviderWithCustomCheckout.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconTag.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBanner.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBannerList.tsx","webpack://checkout/./packages/core/src/app/shipping/hasUnassignedLineItems.ts","webpack://checkout/./packages/core/src/app/shipping/isUsingMultiShipping.ts","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionExpiredError.ts","webpack://checkout/./packages/core/src/app/ui/loading/LoadingNotification.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconCheck.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepHeader.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStep.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/isMobileView.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepType.ts","webpack://checkout/./packages/core/src/app/shipping/itemsRequireShipping.ts","webpack://checkout/./packages/core/src/app/checkout/getCheckoutStepStatuses.ts","webpack://checkout/./packages/core/src/app/checkout/AddressDisplay/AddressDisplay.tsx","webpack://checkout/./packages/core/src/app/checkout/ShippingStep/ShippingStep.tsx","webpack://checkout/./packages/core/src/app/checkout/Checkout.tsx","webpack://checkout/./packages/core/src/app/checkout/mapToCheckoutProps.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutApp.tsx","webpack://checkout/./packages/legacy-hoc/src/createMappableInjectHoc.tsx","webpack://checkout/./packages/core/src/app/checkout/withCheckout.tsx","webpack://checkout/./packages/core/src/app/common/error/CustomError.ts","webpack://checkout/./packages/core/src/app/common/error/ErrorCode.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorModal.tsx","webpack://checkout/./packages/core/src/app/common/error/isHtmlError.tsx","webpack://checkout/./packages/core/src/app/common/error/computeErrorCode.ts","webpack://checkout/./packages/core/src/app/common/error/createCustomErrorType.ts","webpack://checkout/./packages/error-handling-utils/src/ErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/ConsoleErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/NoopErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/SentryErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/createErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/isCustomError.ts","webpack://checkout/./packages/core/src/app/common/error/isErrorWithType.ts","webpack://checkout/./packages/core/src/app/common/error/isRequestError.ts","webpack://checkout/./packages/payment-integration-api/src/isResolvableComponent.ts","webpack://checkout/./packages/core/src/app/common/resolver/resolveComponent.ts","webpack://checkout/./packages/core/src/app/common/utility/emptyData.ts","webpack://checkout/./packages/core/src/app/common/utility/isBuyNowCart.ts","webpack://checkout/./packages/core/src/app/common/utility/isFloatingLabelEnabled.ts","webpack://checkout/./packages/core/src/app/common/utility/retry.ts","webpack://checkout/./packages/core/src/app/customer/getPasswordRequirements.ts","webpack://checkout/./packages/core/src/app/common/dom/toCssRule.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStyleParser.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/dom/appendStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/isEmbedded.ts","webpack://checkout/./packages/core/src/app/formFields/getCustomFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/formFields/mapCustomFormFieldsFromFormValues.ts","webpack://checkout/./packages/checkout-button-integration/src/CheckoutButton.tsx","webpack://checkout/./packages/payment-integration-api/src/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/payment-integration-api/src/setPrototypeOf.ts","webpack://checkout/./packages/google-pay-integration/src/GooglePayButton.tsx","webpack://checkout/./packages/payment-integration-api/src/isEmbedded.ts","webpack://checkout/./packages/core/src/app/giftCertificate/isGiftCertificatePayment.ts","webpack://checkout/./packages/core/src/app/common/bundler/getCurrentScriptPath.ts","webpack://checkout/./packages/core/src/app/common/bundler/configurePublicPath.ts","webpack://checkout/./packages/core/src/app/checkout/renderCheckout.tsx","webpack://checkout/./packages/core/src/app/order/renderOrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/guestSignup/AccountService.ts","webpack://checkout/./packages/core/src/app/guestSignup/SignUpPasswordField.tsx","webpack://checkout/./packages/core/src/app/guestSignup/GuestSignUpForm.tsx","webpack://checkout/./packages/core/src/app/guestSignup/PasswordSavedSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/SignedUpSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationRequirementsError.ts","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationFailedError.ts","webpack://checkout/./packages/core/src/app/order/getPaymentInstructions.ts","webpack://checkout/./packages/core/src/app/giftCertificate/mapFromPayments.ts","webpack://checkout/./packages/core/src/app/order/getStoreCreditAmount.ts","webpack://checkout/./packages/core/src/app/order/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/OrderConfirmationSection.tsx","webpack://checkout/./packages/core/src/app/order/MandateTextComponent.tsx","webpack://checkout/./packages/core/src/app/order/PaymentsWithMandates.tsx","webpack://checkout/./packages/core/src/app/order/OrderStatus.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconPrint.tsx","webpack://checkout/./packages/core/src/app/order/PrintLink.tsx","webpack://checkout/./packages/core/src/app/ui/header/PrimaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/ThankYouHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationApp.tsx","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PaymentMethodId.ts","webpack://checkout/./packages/core/src/app/payment/storeCredit/isStoreCreditPayment.ts","webpack://checkout/./packages/core/src/app/shipping/hasSelectedShippingOptions.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconSuccess.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconInfo.tsx","webpack://checkout/./packages/core/src/app/ui/alert/Alert.tsx","webpack://checkout/./packages/core/src/app/ui/button/Button.tsx","webpack://checkout/./packages/core/src/app/ui/form/BasicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/RadioInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/MultiCheckboxControl.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxGroupFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormFieldType.ts","webpack://checkout/./packages/core/src/app/ui/form/Fieldset.tsx","webpack://checkout/./packages/core/src/app/ui/form/Form.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldContainer.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldError.tsx","webpack://checkout/./packages/core/src/app/ui/form/Input.tsx","webpack://checkout/./packages/core/src/app/ui/form/Label.tsx","webpack://checkout/./packages/core/src/app/ui/form/Legend.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextArea.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextInput.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconBolt.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconClose.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconError.tsx","webpack://checkout/./packages/core/src/app/ui/icon/withIconContainer.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LazyContainer.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LoadingOverlay.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LoadingSpinner.tsx","webpack://checkout/./packages/core/src/app/ui/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalHeader.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/ViewPicker.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/MobileView.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/breakpoints.ts","webpack://checkout/./packages/core/src/app/ui/toggle/Toggle.tsx","webpack://checkout/./packages/dom-utils/src/getAppliedStyles.ts","webpack://checkout/./packages/dom-utils/src/parseAnchor.ts","webpack://checkout/./packages/dom-utils/src/preventDefault.ts","webpack://checkout/./packages/error-handling-utils/src/ErrorBoundary.tsx","webpack://checkout/./packages/legacy-hoc/src/createInjectHoc.tsx","webpack://checkout/./packages/locale/src/LocaleContext.ts","webpack://checkout/./packages/locale/src/LocaleProvider.tsx","webpack://checkout/./packages/locale/src/TranslatedHtml.tsx","webpack://checkout/./packages/locale/src/TranslatedString.tsx","webpack://checkout/./packages/locale/src/translations/index.ts","webpack://checkout/./packages/locale/src/getLanguageService.ts","webpack://checkout/./packages/locale/src/withDate.tsx","webpack://checkout/./packages/locale/src/withLanguage.tsx","webpack://checkout/./packages/payment-integration-api/src/PaymentMethodId.ts","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutProvider.tsx","webpack://checkout/./packages/payment-integration-api/src/errors/CustomError.ts","webpack://checkout/./packages/payment-integration-api/src/toResolvableComponent.tsx","webpack://checkout/./packages/ui/src/icon/IconPayPalFastlane.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/PoweredByPayPalFastlaneLabel.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-address.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-customer.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-braintree-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-commerce-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/usePayPalFastlaneAddress.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/AddressFormSkeleton.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/ChecklistSkeleton.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/LoadingSkeleton.tsx","webpack://checkout/./packages/ui/src/form/contexts/FormContext.tsx","webpack://checkout/./packages/ui/src/icon/withIconContainer.tsx"],"sourcesContent":["import { CheckoutPaymentMethodExecutedOptions } from '@bigcommerce/checkout-sdk';\nimport { createContext } from 'react';\n\nexport interface AnalyticsEvents {\n    checkoutBegin(): void;\n    trackStepCompleted(step: string): void;\n    trackStepViewed(step: string): void;\n    orderPurchased(): void;\n    customerEmailEntry(email: string): void;\n    customerSuggestionInit(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    customerSuggestionExecute(): void;\n    customerPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    showShippingMethods(): void;\n    selectedPaymentMethod(methodName: string, methodId: string): void;\n    clickPayButton(payload?: { [key: string]: unknown }): void;\n    paymentRejected(): void;\n    paymentComplete(): void;\n    exitCheckout(): void;\n    walletButtonClick(methodId: string): void;\n}\n\nexport interface AnalyticsContextProps {\n    analyticsTracker: AnalyticsEvents;\n}\n\nconst AnalyticsContext = createContext<AnalyticsContextProps | undefined>(undefined);\n\nexport default AnalyticsContext;\n","export default function createAnalyticsService<T>(\n    createFn: (args?: any) => T,\n    createArguments: unknown[] = [],\n) {\n    let analyticsTracker: T;\n\n    return () => {\n        if (analyticsTracker) {\n            return analyticsTracker;\n        }\n\n        analyticsTracker = createFn(...createArguments);\n\n        return analyticsTracker;\n    };\n}\n","import {\n    BodlEventsPayload,\n    BodlService,\n    BraintreeAnalyticTrackerService,\n    CheckoutService,\n    createBodlService,\n    createBraintreeAnalyticTracker,\n    createPayPalCommerceAnalyticTracker,\n    createStepTracker,\n    PayPalCommerceAnalyticTrackerService,\n    StepTracker,\n} from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useMemo } from 'react';\n\nimport AnalyticsContext, { AnalyticsEvents } from './AnalyticsContext';\nimport createAnalyticsService from './createAnalyticsService';\n\ninterface AnalyticsProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n}\n\nconst AnalyticsProvider = ({ checkoutService, children }: AnalyticsProviderProps) => {\n    const getStepTracker = useMemo(\n        () => createAnalyticsService<StepTracker>(createStepTracker, [checkoutService]),\n        [checkoutService],\n    );\n    const getBodlService = useMemo(\n        () => createAnalyticsService<BodlService>(createBodlService, [checkoutService.subscribe]),\n        [checkoutService],\n    );\n    const getBraintreeAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<BraintreeAnalyticTrackerService>(\n                createBraintreeAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n    const getPayPalCommerceAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<PayPalCommerceAnalyticTrackerService>(\n                createPayPalCommerceAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n\n    const checkoutBegin = () => {\n        getStepTracker().trackCheckoutStarted();\n        getBodlService().checkoutBegin();\n    };\n\n    const trackStepCompleted = (currentStep: string) => {\n        getStepTracker().trackStepCompleted(currentStep);\n        getBodlService().stepCompleted(currentStep);\n    };\n\n    const trackStepViewed = (step: string) => {\n        getStepTracker().trackStepViewed(step);\n    };\n\n    const orderPurchased = () => {\n        getStepTracker().trackOrderComplete();\n        getBodlService().orderPurchased();\n    };\n\n    const customerEmailEntry = (email: string) => {\n        getBodlService().customerEmailEntry(email);\n    };\n\n    const customerSuggestionInit = (payload: BodlEventsPayload) => {\n        getBodlService().customerSuggestionInit(payload);\n    };\n\n    const customerSuggestionExecute = () => {\n        getBodlService().customerSuggestionExecute();\n    };\n\n    const customerPaymentMethodExecuted = (payload: BodlEventsPayload) => {\n        getBodlService().customerPaymentMethodExecuted(payload);\n        getBraintreeAnalyticTracker().customerPaymentMethodExecuted();\n        getPayPalCommerceAnalyticTracker().customerPaymentMethodExecuted();\n    };\n\n    const showShippingMethods = () => {\n        getBodlService().showShippingMethods();\n    };\n\n    const selectedPaymentMethod = (methodName: string, methodId: string) => {\n        getBodlService().selectedPaymentMethod(methodName);\n        getBraintreeAnalyticTracker().selectedPaymentMethod(methodId);\n        getPayPalCommerceAnalyticTracker().selectedPaymentMethod(methodId);\n    };\n\n    const clickPayButton = (payload: BodlEventsPayload) => {\n        getBodlService().clickPayButton(payload);\n    };\n\n    const paymentRejected = () => {\n        getBodlService().paymentRejected();\n    };\n\n    const paymentComplete = () => {\n        getBodlService().paymentComplete();\n        getBraintreeAnalyticTracker().paymentComplete();\n        getPayPalCommerceAnalyticTracker().paymentComplete();\n    };\n\n    const exitCheckout = () => {\n        getBodlService().exitCheckout();\n    };\n\n    const walletButtonClick = (methodId: string) => {\n        getBraintreeAnalyticTracker().walletButtonClick(methodId);\n        getPayPalCommerceAnalyticTracker().walletButtonClick(methodId);\n    };\n\n    const analyticsTracker: AnalyticsEvents = {\n        checkoutBegin,\n        trackStepCompleted,\n        trackStepViewed,\n        orderPurchased,\n        customerEmailEntry,\n        customerSuggestionInit,\n        customerSuggestionExecute,\n        customerPaymentMethodExecuted,\n        showShippingMethods,\n        selectedPaymentMethod,\n        clickPayButton,\n        paymentRejected,\n        paymentComplete,\n        exitCheckout,\n        walletButtonClick,\n    };\n\n    return (\n        <AnalyticsContext.Provider value={{ analyticsTracker }}>\n            {children}\n        </AnalyticsContext.Provider>\n    );\n};\n\nexport default AnalyticsProvider;\n","enum AddressType {\n    Billing = 'billing',\n    Shipping = 'shipping',\n}\n\nexport default AddressType;\n","import { Address, Country } from '@bigcommerce/checkout-sdk';\nimport { find, isEmpty } from 'lodash';\n\ninterface LocalizedGeography {\n    localizedCountry: string;\n    localizedProvince: string;\n}\n\nconst localizeAddress = <T1 extends Address>(\n    address: T1,\n    countries?: Country[],\n): T1 & LocalizedGeography => {\n    const country = find(countries, { code: address.countryCode });\n    const states = !country || isEmpty(country.subdivisions) ? [] : country.subdivisions;\n    const state = find(states, { code: address.stateOrProvinceCode });\n\n    return {\n        ...address,\n        localizedCountry: country ? country.name : address.country,\n        localizedProvince: state ? state.name : address.stateOrProvince,\n    };\n};\n\nexport default localizeAddress;\n","import {\n    Address,\n    CheckoutSelectors,\n    Country,\n    FormField,\n    ShippingInitializeOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { isEmpty } from 'lodash';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { localizeAddress } from '@bigcommerce/checkout/locale';\n\nimport { withCheckout } from '../checkout';\n\nimport AddressType from './AddressType';\nimport isValidAddress from './isValidAddress';\n\nimport './StaticAddress.scss';\n\nexport interface StaticAddressProps {\n    address: Address;\n    type?: AddressType;\n}\n\nexport interface StaticAddressEditableProps extends StaticAddressProps {\n    initialize?(options: ShippingInitializeOptions): Promise<CheckoutSelectors>;\n}\n\ninterface WithCheckoutStaticAddressProps {\n    countries?: Country[];\n    fields?: FormField[];\n}\n\nconst StaticAddress: FunctionComponent<\n    StaticAddressEditableProps & WithCheckoutStaticAddressProps\n> = ({ countries, fields, address: addressWithoutLocalization }) => {\n    const address = localizeAddress(addressWithoutLocalization, countries);\n    const isValid = !fields\n        ? !isEmpty(address)\n        : isValidAddress(\n              address,\n              fields.filter((field) => !field.custom),\n          );\n\n    return !isValid ? null : (\n        <div className=\"vcard checkout-address--static\" data-test=\"static-address\">\n            {(address.firstName || address.lastName) && (\n                <p className=\"fn address-entry\">\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n            )}\n\n            {(address.phone || address.company) && (\n                <p className=\"address-entry\">\n                    <span className=\"company-name\">{`${address.company} `}</span>\n                    <span className=\"tel\">{address.phone}</span>\n                </p>\n            )}\n\n            <div className=\"adr\">\n                <p className=\"street-address address-entry\">\n                    <span className=\"address-line-1\">{`${address.address1} `}</span>\n                    {address.address2 && (\n                        <span className=\"address-line-2\">{` / ${address.address2}`}</span>\n                    )}\n                </p>\n\n                <p className=\"address-entry\">\n                    {address.city && <span className=\"locality\">{`${address.city}, `}</span>}\n                    {address.localizedProvince && (\n                        <span className=\"region\">{`${address.localizedProvince}, `}</span>\n                    )}\n                    {address.postalCode && (\n                        <span className=\"postal-code\">{`${address.postalCode} / `}</span>\n                    )}\n                    {address.localizedCountry && (\n                        <span className=\"country-name\">{`${address.localizedCountry} `}</span>\n                    )}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport function mapToStaticAddressProps(\n    context: CheckoutContextProps,\n    { address, type }: StaticAddressProps,\n): WithCheckoutStaticAddressProps | null {\n    const {\n        checkoutState: {\n            data: { getBillingCountries, getShippingCountries, getBillingAddressFields, getShippingAddressFields },\n        },\n    } = context;\n\n    return {\n        countries: type === AddressType.Billing\n            ? getBillingCountries()\n            : getShippingCountries(),\n        fields:\n            type === AddressType.Billing\n                ? getBillingAddressFields(address.countryCode)\n                : type === AddressType.Shipping\n                ? getShippingAddressFields(address.countryCode)\n                : undefined,\n    };\n}\n\nexport default withCheckout(mapToStaticAddressProps)(memo(StaticAddress));\n","import { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string, StringSchema } from 'yup';\n\nimport getCustomFormFieldsValidationSchema, {\n    FormFieldsValidationSchemaOptions,\n} from './getCustomFormFieldsValidationSchema';\n\nexport const WHITELIST_REGEXP = /^[^<>]*$/;\n\nexport interface FormFieldValues {\n    [key: string]: string | { [id: string]: any };\n}\n\nexport default memoize(function getFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return object({\n        ...formFields\n            .filter(({ custom }) => !custom)\n            .reduce((schema, { name, required, label }) => {\n                schema[name] = string();\n\n                if (required) {\n                    schema[name] = schema[name]\n                        .trim()\n                        .required(translate('required', { label, name }));\n                }\n\n                schema[name] = schema[name].matches(\n                    WHITELIST_REGEXP,\n                    translate('invalid', { name, label }),\n                );\n\n                return schema;\n            }, {} as { [key: string]: StringSchema }),\n    }).concat(\n        getCustomFormFieldsValidationSchema({ formFields, translate }),\n    ) as ObjectSchema<FormFieldValues>;\n});\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from 'lodash';\nimport { ObjectSchema } from 'yup';\n\nimport {\n    FormFieldValues,\n    getFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nexport interface AddressFormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    language?: LanguageService;\n}\n\nexport function getTranslateAddressError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    const requiredFieldErrorTranslationIds: { [fieldName: string]: string } = {\n        countryCode: 'address.country',\n        firstName: 'address.first_name',\n        lastName: 'address.last_name',\n        company: 'address.company_name',\n        address1: 'address.address_line_1',\n        address2: 'address.address_line_2',\n        city: 'address.city',\n        stateOrProvince: 'address.state',\n        stateOrProvinceCode: 'address.state',\n        postalCode: 'address.postal_code',\n        phone: 'address.phone_number',\n    };\n\n    return (type, { label, name, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            if (requiredFieldErrorTranslationIds[name]) {\n                return language.translate(\n                    `${requiredFieldErrorTranslationIds[name]}_required_error`,\n                );\n            }\n\n            return language.translate(`address.custom_required_error`, { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate(`address.custom_max_error`, { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate(`address.custom_max_error`, { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate(`address.invalid_characters_error`, { label });\n        }\n    };\n}\n\nexport default memoize(function getAddressFormFieldsValidationSchema({\n    formFields,\n    language,\n}: AddressFormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return getFormFieldsValidationSchema({\n        formFields,\n        translate: getTranslateAddressError(language),\n    });\n});\n","import { Address, FormField } from '@bigcommerce/checkout-sdk';\n\nimport getAddressFormFieldsValidationSchema from './getAddressFormFieldsValidationSchema';\nimport mapAddressToFormValues from './mapAddressToFormValues';\n\nexport default function isValidAddress(address: Address, formFields: FormField[]): boolean {\n    const addressSchema = getAddressFormFieldsValidationSchema({ formFields });\n\n    return addressSchema.isValidSync(mapAddressToFormValues(formFields, address));\n}\n","import { Address, AddressKey, FormField } from '@bigcommerce/checkout-sdk';\n\nimport { DynamicFormFieldType } from '../ui/form';\n\nexport type AddressFormValues = Pick<Address, Exclude<AddressKey, 'customFields'>> & {\n    customFields: { [id: string]: any };\n};\n\nexport default function mapAddressToFormValues(\n    fields: FormField[],\n    address?: Address,\n): AddressFormValues {\n    const values = {\n        ...fields.reduce(\n            (addressFormValues, { name, custom, fieldType, default: defaultValue }) => {\n                if (custom) {\n                    if (!addressFormValues.customFields) {\n                        addressFormValues.customFields = {};\n                    }\n\n                    const field =\n                        address &&\n                        address.customFields &&\n                        address.customFields.find(({ fieldId }) => fieldId === name);\n\n                    const fieldValue = field && field.fieldValue;\n\n                    addressFormValues.customFields[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    );\n\n                    return addressFormValues;\n                }\n\n                if (isSystemAddressFieldName(name)) {\n                    const fieldValue = address && address[name];\n                    addressFormValues[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    )?.toString() || '';\n                }\n\n                return addressFormValues;\n            },\n            {} as AddressFormValues,\n        ),\n    };\n\n    values.shouldSaveAddress =\n        address && address.shouldSaveAddress !== undefined ? address.shouldSaveAddress : true;\n\n    // Manually backfill stateOrProvince to avoid Formik warning (uncontrolled to controlled input)\n    if (values.stateOrProvince === undefined) {\n        values.stateOrProvince = '';\n    }\n\n    if (values.stateOrProvinceCode === undefined) {\n        values.stateOrProvinceCode = '';\n    }\n\n    return values;\n}\n\nfunction getValue(\n    fieldType?: string,\n    fieldValue?: string | string[] | number,\n    defaultValue?: string,\n): string | string[] | number | Date | undefined {\n    if (fieldValue === undefined || fieldValue === null) {\n        return getDefaultValue(fieldType, defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.date && typeof fieldValue === 'string') {\n        if (fieldValue) {\n            const [year, month, day] = fieldValue.split('-');\n            return new Date(Number(year), Number(month)-1, Number(day));\n        }\n        return undefined;\n    }\n\n    return fieldValue;\n}\n\nfunction getDefaultValue(fieldType?: string, defaultValue?: string): string | string[] | Date {\n    if (defaultValue && fieldType === DynamicFormFieldType.date) {\n        return new Date(defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.checkbox) {\n        return [];\n    }\n\n    return defaultValue || '';\n}\n\nfunction isSystemAddressFieldName(\n    fieldName: string,\n): fieldName is Exclude<keyof Address, 'customFields' | 'shouldSaveAddress'> {\n    return fieldName !== 'customFields' && fieldName !== 'shouldSaveAddress';\n}\n","import { AnalyticsContext } from '@bigcommerce/checkout/analytics';\nimport { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nconst withAnalytics = createInjectHoc(AnalyticsContext, { displayNamePrefix: 'WithAnalytics' });\n\nexport default withAnalytics;\n","import { Address, CheckoutPayment, FormField } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\nimport { withCheckout } from '../checkout';\nimport { EMPTY_ARRAY } from '../common/utility';\n\nexport interface StaticBillingAddressProps {\n    address: Address;\n}\n\ninterface WithCheckoutStaticBillingAddressProps {\n    fields: FormField[];\n    payments?: CheckoutPayment[];\n}\n\nconst StaticBillingAddress: FunctionComponent<\n    StaticBillingAddressProps & WithCheckoutStaticBillingAddressProps\n> = ({ address, payments = EMPTY_ARRAY }) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    if (payments.find((payment) => payment.providerId === 'amazonpay')) {\n        return (\n            <p>\n                <TranslatedString id=\"billing.billing_address_amazonpay\" />\n            </p>\n        );\n    }\n\n    return (\n        <>\n            <StaticAddress address={address} type={AddressType.Billing} />\n\n            {showPayPalFastlaneLabel && <PoweredByPayPalFastlaneLabel />}\n        </>\n    );\n};\n\nexport function mapToStaticBillingAddressProps(\n    { checkoutState }: CheckoutContextProps,\n    { address }: StaticBillingAddressProps,\n): WithCheckoutStaticBillingAddressProps | null {\n    const {\n        data: { getBillingAddressFields, getCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n\n    return {\n        fields: getBillingAddressFields(address.countryCode),\n        payments: checkout && checkout.payments,\n    };\n}\n\nexport default withCheckout(mapToStaticBillingAddressProps)(memo(StaticBillingAddress));\n","import { createContext } from 'react';\n\nimport { ExtensionState } from './ExtensionProvider';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionContextProps {\n    isExtensionEnabled: () => boolean;\n    extensionService: ExtensionService;\n    extensionState: ExtensionState;\n}\n\nexport const ExtensionContext = createContext<ExtensionContextProps | undefined>(undefined);\n","import { ExtensionAction, ExtensionActionType, ExtensionState } from './ExtensionProvider';\n\nexport const extensionReducer = (\n    state: ExtensionState,\n    action: ExtensionAction,\n): ExtensionState => {\n    switch (action.type) {\n        case ExtensionActionType.SHOW_LOADING_INDICATOR:\n            return { ...state, isShowingLoadingIndicator: action.payload };\n\n        default:\n            return state;\n    }\n};\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, HandlerProps } from './CommandHandler';\n\nexport function createReloadCheckoutHandler({\n    checkoutService,\n}: HandlerProps): CommandHandler<ExtensionCommandType.ReloadCheckout> {\n    return {\n        commandType: ExtensionCommandType.ReloadCheckout,\n        handler: () => {\n            void checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id);\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, HandlerProps } from './CommandHandler';\n\nexport function createSetIframeStyleHandler({\n    extension,\n}: HandlerProps): CommandHandler<ExtensionCommandType.SetIframeStyle> {\n    return {\n        commandType: ExtensionCommandType.SetIframeStyle,\n        handler: (data) => {\n            const { style } = data.payload;\n            const extensionContainer = document.querySelector(\n                `div[data-extension-id=\"${extension.id}\"]`,\n            );\n            const iframe = extensionContainer?.querySelector('iframe');\n\n            if (iframe) {\n                Object.assign(iframe.style, style);\n            }\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../ExtensionProvider';\n\nimport { CommandHandler, HandlerProps } from './CommandHandler';\n\nexport function createShowLoadingIndicatorHandler({\n    dispatch,\n}: HandlerProps): CommandHandler<ExtensionCommandType.ShowLoadingIndicator> {\n    return {\n        commandType: ExtensionCommandType.ShowLoadingIndicator,\n        handler: (data) => {\n            const { show } = data.payload;\n\n            dispatch({\n                type: ExtensionActionType.SHOW_LOADING_INDICATOR,\n                payload: show,\n            });\n        },\n    };\n}\n","import {\n    CheckoutService,\n    Extension,\n    ExtensionCommandMap,\n    ExtensionRegion,\n} from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { ExtensionAction } from './ExtensionProvider';\nimport * as handlerFactories from './handlers';\nimport { CommandHandler } from './handlers/CommandHandler';\n\nexport class ExtensionService {\n    private handlers: { [extensionId: string]: Array<() => void> } = {};\n\n    constructor(\n        private checkoutService: CheckoutService,\n        private dispatch: React.Dispatch<ExtensionAction>,\n    ) {}\n\n    async loadExtensions(): Promise<void> {\n        await this.checkoutService.loadExtensions();\n    }\n\n    preloadExtensions(): void {\n        const state = this.checkoutService.getState();\n        const extensions = state.data.getExtensions();\n        const cartId = state.data.getCart()?.id;\n        const parentOrigin = state.data.getConfig()?.links.siteLink;\n\n        if (!cartId || !parentOrigin) {\n            return;\n        }\n\n        extensions?.forEach((extension) => {\n            const url = new URL(extension.url);\n\n            url.searchParams.set('extensionId', extension.id);\n            url.searchParams.set('cartId', cartId);\n            url.searchParams.set('parentOrigin', parentOrigin);\n\n            const link = document.createElement('link');\n\n            link.rel = 'preload';\n            link.as = 'document';\n            link.href = url.toString();\n\n            const head = document.head;\n\n            head.appendChild(link);\n        });\n    }\n\n    async renderExtension(container: string, region: ExtensionRegion): Promise<void> {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        await this.checkoutService.renderExtension(container, region);\n\n        this.registerHandlers(extension);\n    }\n\n    removeListeners(region: ExtensionRegion): void {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        const removers = this.handlers[extension.id];\n\n        if (!removers) {\n            return;\n        }\n\n        for (const remover of removers) {\n            remover();\n        }\n\n        delete this.handlers[extension.id];\n    }\n\n    isRegionEnabled(region: ExtensionRegion): boolean {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        return Boolean(extension);\n    }\n\n    private registerHandlers(extension: Extension): void {\n        const handlerProps = {\n            checkoutService: this.checkoutService,\n            dispatch: this.dispatch,\n            extension,\n        };\n\n        if (!this.handlers[extension.id]) {\n            this.handlers[extension.id] = [];\n        }\n\n        Object.values(handlerFactories).forEach((createHandlerFactory) => {\n            const handlerFactory = createHandlerFactory(handlerProps);\n\n            if (this.isCommandHandler(handlerFactory.commandType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionCommand(\n                        extension.id,\n                        handlerFactory.commandType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n    }\n\n    private isCommandHandler<T extends keyof ExtensionCommandMap>(\n        type: T,\n        handler: CommandHandler<any>,\n    ): handler is CommandHandler<T> {\n        return handler.commandType === type;\n    }\n}\n","import { CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useReducer } from 'react';\n\nimport { ExtensionContext } from './ExtensionContext';\nimport { extensionReducer } from './ExtensionReducer';\nimport { ExtensionService } from './ExtensionService';\nimport { isCheckoutExtensionEnabled } from './isCheckoutExtensionEnabled';\n\nexport interface ExtensionState {\n    isShowingLoadingIndicator: boolean;\n}\n\nexport interface ExtensionAction {\n    type: ExtensionActionType;\n    payload: boolean;\n}\n\nexport enum ExtensionActionType {\n    SHOW_LOADING_INDICATOR,\n}\n\nexport interface ExtensionProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n}\n\nexport const ExtensionProvider = ({ checkoutService, children }: ExtensionProviderProps) => {\n    const isExtensionEnabled = () =>\n        isCheckoutExtensionEnabled(checkoutService.getState().data.getConfig()?.checkoutSettings);\n    const [extensionState, dispatch] = useReducer(extensionReducer, {\n        isShowingLoadingIndicator: false,\n    });\n    const extensionService = new ExtensionService(checkoutService, dispatch);\n\n    const extensionValues = {\n        isExtensionEnabled,\n        extensionService,\n        extensionState,\n    };\n\n    return (\n        <ExtensionContext.Provider value={extensionValues}>{children}</ExtensionContext.Provider>\n    );\n};\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport function isCheckoutExtensionEnabled(\n    checkoutSettings: CheckoutSettings | undefined,\n): boolean {\n    return Boolean(checkoutSettings?.features['PROJECT-5029.checkout_extension']);\n}\n","import CheckoutSupport from './CheckoutSupport';\n\nexport default class NoopCheckoutSupport implements CheckoutSupport {\n    isSupported(): boolean {\n        return true;\n    }\n}\n","import { CustomError, setPrototypeOf } from '../../common/error';\n\nexport class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport } from '../checkout';\n\nimport { EmbeddedCheckoutUnsupportedError } from './errors';\n\nexport default class EmbeddedCheckoutSupport implements CheckoutSupport {\n    constructor(private unsupportedMethods: string[], private langService: LanguageService) {}\n\n    isSupported(...ids: string[]): boolean {\n        const unsupportedMethods = ids.filter((id) => this.unsupportedMethods.indexOf(id) >= 0);\n\n        if (unsupportedMethods.length === 0) {\n            return true;\n        }\n\n        throw new EmbeddedCheckoutUnsupportedError(\n            this.langService.translate('embedded_checkout.unsupported_error', {\n                methods: unsupportedMethods.join(', '),\n            }),\n        );\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport, NoopCheckoutSupport } from '../checkout';\n\nimport EmbeddedCheckoutSupport from './EmbeddedCheckoutSupport';\nimport isEmbedded from './isEmbedded';\n\nconst UNSUPPORTED_METHODS = ['afterpay', 'applepay', 'amazonpay', 'chasepay', 'googlepay', 'klarna', 'masterpass'];\n\nexport default function createEmbeddedCheckoutSupport(language: LanguageService): CheckoutSupport {\n    return isEmbedded()\n        ? new EmbeddedCheckoutSupport(UNSUPPORTED_METHODS, language)\n        : new NoopCheckoutSupport();\n}\n","import { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const withExtension = createInjectHoc(ExtensionContext, {\n    displayNamePrefix: 'WithExtension',\n});\n","import React, { PureComponent, ReactNode } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport { LoadingOverlay } from '../ui/loading';\n\nexport interface EmptyCartMessageProps {\n    waitInterval?: number;\n    loginUrl: string;\n}\n\ninterface EmptyCartMessageState {\n    isWaiting: boolean;\n}\n\nexport default class EmptyCartMessage extends PureComponent<\n    EmptyCartMessageProps,\n    EmptyCartMessageState\n> {\n    state: EmptyCartMessageState = {\n        isWaiting: true,\n    };\n\n    private waitToken?: number;\n\n    componentDidMount(): void {\n        const { waitInterval } = this.props;\n\n        this.waitToken = setTimeout(() => {\n            this.setState({ isWaiting: false });\n        }, waitInterval);\n    }\n\n    componentWillUnmount(): void {\n        clearInterval(this.waitToken);\n    }\n\n    render(): ReactNode {\n        const { loginUrl } = this.props;\n        const { isWaiting } = this.state;\n\n        return (\n            <LoadingOverlay hideContentWhenLoading isLoading={isWaiting}>\n                <TranslatedHtml data={{ url: loginUrl }} id=\"cart.empty_cart_message\" />\n            </LoadingOverlay>\n        );\n    }\n}\n","enum CustomerViewType {\n    Guest = 'guest',\n    Login = 'login',\n    SuggestedLogin = 'suggested_login',\n    EnforcedLogin = 'enforced_login',\n    CancellableEnforcedLogin = 'cancellable_enforced_login',\n    CreateAccount = 'create_account',\n}\n\nexport default CustomerViewType;\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface WalletButtonsProps {\n    buttonsCount: number;\n}\n\nconst WalletButtonContainerSkeleton: FunctionComponent<\n    LoadingSkeletonProps & WalletButtonsProps\n> = ({ buttonsCount, children, isLoading }) => {\n    const renderWhileLoading = true;\n    const skeleton = (\n        <div className=\"checkoutRemote customer-skeleton\">\n            {Array(buttonsCount)\n                .fill(0)\n                .map((_v, i) => (\n                    <div className=\"skeleton-container\" key={`skeleton-container-${i}`}>\n                        <div className=\"input-skeleton\" />\n                    </div>\n                ))}\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default WalletButtonContainerSkeleton;\n","interface ApplePayWindow extends Window {\n    ApplePaySession: void;\n}\n\nexport default function isApplePayWindow(window: Window): window is ApplePayWindow {\n    return 'ApplePaySession' in window;\n}\n","import { isApplePayWindow } from \"../common/utility\";\n\nconst APPLE_PAY = 'applepay';\n\n// TODO: The API should tell UI which payment method offers its own checkout button\nexport const SUPPORTED_METHODS: string[] = [\n    'amazonpay',\n    APPLE_PAY,\n    'braintreevisacheckout',\n    'braintreepaypal',\n    'braintreepaypalcredit',\n    'chasepay',\n    'masterpass',\n    'paypalcommerce',\n    'paypalcommercevenmo',\n    'paypalcommercecredit',\n    'googlepayadyenv2',\n    'googlepayadyenv3',\n    'googlepayauthorizenet',\n    'googlepaybnz',\n    'googlepaybraintree',\n    'googlepaycheckoutcom',\n    'googlepaycybersourcev2',\n    'googlepayorbital',\n    'googlepaystripe',\n    'googlepaystripeupe',\n    'googlepayworldpayaccess',\n    'googlepaypaypalcommerce',\n];\n\nexport const getSupportedMethodIds = (methodIds: string[]): string[] => {\n    return methodIds.filter((methodId) => {\n        if (methodId === APPLE_PAY && !isApplePayWindow(window)) {\n            return false;\n        }\n\n        return SUPPORTED_METHODS.indexOf(methodId) !== -1;\n    });\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nconst WALLET_BUTTON_HEIGHT = 36;\n\nexport interface CheckoutButtonProps {\n    containerId: string;\n    methodId: string;\n    isShowingWalletButtonsOnTop?: boolean;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodId: string): void;\n}\n\nexport default class CheckoutButton extends PureComponent<CheckoutButtonProps> {\n    componentDidMount() {\n        const {\n            containerId,\n            initialize,\n            isShowingWalletButtonsOnTop,\n            methodId,\n            onError,\n            onClick = noop,\n        } = this.props;\n\n        const heightOption = isShowingWalletButtonsOnTop && (methodId === 'braintreepaypal' || methodId === 'braintreepaypalcredit' )\n            ? { buttonHeight: WALLET_BUTTON_HEIGHT }\n            : {};\n\n        initialize({\n            methodId,\n            [methodId]: {\n                ...heightOption,\n                container: containerId,\n                onError,\n                onClick: () => onClick(methodId),\n            },\n        });\n    }\n\n    componentWillUnmount() {\n        const { deinitialize, methodId } = this.props;\n\n        deinitialize({ methodId });\n    }\n\n    render() {\n        const { containerId } = this.props;\n\n        return <div id={containerId} />;\n    }\n}\n","import { noop } from 'lodash';\n\nimport { isBuyNowCart } from '../common/utility';\n\nexport default function navigateToOrderConfirmation(\n    orderId?: number,\n): Promise<never> {\n    let url: string;\n\n    if (orderId && isBuyNowCart()) {\n        url = `/checkout/order-confirmation/${orderId.toString()}`;\n    } else {\n        url = `${window.location.pathname.replace(/\\/$/, '')}/order-confirmation`;\n    }\n\n    window.location.replace(url);\n\n    return new Promise(noop);\n}\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\n\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\n\nimport { navigateToOrderConfirmation } from '../../checkout';\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst ApplePayButton: FunctionComponent<CheckoutButtonProps> = ({\n    initialize,\n    onError,\n    onClick = noop,\n    ...rest\n}) => {\n    const localeContext = useContext(LocaleContext);\n    const initializeOptions = useCallback(\n        (options: CustomerInitializeOptions) =>\n            initialize({\n                ...options,\n                applepay: {\n                    container: rest.containerId,\n                    shippingLabel: localeContext?.language.translate('cart.shipping_text'),\n                    subtotalLabel: localeContext?.language.translate('cart.subtotal_text'),\n                    onError,\n                    onClick: () => onClick(rest.methodId),\n                    onPaymentAuthorize: navigateToOrderConfirmation,\n                },\n            }),\n        [initialize, localeContext, onError, rest.containerId],\n    );\n\n    return <CheckoutButton initialize={initializeOptions} {...rest} />;\n};\n\nexport default ApplePayButton;\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst AmazonPayV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\n    useEffect(() => {\n        beautifyAmazonButton();\n    }, []);\n\n    return (\n        <div className=\"AmazonPayContainer\">\n            <CheckoutButton {...props} />\n        </div>\n    );\n}\n\nexport default AmazonPayV2Button;\n\nconst beautifyAmazonButton = (): void => {\n    if (!document.querySelector('.checkout-button-container')) {\n        return;\n    }\n\n    const container = document.querySelector('#amazonpayCheckoutButton > div') as unknown as HTMLElement;\n    const amazonButton = container?.shadowRoot?.querySelector('.amazonpay-button-view1') as unknown as HTMLElement;\n\n    if (container && amazonButton) {\n        amazonButton.style.height = '36px';\n        return;\n    }\n\n    setTimeout(beautifyAmazonButton, 10);\n}\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\nimport { noop } from 'lodash';\n\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\n\nimport { navigateToOrderConfirmation } from '../../checkout';\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst PayPalCommerceButton: FunctionComponent<CheckoutButtonProps> = ({\n    methodId,\n    initialize,\n    onError,\n    onClick = noop,\n    ...rest\n}) => {\n    const localeContext = useContext(LocaleContext);\n    const initializeOptions = useCallback(\n        (options: CustomerInitializeOptions) =>\n            initialize({\n                ...options,\n                [methodId]: {\n                    container: rest.containerId,\n                    onError,\n                    onClick: () => onClick(methodId),\n                    onComplete: navigateToOrderConfirmation,\n                },\n            }),\n        [initialize, localeContext, onError, rest.containerId],\n    );\n\n    return <CheckoutButton initialize={initializeOptions} methodId={methodId} {...rest} />;\n};\n\nexport default PayPalCommerceButton;\n","import { CustomerInitializeOptions, CustomerRequestOptions } from \"@bigcommerce/checkout-sdk\";\nimport React, { FunctionComponent } from \"react\";\n\nimport CheckoutButton from \"./CheckoutButton\";\nimport { AmazonPayV2Button, ApplePayButton, PayPalCommerceButton } from \"./customWalletButton\";\n\ninterface CheckoutButtonV1ResolverProps {\n    methodId: string;\n    deinitialize(options: CustomerRequestOptions): void;\n    isShowingWalletButtonsOnTop?: boolean;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodName: string): void;\n}\n\nconst CheckoutButtonV1Resolver: FunctionComponent<CheckoutButtonV1ResolverProps> = ({\n    isShowingWalletButtonsOnTop= false,\n    onError,\n    methodId,\n    ...rest\n}) => {\n    switch (methodId) {\n        case 'applepay':\n            return (\n                <ApplePayButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n\n        case 'amazonpay':\n            return (\n                <AmazonPayV2Button\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n\n        case 'paypalcommerce':\n        case 'paypalcommercecredit':\n            return (\n                <PayPalCommerceButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n    }\n\n    return <CheckoutButton\n            containerId={`${methodId}CheckoutButton`}\n            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n            key={methodId}\n            methodId={methodId}\n            onError={onError}\n            {...rest}\n        />;\n};\n\nexport default CheckoutButtonV1Resolver;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { WalletButtonsContainerSkeleton } from '@bigcommerce/checkout/ui';\n\n\nimport { withCheckout } from '../checkout';\n\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\n\ninterface CheckoutButtonContainerProps {\n    isPaymentStepActive: boolean;\n    checkEmbeddedSupport(methodIds: string[]): void;\n    onUnhandledError(error: Error): void;\n    onWalletButtonClick(methodId: string): void;\n}\n\ninterface WithCheckoutCheckoutButtonContainerProps {\n    availableMethodIds: string[];\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n    isLoading: boolean;\n}\n\nconst paypalCommerceIds = [\n    'paypalcommerce',\n    'paypalcommercecredit',\n    'paypalcommercevenmo',\n];\n\nconst isPayPalCommerce = (methodId: string): boolean => paypalCommerceIds.includes(methodId);\n\nconst CheckoutButtonContainer: FunctionComponent<CheckoutButtonContainerProps & WithCheckoutCheckoutButtonContainerProps> = (\n    {\n        availableMethodIds,\n        checkoutService,\n        checkoutState,\n        checkEmbeddedSupport,\n        isLoading,\n        isPaymentStepActive,\n        onUnhandledError,\n        onWalletButtonClick,\n    }) => {\n    const { language } = useLocale();\n\n    try {\n        checkEmbeddedSupport(availableMethodIds);\n    } catch (error) {\n        return null;\n    }\n\n    const renderButtons = () => availableMethodIds.map((methodId) => {\n        if (isPaymentStepActive && isPayPalCommerce(methodId)) {\n            return null;\n        }\n\n        const ResolvedCheckoutButton = resolveCheckoutButton({ id: methodId });\n\n        if (!ResolvedCheckoutButton) {\n            return <CheckoutButtonV1Resolver\n                deinitialize={checkoutService.deinitializeCustomer}\n                initialize={checkoutService.initializeCustomer}\n                isShowingWalletButtonsOnTop={true}\n                key={methodId}\n                methodId={methodId}\n                onError={onUnhandledError}\n                onClick={onWalletButtonClick}\n            />\n        }\n\n        return <ResolvedCheckoutButton\n                    checkoutService={checkoutService}\n                    checkoutState={checkoutState}\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    language={language}\n                    methodId={methodId}\n                    onUnhandledError={onUnhandledError}\n                    onWalletButtonClick={onWalletButtonClick}\n                />;\n    });\n\n    return (\n        <div className='checkout-button-container'\n             style={ isPaymentStepActive ? { position: 'absolute', left: '0', top: '-100%' } : undefined }\n        >\n            <p>\n                <TranslatedString id=\"remote.start_with_text\" />\n            </p>\n            <div className='checkout-buttons-auto-layout'>\n                <WalletButtonsContainerSkeleton buttonsCount={availableMethodIds.length} isLoading={isLoading}>\n                    <div className=\"checkoutRemote\">\n                        {renderButtons()}\n                    </div>\n                </WalletButtonsContainerSkeleton>\n            </div>\n            <div className='checkout-separator'><span><TranslatedString id='remote.or_text' /></span></div>\n        </div>\n    );\n};\n\nfunction mapToCheckoutButtonContainerProps({\n    checkoutState,\n    checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonContainerProps | null {\n    const {\n        data: {\n            getConfig,\n            getCustomer,\n            isPaymentDataRequired,\n        },\n        statuses: {\n            isInitializedCustomer,\n        },\n        errors: {\n            getInitializeCustomerError,\n        }\n     } = checkoutState;\n    const config = getConfig();\n    const availableMethodIds = getSupportedMethodIds(config?.checkoutSettings.remoteCheckoutProviders ?? []);\n    const customer = getCustomer();\n\n    if (!isPaymentDataRequired()) {\n        return null;\n    }\n\n    if (!config || availableMethodIds.length === 0 || !customer?.isGuest) {\n        return null;\n    }\n\n    const isLoading = availableMethodIds.filter(\n        (methodId) => Boolean(getInitializeCustomerError(methodId)) || isInitializedCustomer(methodId)\n    ).length !== availableMethodIds.length;\n\n    return {\n        checkoutService,\n        checkoutState,\n        availableMethodIds,\n        isLoading,\n    }\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonContainerProps)(CheckoutButtonContainer));\n","import { ComponentType } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport { resolveComponent } from '../common/resolver';\n\nexport default function resolveCheckoutButton(\n    resolveId: CheckoutButtonResolveId,\n): ComponentType<CheckoutButtonProps> | undefined {\n    return resolveComponent<CheckoutButtonResolveId, CheckoutButtonProps>(\n        resolveId,\n        require('../generated/checkoutButtons'),\n    );\n}\n","import { useContext, useMemo } from 'react';\n\nimport AnalyticsContext from './AnalyticsContext';\n\nconst useAnalytics = () => {\n    const analyticsContext = useContext(AnalyticsContext);\n\n    if (!analyticsContext) {\n        throw new Error('useAnalytics must be used within an <AnalyticsProvider>');\n    }\n\n    return useMemo(\n        () => ({\n            analyticsTracker: analyticsContext.analyticsTracker,\n        }),\n        [analyticsContext],\n    );\n};\n\nexport default useAnalytics;\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useEffect, useState } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { stopPropagation } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button } from '../../ui/button';\nimport { IconBolt } from '../../ui/icon';\n\nexport interface BoltCheckoutSuggestionProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    methodId: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    onUnhandledError?(error: Error): void;\n}\n\nconst BoltCheckoutSuggestion: FunctionComponent<BoltCheckoutSuggestionProps> = ({\n    isExecutingPaymentMethodCheckout,\n    methodId,\n    deinitializeCustomer,\n    executePaymentMethodCheckout,\n    initializeCustomer,\n    onUnhandledError = noop,\n}) => {\n    const [showSuggestion, setShowSuggestion] = useState<boolean>(false);\n    const { analyticsTracker } = useAnalytics();\n\n    useEffect(() => {\n        deinitializeCustomer({ methodId });\n\n        try {\n            initializeCustomer({\n                methodId,\n                bolt: {\n                    onInit: (hasBoltAccount, email) => {\n                        setShowSuggestion(hasBoltAccount);\n\n                        if (email) {\n                            analyticsTracker.customerSuggestionInit({hasBoltAccount});\n                        }\n                    },\n                },\n            });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        return () => {\n            deinitializeCustomer({ methodId });\n        };\n    }, [initializeCustomer, deinitializeCustomer, methodId, onUnhandledError]);\n\n    if (!showSuggestion) {\n        return null;\n    }\n\n    const handleActionClick = async () => {\n        await executePaymentMethodCheckout({ methodId });\n    };\n\n    return (\n        <div className=\"checkoutSuggestion\" onClick={stopPropagation()}>\n            <p className=\"checkoutSuggestion-message\">\n                <TranslatedString\n                    data={{\n                        provider: 'Bolt',\n                        providerFlow: 'Bolt Checkout',\n                    }}\n                    id=\"customer.suggestion_text\"\n                />\n            </p>\n            <Button\n                className=\"checkoutSuggestion-button checkoutSuggestion-button--bolt\"\n                data-test=\"suggestion-action-button\"\n                isLoading={isExecutingPaymentMethodCheckout}\n                onClick={handleActionClick}\n            >\n                <IconBolt additionalClassName=\"checkoutSuggestion-button-icon--bolt\" />\n                <TranslatedString\n                    data={{ providerFlow: 'Bolt Checkout' }}\n                    id=\"customer.suggestion_action\"\n                />\n            </Button>\n        </div>\n    );\n};\n\nexport default memo(BoltCheckoutSuggestion);\n","import { SyntheticEvent } from 'react';\n\nexport default function stopPropagation<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.stopPropagation();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../../checkout';\nimport { PaymentMethodId } from '../../payment/paymentMethod';\n\n\nimport BoltCheckoutSuggestion from './BoltCheckoutSuggestion';\n\nexport interface CheckoutSuggestionProps {\n    onUnhandledError?(error: Error): void;\n}\n\nexport interface WithCheckoutSuggestionsProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    providerWithCustomCheckout?: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n}\n\nconst CheckoutSuggestion: FunctionComponent<\n    WithCheckoutSuggestionsProps & CheckoutSuggestionProps\n> = ({\n    providerWithCustomCheckout,\n    executePaymentMethodCheckout,\n    ...rest\n}) => {\n    const { analyticsTracker } = useAnalytics();\n\n    const handleExecutePaymentMethodCheckout = (options: ExecutePaymentMethodCheckoutOptions) => {\n        analyticsTracker.customerSuggestionExecute();\n\n        return executePaymentMethodCheckout(options);\n    }\n\n    if (providerWithCustomCheckout === PaymentMethodId.Bolt) {\n        return <BoltCheckoutSuggestion\n                    executePaymentMethodCheckout={handleExecutePaymentMethodCheckout}\n                    methodId={providerWithCustomCheckout}\n                    {...rest}\n                />;\n    }\n\n    return null;\n};\n\nconst mapToCheckoutSuggestionProps = ({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutSuggestionsProps | null => {\n    const {\n        data: { getCheckout, getConfig },\n        statuses: { isExecutingPaymentMethodCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n\n    if (!checkout || !config) {\n        return null;\n    }\n\n    return {\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        providerWithCustomCheckout: config.checkoutSettings.providerWithCustomCheckout || undefined,\n    };\n};\n\nexport default withCheckout(mapToCheckoutSuggestionProps)(memo(CheckoutSuggestion));\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { isApplePayWindow } from '../common/utility';\n\nimport CheckoutButton from './CheckoutButton';\nimport { AmazonPayV2Button, ApplePayButton, PayPalCommerceButton } from './customWalletButton';\n\nconst APPLE_PAY = 'applepay';\n\n// TODO: The API should tell UI which payment method offers its own checkout button\nexport const SUPPORTED_METHODS: string[] = [\n    'amazonpay',\n    APPLE_PAY,\n    'braintreevisacheckout',\n    'braintreepaypal',\n    'braintreepaypalcredit',\n    'chasepay',\n    'masterpass',\n    'paypalcommerce',\n    'paypalcommercevenmo',\n    'paypalcommercecredit',\n    'googlepayadyenv2',\n    'googlepayadyenv3',\n    'googlepayauthorizenet',\n    'googlepaybnz',\n    'googlepaybraintree',\n    'googlepaypaypalcommerce',\n    'googlepaycheckoutcom',\n    'googlepaycybersourcev2',\n    'googlepayorbital',\n    'googlepaystripe',\n    'googlepaystripeupe',\n    'googlepayworldpayaccess',\n];\n\nexport interface CheckoutButtonListProps {\n    methodIds?: string[];\n    isInitializing?: boolean;\n    isShowingWalletButtonsOnTop?: boolean;\n    hideText?: boolean;\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodId: string): void;\n}\n\nexport const filterUnsupportedMethodIds = (methodIds:string[]): string[] => {\n    return (methodIds).filter((methodId) => {\n        if (methodId === APPLE_PAY && !isApplePayWindow(window)) {\n            return false;\n        }\n\n        return SUPPORTED_METHODS.indexOf(methodId) !== -1;\n    });\n}\n\nconst CheckoutButtonList: FunctionComponent<CheckoutButtonListProps> = ({\n    checkEmbeddedSupport,\n    onError,\n    isInitializing = false,\n    isShowingWalletButtonsOnTop= false,\n    methodIds,\n    hideText = false,\n    ...rest\n}) => {\n    const supportedMethodIds = filterUnsupportedMethodIds(methodIds ?? []);\n\n    if (supportedMethodIds.length === 0) {\n        return null;\n    }\n\n    if (checkEmbeddedSupport) {\n        try {\n            checkEmbeddedSupport(supportedMethodIds);\n        } catch (error) {\n            if (error instanceof Error && onError) {\n                onError(error);\n            } else {\n                throw error;\n            }\n\n            return null;\n        }\n    }\n\n    return (\n        <>\n            {!isInitializing && !hideText && (\n                <p>\n                    <TranslatedString id=\"remote.continue_with_text\" />\n                </p>\n            )}\n\n            <div className=\"checkoutRemote\">\n                {supportedMethodIds.map((methodId) => {\n                    if (methodId === 'applepay') {\n                        return (\n                            <ApplePayButton\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    if (methodId === 'amazonpay') {\n                        return (\n                            <AmazonPayV2Button\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    if (methodId === 'paypalcommerce' || methodId === 'paypalcommercecredit') {\n                        return (\n                            <PayPalCommerceButton\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    return (\n                        <CheckoutButton\n                            containerId={`${methodId}CheckoutButton`}\n                            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n                            key={methodId}\n                            methodId={methodId}\n                            onError={onError}\n                            {...rest}\n                        />\n                    );\n                })}\n            </div>\n        </>\n    );\n};\n\nexport default memo(CheckoutButtonList);\n","import { Checkout, Customer } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nimport { SUPPORTED_METHODS } from './CheckoutButtonList';\n\nconst SUPPORTED_SIGNOUT_METHODS = ['amazonpay'];\n\nexport const isSupportedSignoutMethod = (methodId: string): boolean => {\n    return SUPPORTED_SIGNOUT_METHODS.indexOf(methodId) > -1;\n};\n\nexport default function canSignOut(\n    customer: Customer,\n    checkout: Checkout,\n    methodId: string,\n): boolean {\n    if (isSupportedSignoutMethod(methodId)) {\n        return true;\n    }\n\n    if (customer.isGuest) {\n        return false;\n    }\n\n    // Return false if payment method offers its own checkout button\n    return every(\n        checkout.payments,\n        (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) === -1,\n    );\n}\n","import { CheckoutSelectors, CustomerRequestOptions, CustomError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../checkout';\nimport { isErrorWithType } from '../common/error';\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\n\nimport canSignOut, { isSupportedSignoutMethod } from './canSignOut';\n\nexport interface CustomerInfoProps {\n    onSignOut?(event: CustomerSignOutEvent): void;\n    onSignOutError?(error: CustomError): void;\n}\n\nexport interface CustomerSignOutEvent {\n    isCartEmpty: boolean;\n}\n\ninterface WithCheckoutCustomerInfoProps {\n    email: string;\n    methodId: string;\n    isSignedIn: boolean;\n    isSigningOut: boolean;\n    signOut(options?: CustomerRequestOptions): Promise<CheckoutSelectors>;\n}\n\nconst CustomerInfo: FunctionComponent<CustomerInfoProps & WithCheckoutCustomerInfoProps> = ({\n    email,\n    methodId,\n    isSignedIn,\n    isSigningOut,\n    onSignOut = noop,\n    onSignOutError = noop,\n    signOut,\n}) => {\n    const handleSignOut: () => Promise<void> = async () => {\n        try {\n            if (isSupportedSignoutMethod(methodId)) {\n                await signOut({ methodId });\n                onSignOut({ isCartEmpty: false });\n                window.location.reload();\n            } else {\n                await signOut();\n                onSignOut({ isCartEmpty: false });\n            }\n        } catch (error) {\n            if (isErrorWithType(error) && error.type === 'checkout_not_available') {\n                onSignOut({ isCartEmpty: true });\n            } else {\n                onSignOutError(error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"customerView\" data-test=\"checkout-customer-info\">\n            <div\n                className=\"customerView-body optimizedCheckout-contentPrimary\"\n                data-test=\"customer-info\"\n            >\n                {email}\n            </div>\n\n            <div className=\"customerView-actions\">\n                {isSignedIn && (\n                    <Button\n                        isLoading={isSigningOut}\n                        onClick={handleSignOut}\n                        size={ButtonSize.Tiny}\n                        testId=\"sign-out-link\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"customer.sign_out_action\" />\n                    </Button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nfunction mapToWithCheckoutCustomerInfoProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerInfoProps | null {\n    const {\n        data: { getBillingAddress, getCheckout, getCustomer },\n        statuses: { isSigningOut },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n\n    if (!billingAddress || !checkout || !customer) {\n        return null;\n    }\n\n    const methodId =\n        checkout.payments && checkout.payments.length === 1 ? checkout.payments[0].providerId : '';\n\n    return {\n        email: billingAddress.email || customer.email,\n        methodId,\n        isSignedIn: canSignOut(customer, checkout, methodId),\n        isSigningOut: isSigningOut(),\n        signOut: checkoutService.signOutCustomer,\n    };\n}\n\nexport default withCheckout(mapToWithCheckoutCustomerInfoProps)(CustomerInfo);\n","import { Cart } from '@bigcommerce/checkout-sdk';\n\n/**\n * Minimum charge amounts due to the Stripe documentation\n * https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts\n */\nenum stripeLinkMinAmount {\n    'USD' = 0.5,\n    'AED' = 2,\n    'AUD' = 0.5,\n    'BGN' = 1,\n    'BRL' = 0.5,\n    'CAD' = 0.5,\n    'CHF' = 0.5,\n    'CZK' = 15,\n    'DKK' = 2.5,\n    'EUR' = 0.5,\n    'GBP' = 0.3,\n    'HKD' = 4,\n    'HUF' = 175,\n    'INR' = 0.5,\n    'JPY' = 50,\n    'MXN' = 10,\n    'MYR' = 2,\n    'NOK' = 3,\n    'NZD' = 0.5,\n    'PLN' = 2,\n    'RON' = 2,\n    'SEK' = 3,\n    'SGD' = 0.5,\n    'THB' = 10,\n}\n\nconst isStripeLinkMinAmount = (code: string): code is keyof typeof stripeLinkMinAmount => {\n    return code in stripeLinkMinAmount;\n};\n\nconst shouldUseStripeLinkByMinimumAmount = (cart: Cart) => {\n    const {\n        currency: { code },\n        cartAmount,\n    } = cart;\n\n    if (isStripeLinkMinAmount(code) && cartAmount >= stripeLinkMinAmount[code]) {\n        return true;\n    }\n\n    return false;\n};\n\nexport default shouldUseStripeLinkByMinimumAmount;\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst CustomerSkeleton: FunctionComponent<LoadingSkeletonProps> = ({ children, isLoading }) => {\n    const skeleton = (\n        <div className=\"checkout-form customer-skeleton\">\n            <div className=\"customerEmail-container\">\n                <div className=\"customerEmail-body\">\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                    <div className=\"button-skeleton skeleton-container subscription-skeleton\" />\n                </div>\n                <div className=\"customerEmail-action customerEmail-floating--enabled\">\n                    <div className=\"button-skeleton skeleton-container\" />\n                </div>\n            </div>\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default CustomerSkeleton;\n","// NOTE: This is a legacy regex used to create accounts, more flexible than the current used one\n// we need to keep this regex for login validation as accounts might have been created using this regex\nexport const EMAIL_REGEXP =\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport { EMAIL_REGEXP } from './validationPatterns';\n\nexport interface EmailValidationSchemaOptions {\n    language: LanguageService;\n}\n\nexport default function getEmailValidationSchema({\n    language,\n}: EmailValidationSchemaOptions): ObjectSchema<{ email: string }> {\n    return object({\n        email: string()\n            .max(256)\n            .matches(EMAIL_REGEXP, language.translate('customer.email_invalid_error'))\n            .required(language.translate('customer.email_required_error')),\n    });\n}\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport {\n    CustomFormFieldValues,\n    getCustomFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport { PasswordRequirements } from './getPasswordRequirements';\n\nexport type CreateAccountFormValues = {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    acceptsMarketingEmails?: string[];\n    token?: string;\n} & CustomFormFieldValues;\n\nexport interface CreateCustomerValidationSchema {\n    formFields: FormField[];\n    language: LanguageService;\n    passwordRequirements: PasswordRequirements;\n}\n\nfunction getTranslateCreateCustomerError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    return (type, { label, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            return language.translate('customer.required_error', { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate('customer.max_error', { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate('customer.min_error', { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate('customer.invalid_characters_error', { label });\n        }\n    };\n}\n\nexport default memoize(function getCreateCustomerValidationSchema({\n    formFields,\n    language,\n    passwordRequirements: { description, numeric, alpha, minLength },\n}: CreateCustomerValidationSchema): ObjectSchema<CreateAccountFormValues> {\n    return object({\n        firstName: string().required(language.translate('address.first_name_required_error')),\n        lastName: string().required(language.translate('address.last_name_required_error')),\n        password: string()\n            .required(language.translate('customer.password_required_error') || description)\n            .matches(\n                numeric,\n                language.translate('customer.password_number_required_error') || description,\n            )\n            .matches(\n                alpha,\n                language.translate('customer.password_letter_required_error') || description,\n            )\n            .min(\n                minLength,\n                language.translate('customer.password_under_minimum_length_error' || description),\n            )\n            .max(100, language.translate('customer.password_over_maximum_length_error')),\n    })\n        .concat(getEmailValidationSchema({ language }))\n        .concat(\n            getCustomFormFieldsValidationSchema({\n                formFields,\n                translate: getTranslateCreateCustomerError(language),\n            }),\n        );\n});\n","import { FormField } from '@bigcommerce/checkout-sdk';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useMemo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { isRequestError } from '../common/error';\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { DynamicFormField, Fieldset, Form } from '../ui/form';\n\nimport getCreateCustomerValidationSchema, {\n    CreateAccountFormValues,\n} from './getCreateCustomerValidationSchema';\nimport getPasswordRequirements from './getPasswordRequirements';\nimport './CreateAccountForm.scss';\n\nexport interface CreateAccountFormProps {\n    formFields: FormField[];\n    createAccountError?: Error;\n    fixNewsletterCheckboxExperimentEnabled: boolean;\n    isCreatingAccount?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onSubmit(values: CreateAccountFormValues): void;\n}\n\nfunction getAcceptsMarketingEmailsDefault(defaultShouldSubscribe: boolean, requiresMarketingConsent: boolean): string[] {\n    if (defaultShouldSubscribe) {\n        return ['1'];\n    }\n\n    return requiresMarketingConsent ? [] : ['0'];\n}\n\nfunction transformFormFieldsData(formFields: FormField[], defaultShouldSubscribe: boolean): FormField[] {\n    return formFields.map(field => {\n        if (field.name === 'acceptsMarketingEmails') {\n            const { options } = field;\n            const items = options?.items || [];\n            \n            const updatedItems = items.map(item => {\n                return {\n                    value: defaultShouldSubscribe ? '1' : item.value,\n                    label: item.label,\n                }\n            });\n\n            return {\n                ...field,\n                options: {\n                    items: updatedItems,\n                }\n            }\n        }\n\n        return field;\n    });\n}\n\nconst CreateAccountForm: FunctionComponent<\n    CreateAccountFormProps & WithLanguageProps & FormikProps<CreateAccountFormValues>\n> = ({ fixNewsletterCheckboxExperimentEnabled, formFields, createAccountError, isCreatingAccount, isExecutingPaymentMethodCheckout, onCancel, isFloatingLabelEnabled, defaultShouldSubscribe }) => {\n    const createAccountErrorMessage = useMemo(() => {\n        if (!createAccountError) {\n            return;\n        }\n\n        if (isRequestError(createAccountError) && createAccountError.status === 409) {\n            const splitMessage = createAccountError.message.split(':');\n\n            if (splitMessage.length > 1) {\n                return (\n                    <TranslatedString\n                        data={{ email: splitMessage[1].trim() }}\n                        id=\"customer.email_in_use_text\"\n                    />\n                );\n            }\n\n            return <TranslatedString id=\"customer.unknown_email_in_use_text\" />;\n        }\n\n        return createAccountError.message;\n    }, [createAccountError]);\n\n    const fields = fixNewsletterCheckboxExperimentEnabled ?\n        transformFormFieldsData(formFields, defaultShouldSubscribe): formFields;\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset>\n                {createAccountErrorMessage && (\n                    <Alert type={AlertType.Error}>{createAccountErrorMessage}</Alert>\n                )}\n                <div className=\"create-account-form\">\n                    {fields.map((field) => (\n                        <DynamicFormField\n                            autocomplete={field.name}\n                            extraClass={`dynamic-form-field--${field.name}`}\n                            field={field}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            key={field.id}\n                            parentFieldName={field.custom ? 'customFields' : undefined}\n                        />\n                    ))}\n                </div>\n            </Fieldset>\n\n            <div className=\"form-actions\">\n                <Button\n                    disabled={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    id=\"checkout-customer-create\"\n                    isLoading={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    testId=\"customer-continue-create\"\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString id=\"customer.create_account_action\" />\n                </Button>\n\n                <a\n                    className=\"button optimizedCheckout-buttonSecondary\"\n                    data-test=\"customer-cancel-button\"\n                    href=\"#\"\n                    id=\"checkout-customer-cancel\"\n                    onClick={preventDefault(onCancel)}\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </a>\n            </div>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<CreateAccountFormProps & WithLanguageProps, CreateAccountFormValues>({\n        handleSubmit: (values, { props: { onSubmit = noop } }) => {\n            onSubmit(values);\n        },\n        mapPropsToValues: ({ defaultShouldSubscribe, requiresMarketingConsent }) => ({\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            customFields: {},\n            acceptsMarketingEmails: getAcceptsMarketingEmailsDefault(defaultShouldSubscribe, requiresMarketingConsent),\n        }),\n        validationSchema: ({\n            language,\n            formFields,\n        }: CreateAccountFormProps & WithLanguageProps) => {\n            const passwordRequirements = formFields.find(\n                ({ requirements }) => requirements,\n            )?.requirements;\n\n            if (!passwordRequirements) {\n                throw new Error('Password requirements missing');\n            }\n\n            const schema = getCreateCustomerValidationSchema({\n                language,\n                formFields,\n                passwordRequirements: getPasswordRequirements(passwordRequirements),\n            });\n\n            return schema;\n        },\n    })(CreateAccountForm),\n);\n","import React, { FunctionComponent, MouseEventHandler } from 'react';\n\nimport { parseAnchor, preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { useLocale } from './LocaleContext';\nimport { TranslatedStringProps } from './TranslatedString';\n\nexport type TranslatedLinkProps = TranslatedStringProps & {\n    testId?: string;\n    onClick: MouseEventHandler;\n};\n\nconst TranslatedLink: FunctionComponent<TranslatedLinkProps> = ({ data, id, onClick, testId }) => {\n    const { language } = useLocale();\n    const translatedString = language.translate(id, data);\n    const parsedString = parseAnchor(translatedString);\n\n    return parsedString.length ? (\n        <>\n            {parsedString[0]}\n            <a data-test={testId} href=\"#\" onClick={preventDefault(onClick)}>\n                {parsedString[1]}\n            </a>\n            {parsedString[2]}\n        </>\n    ) : (\n        <>{translatedString}</>\n    );\n};\n\nexport default TranslatedLink;\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface EmailFieldProps {\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string): void;\n}\n\nconst EmailField: FunctionComponent<EmailFieldProps> = ({ onChange, isFloatingLabelEnabled }) => {\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <TextInput\n                {...props.field}\n                autoComplete={props.field.name}\n                id={props.field.name}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                type=\"email\"\n            />\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.email_label\" />, []);\n\n    return (\n        <FormField\n            input={renderInput}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            labelContent={labelContent}\n            name=\"email\"\n            onChange={onChange}\n        />\n    );\n};\n\nexport default memo(EmailField);\n","import { SignInEmail } from '@bigcommerce/checkout-sdk';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useMemo } from 'react';\n\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Form } from '../ui/form';\nimport { LoadingSpinner } from '../ui/loading';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\n\nexport interface EmailLoginFormProps {\n    email?: string;\n    isOpen: boolean;\n    isSendingEmail?: boolean;\n    emailHasBeenRequested?: boolean;\n    sentEmail?: SignInEmail;\n    sentEmailError?: any;\n    isFloatingLabelEnabled?: boolean;\n    onRequestClose?(): void;\n    onSendLoginEmail?(values: EmailLoginFormValues): void;\n}\n\nexport interface EmailLoginFormValues {\n    email: string;\n}\n\nconst EmailLoginForm: FunctionComponent<\n    EmailLoginFormProps & WithLanguageProps & FormikProps<EmailLoginFormValues>\n> = ({\n    email,\n    isOpen,\n    isSendingEmail = false,\n    emailHasBeenRequested,\n    onRequestClose = noop,\n    sentEmailError,\n    sentEmail,\n    submitForm,\n    isFloatingLabelEnabled,\n    values: { email: formEmail },\n}) => {\n    const modalHeaderStringId = useMemo(() => {\n        if (emailHasBeenRequested) {\n            if (sentEmailError) {\n                return 'common.error_heading';\n            }\n\n            return 'login_email.sent_header';\n        }\n\n        if (email) {\n            return 'login_email.header_with_email';\n        }\n\n        return 'login_email.header';\n    }, [emailHasBeenRequested, sentEmailError, email]);\n\n    const okButton = useMemo(\n        () => (\n            <div className=\"modal-footer\">\n                <Button onClick={onRequestClose}>\n                    <TranslatedString id=\"common.ok_action\" />\n                </Button>\n            </div>\n        ),\n        [onRequestClose],\n    );\n\n    const footer = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return okButton;\n        }\n\n        if (emailHasBeenRequested && !sentEmailError) {\n            if (isSendingEmail) {\n                return <LoadingSpinner isLoading />;\n            }\n\n            if (sentEmail && sentEmail.sent_email === 'reset_password') {\n                return okButton;\n            }\n\n            return (\n                <p>\n                    <TranslatedLink id=\"login_email.resend_link\" onClick={submitForm} />\n                    <TranslatedLink id=\"login_email.use_password_link\" onClick={onRequestClose} />\n                </p>\n            );\n        }\n\n        return (\n            <div className=\"modal-footer\">\n                <Button\n                    className=\"optimizedCheckout-buttonSecondary\"\n                    onClick={onRequestClose}\n                    type=\"button\"\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </Button>\n                <Button isLoading={isSendingEmail} type=\"submit\" variant={ButtonVariant.Primary}>\n                    <TranslatedString id=\"login_email.send\" />\n                </Button>\n            </div>\n        );\n    }, [\n        sentEmailError,\n        emailHasBeenRequested,\n        okButton,\n        submitForm,\n        isSendingEmail,\n        onRequestClose,\n        sentEmail,\n    ]);\n\n    const error = useMemo(() => {\n        if (!sentEmailError) {\n            return null;\n        }\n\n        const { status } = sentEmailError;\n\n        return (\n            <Alert type={AlertType.Error}>\n                {status === 429 ? (\n                    <TranslatedString id=\"login_email.error_temporary_disabled\" />\n                ) : (\n                    <TranslatedString\n                        id={\n                            status === 404\n                                ? 'login_email.error_not_found'\n                                : 'login_email.error_server'\n                        }\n                    />\n                )}\n            </Alert>\n        );\n    }, [sentEmailError]);\n\n    const form = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return null;\n        }\n\n        if (emailHasBeenRequested && sentEmail && !sentEmailError) {\n            const { expiry, sent_email } = sentEmail;\n\n            return (\n                <p>\n                    <TranslatedHtml\n                        data={{\n                            minutes: Math.round(expiry / 60),\n                        }}\n                        id={\n                            sent_email === 'sign_in'\n                                ? 'login_email.sent_text'\n                                : 'customer.reset_password_before_login_error'\n                        }\n                    />\n                </p>\n            );\n        }\n\n        if (emailHasBeenRequested && !sentEmail) {\n            return <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />;\n        }\n\n        return (\n            <>\n                <p>\n                    <TranslatedString id=\"login_email.text\" />\n                </p>\n                <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n            </>\n        );\n    }, [sentEmailError, emailHasBeenRequested, sentEmail, formEmail]);\n\n    return (\n        <Modal\n            additionalBodyClassName=\"modal--withText\"\n            additionalModalClassName=\"modal--medium\"\n            header={\n                <ModalHeader>\n                    <TranslatedString id={modalHeaderStringId} />\n                </ModalHeader>\n            }\n            isOpen={isOpen}\n            onRequestClose={onRequestClose}\n            shouldShowCloseButton={true}\n        >\n            <Form>\n                <LoadingSpinner isLoading={isSendingEmail && !email} />\n                {error}\n                {form}\n                {footer}\n            </Form>\n        </Modal>\n    );\n};\n\nexport default withLanguage(\n    withFormik<EmailLoginFormProps & WithLanguageProps, EmailLoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n        }),\n        handleSubmit: (values, { props: { onSendLoginEmail = noop } }) => {\n            onSendLoginEmail(values);\n        },\n        validationSchema: ({ language }: WithLanguageProps) =>\n            getEmailValidationSchema({ language }),\n    })(memo(EmailLoginForm)),\n);\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport { CheckboxFormField, Fieldset } from '../ui/form';\n\nconst PrivacyPolicyCheckboxFieldLink: FunctionComponent<{ url: string }> = ({ url }) => (\n    <CheckboxFormField\n        labelContent={<TranslatedHtml data={{ url }} id=\"privacy_policy.label\" />}\n        name=\"privacyPolicy\"\n        testId=\"privacy-policy-checkbox\"\n    />\n);\n\nconst PrivacyPolicyFieldset: FunctionComponent<{ url: string }> = ({ url }) => (\n    <Fieldset additionalClassName=\"checkout-privacy-policy\">\n        <PrivacyPolicyCheckboxFieldLink url={url} />\n    </Fieldset>\n);\n\nconst PrivacyPolicyAutoConsent: FunctionComponent<{ url: string }> = ({ url }) => (\n    <p>\n        <TranslatedHtml data={{ url }} id=\"privacy_policy_auto_consent.label\" />\n    </p>\n);\n\nconst PrivacyPolicyField: FunctionComponent<{ url: string; isExpressPrivacyPolicy: boolean }> = ({\n    url,\n    isExpressPrivacyPolicy,\n}) => {\n    if (isExpressPrivacyPolicy) {\n        return <PrivacyPolicyAutoConsent url={url} />;\n    }\n\n    return <PrivacyPolicyFieldset url={url} />;\n};\n\nexport default memo(PrivacyPolicyField);\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { boolean, BooleanSchema, object, ObjectSchema } from 'yup';\n\nexport interface PrivacyPolicyValidatonSchemaProps {\n    isRequired: boolean;\n    language: LanguageService;\n}\n\nexport default function getPrivacyPolicyValidationSchema({\n    isRequired,\n    language,\n}: PrivacyPolicyValidatonSchemaProps): ObjectSchema<{ privacyPolicy?: boolean }> {\n    const schemaFields: {\n        privacyPolicy?: BooleanSchema;\n    } = {};\n\n    if (isRequired) {\n        schemaFields.privacyPolicy = boolean().oneOf(\n            [true],\n            language.translate('privacy_policy.required_error'),\n        );\n    }\n\n    return object(schemaFields);\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport { Input, Label } from '../ui/form';\n\nexport type SubscribeFieldProps = FieldProps<boolean> & {\n    requiresMarketingConsent: boolean;\n};\n\nconst SubscribeField: FunctionComponent<SubscribeFieldProps> = ({\n    field,\n    requiresMarketingConsent,\n}) => (\n    <>\n        <Input\n            {...field}\n            checked={field.value}\n            className=\"form-checkbox\"\n            id={field.name}\n            testId=\"should-subscribe-checkbox\"\n            type=\"checkbox\"\n        />\n\n        <Label htmlFor={field.name}>\n            <TranslatedHtml\n                id={\n                    requiresMarketingConsent\n                        ? 'customer.guest_marketing_consent'\n                        : 'customer.guest_subscribe_to_newsletter_text'\n                }\n            />\n        </Label>\n    </>\n);\n\nexport default memo(SubscribeField);\n","export class SubscribeSessionStorage {\n    static key = 'shouldSubscribe';\n\n    static setSubscribeStatus(shouldSubscribe: boolean) {\n        sessionStorage.setItem(this.key, `${shouldSubscribe}`)\n    }\n\n    static getSubscribeStatus(): boolean {\n        const value = sessionStorage.getItem(this.key);\n\n        return value === 'true';\n    }\n\n    static removeSubscribeStatus() {\n        sessionStorage.removeItem(this.key);\n    }\n}\n","import classNames from 'classnames';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport EmailField from './EmailField';\nimport SubscribeField from './SubscribeField';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nfunction getShouldSubscribeValue(requiresMarketingConsent: boolean, defaultShouldSubscribe: boolean) {\n    if (SubscribeSessionStorage.getSubscribeStatus()) {\n        return true;\n    }\n\n    return requiresMarketingConsent ? false : defaultShouldSubscribe\n}\n\nexport interface GuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    continueAsGuestButtonLabelId: string;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    isLoading: boolean;\n    privacyPolicyUrl?: string;\n    isExpressPrivacyPolicy: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    onShowLogin(): void;\n}\n\nexport interface GuestFormValues {\n    email: string;\n    shouldSubscribe: boolean;\n}\n\nconst GuestForm: FunctionComponent<\n    GuestFormProps & WithLanguageProps & FormikProps<GuestFormValues>\n> = ({\n    canSubscribe,\n    checkoutButtons,\n    continueAsGuestButtonLabelId,\n    isLoading,\n    onChangeEmail,\n    onShowLogin,\n    privacyPolicyUrl,\n    requiresMarketingConsent,\n    isExpressPrivacyPolicy,\n    isFloatingLabelEnabled,\n}) => {\n    const renderField = useCallback(\n        (fieldProps: FieldProps<boolean>) => (\n            <SubscribeField {...fieldProps} requiresMarketingConsent={requiresMarketingConsent} />\n        ),\n        [requiresMarketingConsent],\n    );\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-guest\"\n            testId=\"checkout-customer-guest\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.guest_customer_text\" />\n                    </Legend>\n                }\n            >\n                <div className=\"customerEmail-container\">\n                    <div className=\"customerEmail-body\">\n                        <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail}/>\n\n                        {(canSubscribe || requiresMarketingConsent) && (\n                            <BasicFormField name=\"shouldSubscribe\" render={renderField} />\n                        )}\n                    </div>\n\n                    <div\n                        className={classNames('form-actions customerEmail-action', {\n                            'customerEmail-floating--enabled': isFloatingLabelEnabled,\n                        })}\n                    >\n                        <Button\n                            className=\"customerEmail-button\"\n                            id=\"checkout-customer-continue\"\n                            isLoading={isLoading}\n                            testId=\"customer-continue-as-guest-button\"\n                            type=\"submit\"\n                            variant={ButtonVariant.Primary}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </Button>\n                    </div>\n                </div>\n\n                {privacyPolicyUrl && (\n                    <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                )}\n\n                {!isLoading && (\n                    <p>\n                        <TranslatedString id=\"customer.login_text\" />{' '}\n                        <a\n                            tabIndex={0}\n                            role=\"button\"\n                            data-test=\"customer-continue-button\"\n                            id=\"checkout-customer-login\"\n                            onClick={onShowLogin}\n                        >\n                            <TranslatedString id=\"customer.login_action\" />\n                        </a>\n                    </p>\n                )}\n\n                {checkoutButtons}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<GuestFormProps & WithLanguageProps, GuestFormValues>({\n        mapPropsToValues: ({\n            email = '',\n            defaultShouldSubscribe = false,\n            requiresMarketingConsent,\n        }) => ({\n            email,\n            shouldSubscribe: getShouldSubscribeValue(requiresMarketingConsent, defaultShouldSubscribe),\n            privacyPolicy: false,\n        }),\n        handleSubmit: (values, { props: { onContinueAsGuest } }) => {\n            onContinueAsGuest(values);\n        },\n        validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: GuestFormProps & WithLanguageProps) => {\n            const email = string()\n                .email(language.translate('customer.email_invalid_error'))\n                .max(256)\n                .required(language.translate('customer.email_required_error'));\n\n            const baseSchema = object({ email });\n\n            if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                return baseSchema.concat(\n                    getPrivacyPolicyValidationSchema({\n                        isRequired: !!privacyPolicyUrl,\n                        language,\n                    }),\n                );\n            }\n\n            return baseSchema;\n        },\n    })(memo(GuestForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEye: FunctionComponent = () => (\n    <svg viewBox=\"0 0 576 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEye);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEyeSlash: FunctionComponent = () => (\n    <svg viewBox=\"0 0 640 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEyeSlash);\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\nimport Label from '../ui/form/Label';\nimport { IconEye, IconEyeSlash } from '../ui/icon';\nimport { Toggle } from '../ui/toggle';\n\ninterface WithFloatingLabel {\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst PasswordField: FunctionComponent<WithFloatingLabel> = ({ isFloatingLabelEnabled = false }) => {\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <Toggle openByDefault={false}>\n                {({ isOpen, toggle }) => (\n                    <div className=\"form-field-password\">\n                        <TextInput\n                            {...props.field}\n                            additionalClassName=\"form-input--withIcon\"\n                            id={props.field.name}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            type={isOpen ? 'text' : 'password'}\n                        />\n                        {isFloatingLabelEnabled && (\n                            <Label\n                                htmlFor={props.field.name}\n                                id={`${props.field.name}-label`}\n                                isFloatingLabelEnabled={true}\n                            >\n                                <TranslatedString id=\"customer.password_label\" />\n                            </Label>\n                        )}\n                        <a\n                            className=\"form-toggle-password form-input-icon\"\n                            href=\"#\"\n                            onClick={toggle}\n                        >\n                            {isOpen ? <IconEye /> : <IconEyeSlash />}\n                        </a>\n                    </div>\n                )}\n            </Toggle>\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.password_label\" />, []);\n\n    return <FormField input={renderInput} isFloatingLabelEnabled={isFloatingLabelEnabled} labelContent={isFloatingLabelEnabled ? null : labelContent} name=\"password\" />;\n};\n\nexport default memo(PasswordField);\n","import { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport CustomerViewType from './CustomerViewType';\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport mapErrorMessage from './mapErrorMessage';\nimport PasswordField from './PasswordField';\n\nexport interface LoginFormProps {\n    canCancel?: boolean;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    forgotPasswordUrl: string;\n    isSignInEmailEnabled?: boolean;\n    isSendingSignInEmail?: boolean;\n    isSigningIn?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    signInError?: Error;\n    signInEmailError?: Error;\n    viewType?: Omit<CustomerViewType, 'guest'>;\n    passwordlessLogin?: boolean;\n    shouldShowCreateAccountLink?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onCreateAccount?(): void;\n    onChangeEmail?(email: string): void;\n    onSignIn(data: LoginFormValues): void;\n    onSendLoginEmail?(): void;\n    onContinueAsGuest?(): void;\n}\n\nexport interface LoginFormValues {\n    email: string;\n    password: string;\n}\n\nconst LoginForm: FunctionComponent<\n    LoginFormProps & WithLanguageProps & FormikProps<LoginFormValues>\n> = ({\n    canCancel,\n    continueAsGuestButtonLabelId,\n    forgotPasswordUrl,\n    email,\n    isSignInEmailEnabled,\n    isSigningIn,\n    isExecutingPaymentMethodCheckout,\n    language,\n    onCancel = noop,\n    onChangeEmail,\n    onContinueAsGuest,\n    onCreateAccount = noop,\n    onSendLoginEmail = noop,\n    signInError,\n    shouldShowCreateAccountLink,\n    isFloatingLabelEnabled,\n    viewType = CustomerViewType.Login,\n}) => {\n    const changeEmailLink = useCallback(() => {\n        if (!email) {\n            return null;\n        }\n\n        return (\n            <p className=\"optimizedCheckout-contentSecondary\">\n                <TranslatedLink\n                    data={{ email }}\n                    id=\"customer.guest_could_login_change_email\"\n                    onClick={onCancel}\n                    testId=\"change-email\"\n                />\n            </p>\n        );\n    }, [email, onCancel]);\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.returning_customer_text\" />\n                    </Legend>\n                }\n            >\n                {signInError && (\n                    <Alert testId=\"customer-login-error-message\" type={AlertType.Error}>\n                        {mapErrorMessage(signInError, (key) => language.translate(key))}\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.SuggestedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_could_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.CancellableEnforcedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_must_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.EnforcedLogin && (\n                    <Alert type={AlertType.Error}>\n                        <TranslatedLink\n                            id=\"customer.guest_temporary_disabled\"\n                            onClick={onCreateAccount}\n                        />\n                    </Alert>\n                )}\n\n                {(viewType === CustomerViewType.Login ||\n                    viewType === CustomerViewType.EnforcedLogin) && (\n                    <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail} />\n                )}\n\n                <PasswordField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n\n                <p className=\"form-legend-container\">\n                    <span>\n                        { isSignInEmailEnabled &&\n                            <TranslatedLink\n                                id=\"login_email.link\"\n                                onClick={ onSendLoginEmail }\n                                testId=\"customer-signin-link\"\n                            />\n                        }\n                        { !isSignInEmailEnabled &&\n                            <a\n                                data-test=\"forgot-password-link\"\n                                href={ forgotPasswordUrl }\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                <TranslatedString id=\"customer.forgot_password_action\" />\n                            </a>\n                        }\n                    </span>\n                    { viewType === CustomerViewType.Login && shouldShowCreateAccountLink &&\n                        <span>\n                            <TranslatedLink\n                                id=\"customer.create_account_to_continue_text\"\n                                onClick={onCreateAccount}\n                            />\n                        </span>\n                    }\n                </p>\n\n                <div className=\"form-actions\">\n                    <Button\n                        disabled={isSigningIn || isExecutingPaymentMethodCheckout}\n                        isLoading={isSigningIn || isExecutingPaymentMethodCheckout}\n                        id=\"checkout-customer-continue\"\n                        testId=\"customer-continue-button\"\n                        type=\"submit\"\n                        variant={ButtonVariant.Primary}\n                    >\n                        <TranslatedString id=\"customer.sign_in_action\" />\n                    </Button>\n\n                    {viewType === CustomerViewType.SuggestedLogin && (\n                        <a\n                            className=\"button optimizedCheckout-buttonSecondary\"\n                            data-test=\"customer-guest-continue\"\n                            href=\"#\"\n                            id=\"checkout-guest-continue\"\n                            onClick={preventDefault(onContinueAsGuest)}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </a>\n                    )}\n\n                    {canCancel &&\n                        viewType !== CustomerViewType.EnforcedLogin &&\n                        viewType !== CustomerViewType.SuggestedLogin && (\n                            <a\n                                className=\"button optimizedCheckout-buttonSecondary\"\n                                data-test=\"customer-cancel-button\"\n                                href=\"#\"\n                                id=\"checkout-customer-cancel\"\n                                onClick={preventDefault(onCancel)}\n                            >\n                                <TranslatedString\n                                    id={\n                                        viewType === CustomerViewType.CancellableEnforcedLogin\n                                            ? 'login_email.use_another_email'\n                                            : 'common.cancel_action'\n                                    }\n                                />\n                            </a>\n                        )}\n                </div>\n\n                {viewType === CustomerViewType.SuggestedLogin && changeEmailLink()}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<LoginFormProps & WithLanguageProps, LoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n            password: '',\n        }),\n        handleSubmit: (values, { props: { onSignIn } }) => {\n            onSignIn(values);\n        },\n        validationSchema: ({ language }: LoginFormProps & WithLanguageProps) =>\n            getEmailValidationSchema({ language }).concat(\n                object({\n                    password: string().required(\n                        language.translate('customer.password_required_error'),\n                    ),\n                }),\n            ),\n    })(memo(LoginForm)),\n);\n","export default function mapErrorMessage(\n    error: any, // TODO: Export `RequestError`\n    translate: (key: string) => string,\n): string {\n    const type = error.body && error.body.type;\n\n    switch (type) {\n        case 'throttled_login':\n            return translate('customer.sign_in_throttled_error');\n\n        case 'reset_password_before_login':\n            return translate('customer.reset_password_before_login_error');\n\n        default:\n            return translate('customer.sign_in_error');\n    }\n}\n","import { CustomerAccountRequestBody } from '@bigcommerce/checkout-sdk';\n\nimport { mapCustomFormFieldsFromFormValues } from '../formFields';\n\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\n\nexport default function mapCreateAccountFromFormValues({\n    acceptsMarketingEmails,\n    customFields,\n    ...values\n}: CreateAccountFormValues): CustomerAccountRequestBody {\n    return {\n        ...values,\n        acceptsMarketingEmails: acceptsMarketingEmails && acceptsMarketingEmails.length > 0,\n        customFields: mapCustomFormFieldsFromFormValues(customFields),\n    };\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useEffect, useState } from 'react';\n\nimport { getAppliedStyles } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { CustomerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport { GuestFormValues } from './GuestForm';\nimport SubscribeField from './SubscribeField';\n\nexport interface StripeGuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    step: CheckoutStepStatus;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    isLoading: boolean;\n    isExpressPrivacyPolicy: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    privacyPolicyUrl?: string;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onShowLogin(): void;\n}\n\nconst StripeGuestForm: FunctionComponent<StripeGuestFormProps & FormikProps<GuestFormValues>> = ({\n    continueAsGuestButtonLabelId,\n    isLoading,\n    initialize,\n    isExpressPrivacyPolicy,\n    deinitialize,\n    onChangeEmail,\n    onShowLogin,\n    onContinueAsGuest,\n    canSubscribe,\n    checkoutButtons,\n    requiresMarketingConsent,\n    privacyPolicyUrl,\n    step,\n    status\n}) => {\n\n    const [continueAsAGuestButton, setContinueAsAGuestButton] = useState(true);\n    const [emailValue, setEmailValue] = useState('');\n    const [authentication, setAuthentication] = useState(false);\n    const [isStripeLoading, setIsStripeLoading] = useState(true);\n    const [isNewAuth, setIsNewAuth] = useState(false);\n    const handleOnClickSubmitButton = () => {\n        onContinueAsGuest({\n            email: emailValue,\n            shouldSubscribe: !!status?.shouldSubscribe,\n        });\n    };\n    const setEmailCallback = useCallback((authenticated: boolean, email: string) => {\n        onChangeEmail(email);\n        setEmailValue(email);\n        setContinueAsAGuestButton(!email);\n        setAuthentication(authenticated);\n\n        if(!authenticated){\n            setIsNewAuth(true);\n        }\n    }, [setContinueAsAGuestButton, onChangeEmail]);\n\n    useEffect(() => {\n        if ((!step.isComplete || isNewAuth) && emailValue && authentication) {\n            handleOnClickSubmitButton();\n        }\n    }, [emailValue, authentication, isNewAuth]);\n\n    useEffect(() => {\n        if (status?.valSuccess) {\n            handleOnClickSubmitButton();\n        }\n    }, [status?.valSuccess]);\n\n    const handleLoading = useCallback((mounted: boolean) => {\n        setIsStripeLoading(mounted);\n    }, []);\n\n    const stripeDeinitialize = () => {\n        deinitialize({\n            methodId: 'stripeupe',\n        });\n    };\n\n    const stripeInitialize = () => {\n        initialize( {\n            methodId: 'stripeupe',\n            stripeupe: {\n                container: 'stripeupeLink',\n                onEmailChange: setEmailCallback,\n                isLoading: handleLoading,\n                getStyles: getStripeStyles,\n                gatewayId: 'stripeupe',\n                methodId: 'card',\n            },\n        })};\n\n    useEffect(() => {\n        stripeInitialize();\n\n        return () => stripeDeinitialize();\n    }, []);\n\n    const getStylesFromElement = (\n        id: string,\n        properties: string[]) => {\n        const parentContainer = document.getElementById(id);\n\n        if (parentContainer) {\n            return getAppliedStyles(parentContainer, properties);\n        }\n\n            return undefined;\n\n    };\n\n    const containerId = 'stripe-card-component-field';\n\n    const getStripeStyles: () => (Record<string, string> | undefined) = useCallback( () => {\n        const formInput = getStylesFromElement(`${containerId}--input`, ['color', 'background-color', 'border-color', 'box-shadow']);\n        const formLabel = getStylesFromElement(`${containerId}--label`, ['color']);\n        const formError = getStylesFromElement(`${containerId}--error`, ['color']);\n\n        return formLabel && formInput && formError ? {\n            labelText: formLabel.color,\n            fieldText: formInput.color,\n            fieldPlaceholderText: formInput.color,\n            fieldErrorText: formError.color,\n            fieldBackground: formInput['background-color'],\n            fieldInnerShadow: formInput['box-shadow'],\n            fieldBorder: formInput['border-color'],\n        } : undefined;\n    }, [])\n\n    const renderCheckoutThemeStylesForStripeUPE = () => {\n        return (\n            <div\n                className=\"optimizedCheckout-form-input\"\n                id={ `${containerId}--input` }\n                placeholder=\"1111\"\n            >\n                <div\n                    className=\"form-field--error\"\n                >\n                    <div\n                        className=\"optimizedCheckout-form-label\"\n                        id={ `${containerId}--error` }\n                    />\n                </div>\n                <div\n                    className=\"optimizedCheckout-form-label\"\n                    id={ `${containerId}--label` }\n                />\n            </div>\n        );\n    };\n\n    const renderField = useCallback((fieldProps: FieldProps<boolean>) => (\n        <SubscribeField\n            { ...fieldProps }\n            requiresMarketingConsent={ requiresMarketingConsent }\n        />\n    ), [\n        requiresMarketingConsent,\n    ]);\n\n    const buttonText = authentication && !isNewAuth? 'customer.continue_as_stripe_customer_action' : continueAsGuestButtonLabelId;\n\n    return (\n        <>\n            <CustomerSkeleton isLoading={isStripeLoading}/>\n            <Form\n                className=\"checkout-form\"\n                id=\"checkout-customer-guest\"\n                testId=\"checkout-customer-guest\"\n            >\n                <div className=\"checkout-form\" style={ {display: isStripeLoading ? 'none' : undefined} }>\n                    <Fieldset\n                        legend={ !authentication &&\n                            <Legend hidden>\n                                <TranslatedString id=\"customer.guest_customer_text\"/>\n                            </Legend>\n                        }\n                    >\n                        <div className=\"customerEmail-container\">\n                            <div className=\"customerEmail-body\">\n                                <div id=\"stripeupeLink\"/>\n                                <br/>\n                                { (canSubscribe || requiresMarketingConsent) && <BasicFormField\n                                    name=\"shouldSubscribe\"\n                                    render={ renderField }\n                                /> }\n                            </div>\n\n                            <div className=\"form-actions customerEmail-action\">\n                                { (!authentication || (authentication && !isNewAuth )) && <Button\n                                    className=\"stripeCustomerEmail-button\"\n                                    disabled={ continueAsAGuestButton }\n                                    id=\"stripe-checkout-customer-continue\"\n                                    isLoading={ isLoading }\n                                    testId=\"stripe-customer-continue-as-guest-button\"\n                                    type=\"submit\"\n                                    variant={ ButtonVariant.Primary }\n                                >\n                                    <TranslatedString id={ buttonText }/>\n                                </Button> }\n                            </div>\n                        </div>\n\n                        {privacyPolicyUrl && (\n                            <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                        )}\n\n                        {\n                            !isLoading && <p>\n                                <TranslatedString id=\"customer.login_text\"/>\n                                { ' ' }\n                                <a\n                                    tabIndex={0}\n                                    role=\"button\"\n                                    data-test=\"customer-continue-button\"\n                                    id=\"checkout-customer-login\"\n                                    onClick={ onShowLogin }\n                                >\n                                    <TranslatedString id=\"customer.login_action\"/>\n                                </a>\n                            </p>\n                        }\n                        { !authentication && checkoutButtons }\n                    </Fieldset>\n                </div>\n                { renderCheckoutThemeStylesForStripeUPE() }\n            </Form>\n        </>\n    );\n};\n\nexport default withLanguage(\n    withFormik<StripeGuestFormProps, GuestFormValues>({\n            mapPropsToValues: ({\n                email = '',\n                defaultShouldSubscribe = false,\n                requiresMarketingConsent,\n            }) => ({\n                email,\n                shouldSubscribe: requiresMarketingConsent ? false : defaultShouldSubscribe,\n                privacyPolicy: false,\n            }),\n            handleSubmit: ( values, { setStatus }) => {\n                setStatus({\n                    valSuccess: true,\n                    shouldSubscribe: values.shouldSubscribe,\n                  });\n            },\n            validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: StripeGuestFormProps & WithLanguageProps) => {\n                if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                    return getPrivacyPolicyValidationSchema({\n                            isRequired: !!privacyPolicyUrl,\n                            language,\n                        })\n                }\n            },\n        })(memo(StripeGuestForm))\n)\n\n","import {\n    CheckoutPaymentMethodExecutedOptions,\n    CheckoutSelectors,\n    CustomerAccountRequestBody,\n    CustomerCredentials,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n    FormField,\n    GuestCredentials,\n    SignInEmail,\n    StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { Component, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { CustomerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { isErrorWithType } from '../common/error';\nimport { isFloatingLabelEnabled } from '../common/utility';\nimport getProviderWithCustomCheckout from '../payment/getProviderWithCustomCheckout';\nimport { PaymentMethodId } from '../payment/paymentMethod';\n\nimport CheckoutButtonList from './CheckoutButtonList';\nimport CreateAccountForm from './CreateAccountForm';\nimport CustomerViewType from './CustomerViewType';\nimport EmailLoginForm, { EmailLoginFormValues } from './EmailLoginForm';\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\nimport GuestForm, { GuestFormValues } from './GuestForm';\nimport LoginForm from './LoginForm';\nimport mapCreateAccountFromFormValues from './mapCreateAccountFromFormValues';\nimport StripeGuestForm from './StripeGuestForm';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nexport interface CustomerProps {\n    viewType: CustomerViewType;\n    step: CheckoutStepStatus;\n    isEmbedded?: boolean;\n    isSubscribed: boolean;\n    isWalletButtonsOnTop: boolean;\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    onChangeViewType?(viewType: CustomerViewType): void;\n    onAccountCreated?(): void;\n    onContinueAsGuest?(): void;\n    onContinueAsGuestError?(error: Error): void;\n    onReady?(): void;\n    onSubscribeToNewsletter(subscribe: boolean): void;\n    onSignIn?(): void;\n    onSignInError?(error: Error): void;\n    onUnhandledError?(error: Error): void;\n    onWalletButtonClick?(methodName: string): void;\n}\n\nexport interface WithCheckoutCustomerProps {\n    canSubscribe: boolean;\n    customerAccountFields: FormField[];\n    checkoutButtonIds: string[];\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    firstName?: string;\n    fixNewsletterCheckboxExperimentEnabled: boolean;\n    forgotPasswordUrl: string;\n    isContinuingAsGuest: boolean;\n    isCreatingAccount: boolean;\n    isExecutingPaymentMethodCheckout: boolean;\n    isGuestEnabled: boolean;\n    hasBillingId: boolean;\n    isInitializing: boolean;\n    isSendingSignInEmail: boolean;\n    isSignInEmailEnabled: boolean;\n    isSigningIn: boolean;\n    privacyPolicyUrl?: string;\n    providerWithCustomCheckout?: string;\n    requiresMarketingConsent: boolean;\n    signInEmail?: SignInEmail;\n    signInEmailError?: Error;\n    isAccountCreationEnabled: boolean;\n    isPaymentDataRequired: boolean;\n    createAccountError?: Error;\n    signInError?: Error;\n    isFloatingLabelEnabled?: boolean;\n    isExpressPrivacyPolicy: boolean;\n    clearError(error: Error): Promise<CheckoutSelectors>;\n    continueAsGuest(credentials: GuestCredentials): Promise<CheckoutSelectors>;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    sendLoginEmail(params: { email: string }): Promise<CheckoutSelectors>;\n    signIn(credentials: CustomerCredentials): Promise<CheckoutSelectors>;\n    createAccount(values: CustomerAccountRequestBody): Promise<CheckoutSelectors>;\n    shouldRenderStripeForm: boolean;\n}\n\nexport interface CustomerState {\n    isEmailLoginFormOpen: boolean;\n    isReady: boolean;\n    hasRequestedLoginEmail: boolean;\n}\n\nclass Customer extends Component<CustomerProps & WithCheckoutCustomerProps & AnalyticsContextProps, CustomerState> {\n    state: CustomerState = {\n        isEmailLoginFormOpen: false,\n        isReady: false,\n        hasRequestedLoginEmail: false,\n    };\n\n    private draftEmail?: string;\n\n    async componentDidMount(): Promise<void> {\n        const {\n            initializeCustomer,\n            email,\n            onReady = noop,\n            onUnhandledError = noop,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        this.draftEmail = email;\n\n        try {\n            if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n                await initializeCustomer({methodId: providerWithCustomCheckout});\n            }\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        this.setState({ isReady: true });\n\n        onReady();\n    }\n\n    async componentWillUnmount(): Promise<void> {\n        const {\n            deinitializeCustomer = noop,\n            providerWithCustomCheckout,\n            onUnhandledError = noop,\n        } = this.props;\n\n        try {\n            await deinitializeCustomer({ methodId: providerWithCustomCheckout });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { viewType } = this.props;\n        const { isEmailLoginFormOpen, isReady } = this.state;\n        const shouldRenderGuestForm = viewType === CustomerViewType.Guest;\n        const shouldRenderCreateAccountForm = viewType === CustomerViewType.CreateAccount;\n        const shouldRenderLoginForm = !shouldRenderGuestForm && !shouldRenderCreateAccountForm;\n\n        return (\n            <CustomerSkeleton isLoading={!isReady}>\n                {isEmailLoginFormOpen && this.renderEmailLoginLinkForm()}\n                {shouldRenderLoginForm && this.renderLoginForm()}\n                {shouldRenderGuestForm && this.renderGuestForm()}\n                {shouldRenderCreateAccountForm && this.renderCreateAccountForm()}\n            </CustomerSkeleton>\n        );\n    }\n\n    private renderGuestForm(): ReactNode {\n        const {\n            canSubscribe,\n            checkEmbeddedSupport,\n            checkoutButtonIds,\n            deinitializeCustomer,\n            email,\n            initializeCustomer,\n            isContinuingAsGuest = false,\n            isExecutingPaymentMethodCheckout = false,\n            isInitializing = false,\n            isSubscribed,\n            isWalletButtonsOnTop,\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            onUnhandledError = noop,\n            onWalletButtonClick = noop,\n            step,\n            isFloatingLabelEnabled,\n            isExpressPrivacyPolicy,\n            isPaymentDataRequired,\n            shouldRenderStripeForm,\n        } = this.props;\n\n        const checkoutButtons = isWalletButtonsOnTop || !isPaymentDataRequired\n          ? null\n          : <CheckoutButtonList\n            checkEmbeddedSupport={checkEmbeddedSupport}\n            deinitialize={deinitializeCustomer}\n            initialize={initializeCustomer}\n            isInitializing={isInitializing}\n            methodIds={checkoutButtonIds}\n            onClick={onWalletButtonClick}\n            onError={onUnhandledError}\n          />;\n\n        const isLoadingGuestForm = isContinuingAsGuest || isExecutingPaymentMethodCheckout;\n\n        return (\n            shouldRenderStripeForm ?\n                <StripeGuestForm\n                    canSubscribe={canSubscribe}\n                    checkoutButtons={checkoutButtons}\n                    continueAsGuestButtonLabelId=\"customer.continue\"\n                    defaultShouldSubscribe={isSubscribed}\n                    deinitialize={deinitializeCustomer}\n                    email={this.draftEmail || email}\n                    initialize={initializeCustomer}\n                    isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                    isLoading={isContinuingAsGuest || isInitializing || isExecutingPaymentMethodCheckout}\n                    onChangeEmail={this.handleChangeEmail}\n                    onContinueAsGuest={this.handleContinueAsGuest}\n                    onShowLogin={this.handleShowLogin}\n                    privacyPolicyUrl={privacyPolicyUrl}\n                    requiresMarketingConsent={requiresMarketingConsent}\n                    step={step}\n                />\n                :\n            <GuestForm\n                canSubscribe={canSubscribe}\n                checkoutButtons={checkoutButtons}\n                continueAsGuestButtonLabelId=\"customer.continue\"\n                defaultShouldSubscribe={isSubscribed}\n                email={this.draftEmail || email}\n                isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isLoading={isLoadingGuestForm}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.handleContinueAsGuest}\n                onShowLogin={this.handleShowLogin}\n                privacyPolicyUrl={privacyPolicyUrl}\n                requiresMarketingConsent={requiresMarketingConsent}\n            />\n        );\n    }\n\n    private renderEmailLoginLinkForm(): ReactNode {\n        const { isEmailLoginFormOpen, hasRequestedLoginEmail } = this.state;\n\n        const { isSendingSignInEmail, signInEmailError, signInEmail, isFloatingLabelEnabled } =\n            this.props;\n\n        return (\n            <EmailLoginForm\n                email={this.draftEmail}\n                emailHasBeenRequested={hasRequestedLoginEmail}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isOpen={isEmailLoginFormOpen}\n                isSendingEmail={isSendingSignInEmail}\n                onRequestClose={this.closeEmailLoginFormForm}\n                onSendLoginEmail={this.handleSendLoginEmail}\n                sentEmail={signInEmail}\n                sentEmailError={signInEmailError}\n            />\n        );\n    }\n\n    private closeEmailLoginFormForm: () => void = () => {\n        this.setState({\n            isEmailLoginFormOpen: false,\n            hasRequestedLoginEmail: false,\n        });\n    };\n\n    private renderCreateAccountForm(): ReactNode {\n        const {\n            customerAccountFields,\n            isExecutingPaymentMethodCheckout,\n            isCreatingAccount,\n            createAccountError,\n            requiresMarketingConsent,\n            isFloatingLabelEnabled,\n            defaultShouldSubscribe,\n            fixNewsletterCheckboxExperimentEnabled,\n        } = this.props;\n\n        return (\n            <CreateAccountForm\n                createAccountError={createAccountError}\n                defaultShouldSubscribe={defaultShouldSubscribe}\n                fixNewsletterCheckboxExperimentEnabled={fixNewsletterCheckboxExperimentEnabled}\n                formFields={customerAccountFields}\n                isCreatingAccount={isCreatingAccount}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                onCancel={this.handleCancelCreateAccount}\n                onSubmit={this.handleCreateAccount}\n                requiresMarketingConsent={requiresMarketingConsent}\n            />\n        );\n    }\n\n    private renderLoginForm(): ReactNode {\n        const {\n            isEmbedded,\n            email,\n            forgotPasswordUrl,\n            isSignInEmailEnabled,\n            isGuestEnabled,\n            isSendingSignInEmail,\n            isSigningIn,\n            isExecutingPaymentMethodCheckout,\n            isAccountCreationEnabled,\n            providerWithCustomCheckout,\n            signInError,\n            isFloatingLabelEnabled,\n            viewType,\n        } = this.props;\n\n        return (\n            <LoginForm\n                canCancel={isGuestEnabled}\n                continueAsGuestButtonLabelId={\n                    providerWithCustomCheckout\n                        ? 'customer.continue'\n                        : 'customer.continue_as_guest_action'\n                }\n                email={this.draftEmail || email}\n                forgotPasswordUrl={forgotPasswordUrl}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isSendingSignInEmail={isSendingSignInEmail}\n                isSignInEmailEnabled={isSignInEmailEnabled && !isEmbedded}\n                isSigningIn={isSigningIn}\n                onCancel={this.handleCancelSignIn}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.executePaymentMethodCheckoutOrContinue}\n                onCreateAccount={this.showCreateAccount}\n                onSendLoginEmail={this.handleEmailLoginClicked}\n                onSignIn={this.handleSignIn}\n                shouldShowCreateAccountLink={isAccountCreationEnabled}\n                signInError={signInError}\n                viewType={viewType}\n            />\n        );\n    }\n\n    private handleEmailLoginClicked: () => void = async () => {\n        const { viewType } = this.props;\n\n        try {\n            if (viewType !== CustomerViewType.Login && this.draftEmail) {\n                await this.handleSendLoginEmail({ email: this.draftEmail });\n            }\n        } finally {\n            this.setState({\n                isEmailLoginFormOpen: true,\n            });\n        }\n    };\n\n    private handleSendLoginEmail: (values: EmailLoginFormValues) => Promise<void> = async (\n        values,\n    ) => {\n        const { sendLoginEmail } = this.props;\n\n        try {\n            await sendLoginEmail(values);\n        } finally {\n            this.setState({\n                hasRequestedLoginEmail: true,\n            });\n        }\n    };\n\n    private handleContinueAsGuest: (formValues: GuestFormValues) => Promise<void> = async (\n        formValues,\n    ) => {\n        const {\n            canSubscribe,\n            continueAsGuest,\n            hasBillingId,\n            defaultShouldSubscribe,\n            onChangeViewType = noop,\n            onContinueAsGuest = noop,\n            onContinueAsGuestError = noop,\n            onSubscribeToNewsletter,\n        } = this.props;\n\n        const email = formValues.email.trim();\n        const updateSubscriptionWhenUnchecked =\n            hasBillingId || defaultShouldSubscribe ? false : undefined;\n\n        try {\n            const { data } = await continueAsGuest({\n                email,\n                acceptsMarketingNewsletter:\n                    canSubscribe && formValues.shouldSubscribe\n                        ? true\n                        : updateSubscriptionWhenUnchecked,\n                acceptsAbandonedCartEmails: formValues.shouldSubscribe\n                    ? true\n                    : updateSubscriptionWhenUnchecked,\n            });\n\n            onSubscribeToNewsletter(formValues.shouldSubscribe);\n\n            SubscribeSessionStorage.setSubscribeStatus(formValues.shouldSubscribe);\n\n            const customer = data.getCustomer();\n\n            const paymentProviderCustomer = data.getPaymentProviderCustomer();\n\n            if (customer && customer.shouldEncourageSignIn && customer.isGuest && !paymentProviderCustomer?.stripeLinkAuthenticationState) {\n                return onChangeViewType(CustomerViewType.SuggestedLogin);\n            }\n\n            await this.executePaymentMethodCheckoutOrContinue();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            if (\n                isErrorWithType(error) &&\n                (error.type === 'update_subscriptions' ||\n                    error.type === 'payment_method_client_invalid')\n            ) {\n                this.draftEmail = undefined;\n\n                onContinueAsGuest();\n            }\n\n            if (isErrorWithType(error) && error.status === 429) {\n                return onChangeViewType(CustomerViewType.EnforcedLogin);\n            }\n\n            if (isErrorWithType(error) && error.status === 403) {\n                return onChangeViewType(CustomerViewType.CancellableEnforcedLogin);\n            }\n\n            onContinueAsGuestError(error);\n        }\n    };\n\n    private handleSignIn: (credentials: CustomerCredentials) => Promise<void> = async (\n        credentials,\n    ) => {\n        const {\n            signIn,\n            onSignIn = noop,\n            onSignInError = noop,\n        } = this.props;\n\n        try {\n            await signIn(credentials);\n\n            onSignIn();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            onSignInError(error);\n        }\n    };\n\n    private handleCreateAccount: (values: CreateAccountFormValues) => void = async (values) => {\n        const {\n            createAccount = noop,\n            onAccountCreated = noop,\n        } = this.props;\n\n        await createAccount(mapCreateAccountFromFormValues(values));\n\n        onAccountCreated();\n    };\n\n    private showCreateAccount: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.CreateAccount);\n    };\n\n    private handleCancelCreateAccount: () => void = () => {\n        const { clearError, onChangeViewType = noop, createAccountError } = this.props;\n\n        if (createAccountError) {\n            clearError(createAccountError);\n        }\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private handleCancelSignIn: () => void = () => {\n        const { clearError, onChangeViewType = noop, signInError } = this.props;\n\n        if (signInError) {\n            clearError(signInError);\n        }\n\n        onChangeViewType(CustomerViewType.Guest);\n    };\n\n    private handleChangeEmail: (email: string) => void = (email) => {\n        const { analyticsTracker } = this.props;\n\n        this.draftEmail = email;\n        analyticsTracker.customerEmailEntry(email);\n    };\n\n    private handleShowLogin: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private executePaymentMethodCheckoutOrContinue: () => void = async () => {\n        const {\n            executePaymentMethodCheckout,\n            onContinueAsGuest = noop,\n            providerWithCustomCheckout\n        } = this.props;\n\n        if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n            await executePaymentMethodCheckout({\n                methodId: providerWithCustomCheckout,\n                continueWithCheckoutCallback: onContinueAsGuest,\n                checkoutPaymentMethodExecuted: (payload) => this.checkoutPaymentMethodExecuted(payload)\n            });\n        } else {\n            onContinueAsGuest();\n        }\n    };\n\n    private checkoutPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions) {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.customerPaymentMethodExecuted(payload);\n    }\n}\n\nexport function mapToWithCheckoutCustomerProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerProps | null {\n    const {\n        data: {\n            getBillingAddress,\n            getCustomerAccountFields,\n            getCheckout,\n            getCustomer,\n            getCart,\n            getSignInEmail,\n            getConfig,\n            isPaymentDataRequired,\n        },\n        errors: { getSignInError, getSignInEmailError, getCreateCustomerAccountError },\n        statuses: {\n            isContinuingAsGuest,\n            isExecutingPaymentMethodCheckout,\n            isInitializingCustomer,\n            isSigningIn,\n            isSendingSignInEmail,\n            isCreatingCustomerAccount,\n        },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const cart = getCart();\n    const signInEmail = getSignInEmail();\n    const config = getConfig();\n\n    if (!checkout || !config || !cart) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            isSignInEmailEnabled,\n            isAccountCreationEnabled,\n            isExpressPrivacyPolicy,\n            features,\n        },\n    } = config as StoreConfig & { checkoutSettings: { isAccountCreationEnabled: boolean } };\n\n    const providerWithCustomCheckout = getProviderWithCustomCheckout(\n        config.checkoutSettings.providerWithCustomCheckout,\n    );\n\n    const fixNewsletterCheckboxExperimentEnabled = features['CHECKOUT-8033.fix_newletter_checkbox'];\n\n    return {\n        customerAccountFields: getCustomerAccountFields(),\n        canSubscribe: config.shopperConfig.showNewsletterSignup,\n        checkoutButtonIds: config.checkoutSettings.remoteCheckoutProviders,\n        clearError: checkoutService.clearError,\n        createAccount: checkoutService.createCustomerAccount,\n        continueAsGuest: checkoutService.continueAsGuest,\n        sendLoginEmail: checkoutService.sendSignInEmail,\n        defaultShouldSubscribe: config.shopperConfig.defaultNewsletterSignup,\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        email: billingAddress?.email || customer?.email,\n        firstName: customer?.firstName,\n        fixNewsletterCheckboxExperimentEnabled,\n        forgotPasswordUrl: config.links.forgotPasswordLink,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isCreatingAccount: isCreatingCustomerAccount(),\n        createAccountError: getCreateCustomerAccountError(),\n        hasBillingId: !!billingAddress?.id,\n        isContinuingAsGuest: isContinuingAsGuest(),\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        isInitializing: isInitializingCustomer(),\n        isSignInEmailEnabled,\n        isAccountCreationEnabled,\n        isGuestEnabled: config.checkoutSettings.guestCheckoutEnabled,\n        isSigningIn: isSigningIn(),\n        isSendingSignInEmail: isSendingSignInEmail(),\n        signInEmail,\n        signInEmailError: getSignInEmailError(),\n        privacyPolicyUrl,\n        providerWithCustomCheckout,\n        requiresMarketingConsent,\n        signIn: checkoutService.signInCustomer,\n        signInError: getSignInError(),\n        isFloatingLabelEnabled: isFloatingLabelEnabled(config.checkoutSettings),\n        isExpressPrivacyPolicy,\n        isPaymentDataRequired: isPaymentDataRequired(),\n        shouldRenderStripeForm: providerWithCustomCheckout === PaymentMethodId.StripeUPE && shouldUseStripeLinkByMinimumAmount(cart),\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToWithCheckoutCustomerProps)(Customer));\n","import { PaymentMethodId } from './paymentMethod';\n\nexport default function getProviderWithCustomCheckout(methodId?: string | null): string | undefined {\n    if (!methodId) {\n        return undefined;\n    }\n\n    if (methodId === PaymentMethodId.PaypalCommerce || methodId === PaymentMethodId.PaypalCommerceCreditCards) {\n        return PaymentMethodId.PayPalCommerceAcceleratedCheckout;\n    }\n\n    if (methodId === PaymentMethodId.Braintree) {\n        return PaymentMethodId.BraintreeAcceleratedCheckout;\n    }\n\n    return methodId;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconTag: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconTag);\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { IconTag } from '../ui/icon';\n\nexport interface PromotionBannerProps {\n    message: string;\n}\n\nconst PromotionBanner: FunctionComponent<PromotionBannerProps> = ({ message }) => (\n    <Alert\n        additionalClassName=\"optimizedCheckout-discountBanner\"\n        icon={<IconTag />}\n        type={AlertType.Info}\n    >\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(message),\n            }}\n            data-test=\"promotion-banner-message\"\n        />\n    </Alert>\n);\n\nexport default memo(PromotionBanner);\n","import { Banner, Promotion } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport PromotionBanner from './PromotionBanner';\nimport './PromotionBannerList.scss';\n\nexport interface PromotionBannerListProps {\n    promotions?: Promotion[];\n}\n\nconst PromotionBannerList: FunctionComponent<PromotionBannerListProps> = ({ promotions }) => {\n    const banners = (promotions || []).reduce(\n        (result, promotion) => [...result, ...promotion.banners],\n        [] as Banner[],\n    );\n\n    if (!banners.length) {\n        return null;\n    }\n\n    return (\n        <div className=\"discountBanner\">\n            <ul className=\"discountBannerList\">\n                {banners.map((banner, index) => (\n                    <PromotionBanner key={index} message={banner.text} />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(PromotionBannerList);\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function hasUnassignedLineItems(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    const totalAssigned = reduce(\n        consignments,\n        (total, consignment) => total + consignment.lineItemIds.length,\n        0,\n    );\n\n    return totalAssigned < lineItems.physicalItems.filter((item) => !item.addedByPromotion).length;\n}\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { some } from 'lodash';\n\nimport hasUnassignedLineItems from './hasUnassignedLineItems';\n\nexport default function isUsingMultiShipping(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    if (consignments.length > 1) {\n        return true;\n    }\n\n    if (\n        some(consignments, (consignment) => consignment.lineItemIds.length) &&\n        hasUnassignedLineItems(consignments, lineItems)\n    ) {\n        return true;\n    }\n\n    return false;\n}\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class ShippingOptionExpiredError extends CustomError {\n    constructor() {\n        super({\n            name: 'SHIPPING_OPTION_EXPIRED',\n            message: getLanguageService().translate('shipping.shipping_option_expired_error'),\n            title: getLanguageService().translate('shipping.shipping_option_expired_heading'),\n        });\n\n        setPrototypeOf(this, ShippingOptionExpiredError.prototype);\n    }\n}\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface LoadingNotificationProps {\n    isLoading: boolean;\n}\n\nconst LoadingNotification: FunctionComponent<LoadingNotificationProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loadingNotification\">\n            <div className=\"loadingNotification-label optimizedCheckout-loadingToaster\">\n                <div className=\"spinner\" />\n\n                <span aria-live=\"assertive\" className=\"label\" role=\"alert\">\n                    <TranslatedString id=\"common.loading_text\" />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(LoadingNotification);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconCheck: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconCheck);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\nimport { IconCheck } from '../ui/icon';\n\nimport CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepHeaderProps {\n    heading: ReactNode;\n    isActive?: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onEdit?(type: CheckoutStepType): void;\n}\n\nconst CheckoutStepHeader: FunctionComponent<CheckoutStepHeaderProps> = ({\n    heading,\n    isActive,\n    isComplete,\n    isEditable,\n    onEdit,\n    summary,\n    type,\n}) => {\n    return (\n        <div\n            className={classNames('stepHeader', {\n                'is-readonly': !isEditable,\n                'is-clickable': isEditable && !isActive,\n            })}\n            onClick={preventDefault(isEditable && onEdit ? () => onEdit(type) : noop)}\n        >\n            <div className=\"stepHeader-figure stepHeader-column\">\n                <IconCheck\n                    additionalClassName={classNames(\n                        'stepHeader-counter',\n                        'optimizedCheckout-step',\n                        { 'stepHeader-counter--complete': isComplete },\n                    )}\n                />\n\n                <h2 className=\"stepHeader-title optimizedCheckout-headingPrimary\">{heading}</h2>\n            </div>\n\n            <div\n                className=\"stepHeader-body stepHeader-column optimizedCheckout-contentPrimary\"\n                data-test=\"step-info\"\n            >\n                {!isActive && isComplete && summary}\n            </div>\n\n            {isEditable && !isActive && (\n                <div className=\"stepHeader-actions stepHeader-column\">\n                    <Button\n                        aria-expanded={isActive}\n                        size={ButtonSize.Tiny}\n                        testId=\"step-edit-button\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"common.edit_action\" />\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(CheckoutStepHeader);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { Component, createRef, ReactNode } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { isMobileView, MobileView } from '../ui/responsive';\n\nimport CheckoutStepHeader from './CheckoutStepHeader';\nimport CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepProps {\n    heading?: ReactNode;\n    isActive?: boolean;\n    isBusy: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    suggestion?: ReactNode;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onExpanded?(step: CheckoutStepType): void;\n    onEdit?(step: CheckoutStepType): void;\n}\n\nexport interface CheckoutStepState {\n    isClosed: boolean;\n}\n\nexport default class CheckoutStep extends Component<CheckoutStepProps, CheckoutStepState> {\n    state = {\n        isClosed: true,\n    };\n\n    private containerRef = createRef<HTMLLIElement>();\n    private contentRef = createRef<HTMLDivElement>();\n    private timeoutRef?: number;\n    private timeoutDelay?: number;\n\n    componentDidMount(): void {\n        const { isActive } = this.props;\n\n        if (isActive) {\n            this.focusStep();\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<CheckoutStepProps>): void {\n        const { isActive } = this.props;\n\n        if (isActive && isActive !== prevProps.isActive) {\n            this.focusStep();\n        }\n    }\n\n    componentWillUnmount(): void {\n        if (this.timeoutRef) {\n            window.clearTimeout(this.timeoutRef);\n\n            this.timeoutRef = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { heading, isActive, isComplete, isEditable, onEdit, suggestion, summary, type } =\n            this.props;\n\n        const { isClosed } = this.state;\n\n        return (\n            <li\n                className={classNames('checkout-step', 'optimizedCheckout-checkoutStep', {\n                    [`checkout-step--${type}`]: !!type,\n                })}\n                ref={this.containerRef}\n            >\n                <div className=\"checkout-view-header\">\n                    <CheckoutStepHeader\n                        heading={heading}\n                        isActive={isActive}\n                        isComplete={isComplete}\n                        isEditable={isEditable}\n                        onEdit={onEdit}\n                        summary={summary}\n                        type={type}\n                    />\n                </div>\n\n                {suggestion && isClosed && !isActive && (\n                    <div className=\"checkout-suggestion\" data-test=\"step-suggestion\">\n                        {suggestion}\n                    </div>\n                )}\n\n                {this.renderContent()}\n            </li>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { children, isActive, isBusy } = this.props;\n\n        return (\n            <MobileView>\n                {(matched) => (\n                    <CSSTransition\n                        addEndListener={this.handleTransitionEnd}\n                        classNames=\"checkout-view-content\"\n                        enter={!matched}\n                        exit={!matched}\n                        in={isActive}\n                        mountOnEnter\n                        onExited={ this.onAnimationEnd }\n                        timeout={ {} }\n                        unmountOnExit\n                    >\n                        <div\n                            aria-busy={isBusy}\n                            className=\"checkout-view-content\"\n                            ref={this.contentRef}\n                        >\n                            {isActive ? children : null}\n                        </div>\n                    </CSSTransition>\n                )}\n            </MobileView>\n        );\n    }\n\n    private focusStep(): void {\n        const delay = isMobileView() ? 0 : this.getTransitionDelay();\n\n        this.setState({ isClosed: false });\n\n        this.timeoutRef = window.setTimeout(() => {\n            const input = this.getChildInput();\n            const position = this.getScrollPosition();\n            const { type, onExpanded = noop } = this.props;\n\n            if (input) {\n                input.focus();\n            }\n\n            if (position !== undefined && !isNaN(position)) {\n                window.scrollTo(0, position);\n            }\n\n            onExpanded(type);\n\n            this.timeoutRef = undefined;\n        }, delay);\n    }\n\n    private getChildInput(): HTMLElement | undefined {\n        const container = this.containerRef.current;\n\n        if (!container) {\n            return;\n        }\n\n        const input = container.querySelector<HTMLElement>('input, select, textarea');\n\n        return input || undefined;\n    }\n\n    private getScrollPosition(): number | undefined {\n        const container = this.getParentContainer();\n        const { isComplete } = this.props;\n\n        if (!container || window !== window.top) {\n            return;\n        }\n\n        const topOffset = isComplete ? 0 : window.innerHeight / 5;\n        const containerOffset =\n            container.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\n\n        return containerOffset - topOffset;\n    }\n\n    // For now, we need to find the parent container because `CheckoutStep`\n    // isn't the outer container yet. Once both the header and body are\n    // moved inside this component, we can remove the lookup.\n    private getParentContainer(): HTMLElement | undefined {\n        let container: HTMLElement | null = this.containerRef.current;\n\n        while (container && container.parentElement) {\n            if (container.parentElement.classList.contains('checkout-step')) {\n                return container.parentElement;\n            }\n\n            container = container.parentElement;\n        }\n\n        return this.containerRef.current ? this.containerRef.current : undefined;\n    }\n\n    private getTransitionDelay(): number {\n        if (this.timeoutDelay !== undefined) {\n            return this.timeoutDelay;\n        }\n\n        // Cache the result to avoid unnecessary reflow\n        this.timeoutDelay =\n            parseFloat(\n                this.contentRef.current\n                    ? getComputedStyle(this.contentRef.current).transitionDuration\n                    : '0s',\n            ) * 1000;\n\n        return this.timeoutDelay;\n    }\n\n    private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (node, done) => {\n        node.addEventListener('transitionend', ({ target }) => {\n            if (target === node) {\n                done();\n            }\n        });\n    };\n\n    private onAnimationEnd = (): void => {\n        const { isActive } = this.props;\n\n        if (!isActive) {\n            this.setState({ isClosed: true });\n        }\n    }\n}\n","import { MOBILE_MAX_WIDTH } from './breakpoints';\n\nlet query: MediaQueryList;\n\nexport default function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","enum CheckoutStepType {\n    Billing = 'billing',\n    Customer = 'customer',\n    Payment = 'payment',\n    Shipping = 'shipping',\n}\n\nexport default CheckoutStepType;\n","import { Cart, StoreConfig } from '@bigcommerce/checkout-sdk';\n\nconst itemsRequireShipping = (cart?: Cart, config?: StoreConfig) => {\n    if (!cart) {\n        return false;\n    }\n\n    if (cart.lineItems.physicalItems.some((lineItem) => lineItem.isShippingRequired)) {\n        return true;\n    }\n\n    if (\n        config &&\n        config.checkoutSettings.features['CHECKOUT-4936.enable_custom_item_shipping'] &&\n        cart.lineItems.customItems\n    ) {\n        return cart.lineItems.customItems.length > 0;\n    }\n\n    return false;\n};\n\nexport default itemsRequireShipping;\n","import { CheckoutSelectors } from '@bigcommerce/checkout-sdk';\nimport { compact } from 'lodash';\nimport { createSelector } from 'reselect';\n\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\n\nimport { isValidAddress } from '../address';\nimport { EMPTY_ARRAY } from '../common/utility';\nimport { SUPPORTED_METHODS } from '../customer';\nimport { PaymentMethodId } from '../payment/paymentMethod';\nimport {\n    hasSelectedShippingOptions,\n    hasUnassignedLineItems,\n    itemsRequireShipping,\n} from '../shipping';\n\nimport CheckoutStepType from './CheckoutStepType';\n\n// StripeLink is a UX that is only available with StripeUpe and will only be displayed for BC guest users,\n// it uses its own components in the customer and shipping steps, unfortunately in order to preserve the UX\n// when reloading the checkout page it's necessary to refill the stripe components with the information saved.\n// In this step, we require that the customer strategy be reloaded the first time.\nconst getStripeLinkAndCheckoutPageIsReloaded = (\n    isUsingWallet: boolean,\n    hasEmail: boolean,\n    isGuest: boolean,\n    shouldUseStripeLinkByMinimumAmount: boolean,\n    providerWithCustomCheckout?: string | null,\n) => {\n    return !isUsingWallet && providerWithCustomCheckout === PaymentMethodId.StripeUPE && hasEmail && isGuest && shouldUseStripeLinkByMinimumAmount;\n}\n\nconst getCustomerStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getCustomer(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => data.getPaymentProviderCustomer(),\n    (checkout, customer, billingAddress, config, cart, paymentProviderCustomer) => {\n        const hasEmail = !!(\n            (customer && customer.email) ||\n            (billingAddress && billingAddress.email)\n        );\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                      (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0,\n                  )\n                : false;\n        const isGuest = !!(customer && customer.isGuest);\n        const isComplete = hasEmail || isUsingWallet;\n        const isEditable = isComplete && !isUsingWallet && isGuest;\n        const isUsingStripeLinkAndCheckoutPageIsReloaded = getStripeLinkAndCheckoutPageIsReloaded(\n            isUsingWallet,\n            hasEmail,\n            isGuest,\n            cart ? shouldUseStripeLinkByMinimumAmount(cart) : false,\n            config?.checkoutSettings.providerWithCustomCheckout,\n        );\n\n        if (isUsingStripeLinkAndCheckoutPageIsReloaded) {\n            return {\n                type: CheckoutStepType.Customer,\n                isActive: false,\n                isComplete: paymentProviderCustomer?.stripeLinkAuthenticationState !== undefined,\n                isEditable,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Customer,\n            isActive: false,\n            isComplete,\n            isEditable,\n            isRequired: true,\n        };\n    },\n);\n\nconst getBillingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => {\n        const billingAddress = data.getBillingAddress();\n\n        return billingAddress\n            ? data.getBillingAddressFields(billingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    (checkout, billingAddress, billingAddressFields) => {\n        const hasAddress = billingAddress\n            ? isValidAddress(billingAddress, billingAddressFields)\n            : false;\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                      (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0,\n                  )\n                : false;\n        const isComplete = hasAddress || isUsingWallet;\n        const isUsingAmazonPay =\n            checkout && checkout.payments\n                ? checkout.payments.some((payment) => payment.providerId === 'amazonpay')\n                : false;\n\n        if (isUsingAmazonPay) {\n            const billingAddressCustomFields = billingAddressFields.filter(\n                ({ custom }: { custom: boolean }) => custom,\n            );\n            const hasCustomFields = billingAddressCustomFields.length > 0;\n            const isAmazonPayBillingStepComplete =\n                billingAddress && hasCustomFields\n                    ? isValidAddress(billingAddress, billingAddressCustomFields)\n                    : true;\n\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: isAmazonPayBillingStepComplete,\n                isEditable: isAmazonPayBillingStepComplete && hasCustomFields,\n                isRequired: true,\n            };\n        }\n\n        const isUsingPaypal =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment) =>\n                        [\n                            'braintreepaypal',\n                            'braintreepaypalcredit',\n                            'braintreevenmo',\n                            'paypalcommerce',\n                            'paypalcommercecredit',\n                            'paypalcommercevenmo'\n                        ]\n                            .includes(payment.providerId))\n                : false;\n\n        if (isUsingPaypal) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Billing,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && !isUsingWallet,\n            isRequired: true,\n        };\n    },\n);\n\nconst getShippingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getShippingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConsignments(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => {\n        const shippingAddress = data.getShippingAddress();\n\n        return shippingAddress\n            ? data.getShippingAddressFields(shippingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (shippingAddress, consignments, cart, shippingAddressFields, config) => {\n        const hasAddress = shippingAddress\n            ? isValidAddress(shippingAddress, shippingAddressFields)\n            : false;\n        const hasOptions = consignments ? hasSelectedShippingOptions(consignments) : false;\n        const hasUnassignedItems =\n            cart && consignments ? hasUnassignedLineItems(consignments, cart.lineItems) : true;\n        const isComplete = hasAddress && hasOptions && !hasUnassignedItems;\n        const isRequired = itemsRequireShipping(cart, config);\n\n        return {\n            type: CheckoutStepType.Shipping,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && isRequired,\n            isRequired,\n        };\n    },\n);\n\nconst getPaymentStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getOrder(),\n    (order) => {\n        const isComplete = order ? order.isComplete : false;\n\n        return {\n            type: CheckoutStepType.Payment,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete,\n            isRequired: true,\n        };\n    },\n);\n\nconst getCheckoutStepStatuses = createSelector(\n    getCustomerStepStatus,\n    getShippingStepStatus,\n    getBillingStepStatus,\n    getPaymentStepStatus,\n    (customerStep, shippingStep, billingStep, paymentStep) => {\n        const steps = compact([customerStep, shippingStep, billingStep, paymentStep]);\n\n        const defaultActiveStep =\n            steps.find((step) => !step.isComplete && step.isRequired) || steps[steps.length - 1];\n\n        return steps.map((step, index) => {\n            const isPrevStepComplete = steps\n                .slice(0, index)\n                .every((prevStep) => prevStep.isComplete || !prevStep.isRequired);\n\n            return {\n                ...step,\n                isActive: defaultActiveStep.type === step.type,\n                isBusy: false,\n                // A step is only editable if its previous step is complete or not required\n                isEditable: isPrevStepComplete && step.isEditable,\n            };\n        });\n    },\n);\n\nexport default getCheckoutStepStatuses;\n","import { Address } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nexport type AddressDisplayConfig = {\n  name?: boolean;\n  email?: boolean;\n  address1?: boolean;\n  address2?: boolean;\n  city?: boolean;\n  stateOrProvince?: boolean;\n  stateOrProvinceCode?: boolean;\n  postalCode?: boolean;\n  country?: boolean;\n  countryCode?: boolean;\n  phone?: boolean;\n  company?: boolean;\n};\n\ntype AddressDisplay = {\n  address: Address;\n  displayConfig?: AddressDisplayConfig;\n  className?: string;\n};\n\nconst defaultConfig = {\n  name: false,\n  country: false,\n  phone: false,\n} as AddressDisplayConfig;\n\nexport const AddressDisplay = ({ address, displayConfig = {} }: AddressDisplay) => {\n  const finalConfig = { ...defaultConfig, ...displayConfig };\n\n  return (\n    <div className=\"ibc-address-display\">\n      {finalConfig.name && (\n        <span className=\"ibc-address-name\">\n          {address?.firstName} {address?.lastName}\n        </span>\n      )}\n      {finalConfig.company && address?.company && <span>{address?.company}</span>}\n      <span className=\"ibc-address1\">{address?.address1}</span>\n      <span>{address?.address2}</span>\n      <span>\n        {address?.city}, {address?.stateOrProvince} {address?.postalCode}\n      </span>\n      {finalConfig.country && <span>{address?.country}</span>}\n      {finalConfig.phone && <span>{address?.phone}</span>}\n    </div>\n  );\n};\n","import React from 'react';\nimport { AddressDisplay } from '../AddressDisplay/AddressDisplay';\nimport { Address } from '@bigcommerce/checkout-sdk';\n\ntype ShippingStepProps = {\n  address: Address;\n};\n\nexport const ShippingStep = ({ address }: ShippingStepProps) => {\n  return (\n    <div className=\"relative grid max-md:grid-cols-1 gap-4 md:grid-cols-3\">\n      <span className=\"text-ibc-blue col-span-1 text-2xl font-semibold\">Shipping</span>\n      <div className=\"col-span-2 flex flex-col gap-4\">\n        <AddressDisplay\n          displayConfig={{\n            name: true,\n            company: true,\n            country: true,\n          }}\n          address={address}\n        />\n\n        {/* {consignment?.selectedShippingOption?.entityId && (\n          <span className=\"border-light-border text-ibc-blue border-t pt-4\">\n            {consignment?.selectedShippingOption?.description}:{' '}\n            <PriceDisplay amount={consignment.selectedShippingOption.cost?.value} />\n          </span>\n        )} */}\n      </div>\n      <span\n        role=\"button\"\n        className=\"text-primary pointer-events-auto absolute right-0 top-0 text-sm underline max-md:col-span-1 md:col-span-2\"\n      >\n        Edit\n      </span>\n    </div>\n  );\n};\n","import {\n  Address,\n  Cart,\n  CartChangedError,\n  CheckoutParams,\n  CheckoutSelectors,\n  Consignment,\n  EmbeddedCheckoutMessenger,\n  EmbeddedCheckoutMessengerOptions,\n  FlashMessage,\n  Customer as ICustomer,\n  Order,\n  PaymentMethod,\n  Promotion,\n  RequestOptions,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { find, findIndex } from 'lodash';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { ExtensionContextProps, withExtension } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { AddressFormSkeleton, ChecklistSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { StaticBillingAddress } from '../billing';\nimport { EmptyCartMessage } from '../cart';\nimport { withCheckout } from '../checkout';\nimport { CustomError, ErrorModal, isCustomError } from '../common/error';\nimport { retry } from '../common/utility';\nimport {\n  CheckoutButtonContainer,\n  CheckoutSuggestion,\n  Customer,\n  CustomerInfo,\n  CustomerSignOutEvent,\n  CustomerViewType,\n} from '../customer';\nimport { getSupportedMethodIds } from '../customer/getSupportedMethods';\nimport { SubscribeSessionStorage } from '../customer/SubscribeSessionStorage';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport { PromotionBannerList } from '../promotion';\nimport { hasSelectedShippingOptions, isUsingMultiShipping } from '../shipping';\nimport { ShippingOptionExpiredError } from '../shipping/shippingOption';\nimport { LazyContainer, LoadingNotification, LoadingOverlay } from '../ui/loading';\nimport { MobileView } from '../ui/responsive';\n\nimport CheckoutStep from './CheckoutStep';\nimport CheckoutStepStatus from './CheckoutStepStatus';\nimport CheckoutStepType from './CheckoutStepType';\nimport CheckoutSupport from './CheckoutSupport';\nimport mapToCheckoutProps from './mapToCheckoutProps';\nimport navigateToOrderConfirmation from './navigateToOrderConfirmation';\nimport { ShippingStep } from './ShippingStep/ShippingStep';\n\nconst Billing = lazy(() =>\n  retry(\n    () =>\n      import(\n        /* webpackChunkName: \"billing\" */\n        '../billing/Billing'\n      ),\n  ),\n);\n\nconst CartSummary = lazy(() =>\n  retry(\n    () =>\n      import(\n        /* webpackChunkName: \"cart-summary\" */\n        '../cart/CartSummary'\n      ),\n  ),\n);\n\nconst CartSummaryDrawer = lazy(() =>\n  retry(\n    () =>\n      import(\n        /* webpackChunkName: \"cart-summary-drawer\" */\n        '../cart/CartSummaryDrawer'\n      ),\n  ),\n);\n\nconst Payment = lazy(() =>\n  retry(\n    () =>\n      import(\n        /* webpackChunkName: \"payment\" */\n        '../payment/Payment'\n      ),\n  ),\n);\n\nexport interface CheckoutProps {\n  checkoutId: string;\n  containerId: string;\n  embeddedStylesheet: EmbeddedCheckoutStylesheet;\n  embeddedSupport: CheckoutSupport;\n  errorLogger: ErrorLogger;\n  createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nexport interface CheckoutState {\n  activeStepType?: CheckoutStepType;\n  isBillingSameAsShipping: boolean;\n  customerViewType?: CustomerViewType;\n  defaultStepType?: CheckoutStepType;\n  error?: Error;\n  flashMessages?: FlashMessage[];\n  isMultiShippingMode: boolean;\n  isCartEmpty: boolean;\n  isRedirecting: boolean;\n  hasSelectedShippingOptions: boolean;\n  isHidingStepNumbers: boolean;\n  isSubscribed: boolean;\n  buttonConfigs: PaymentMethod[];\n\n  shippingAddress?: Address;\n  billingAddress?: Address;\n  customer: ICustomer;\n  order: Order;\n}\n\nexport interface WithCheckoutProps {\n  billingAddress?: Address;\n  cart?: Cart;\n  consignments?: Consignment[];\n  error?: Error;\n  hasCartChanged: boolean;\n  flashMessages?: FlashMessage[];\n  isGuestEnabled: boolean;\n  isLoadingCheckout: boolean;\n  isPending: boolean;\n  isPriceHiddenFromGuests: boolean;\n  isShowingWalletButtonsOnTop: boolean;\n  loginUrl: string;\n  cartUrl: string;\n  createAccountUrl: string;\n  promotions?: Promotion[];\n  steps: CheckoutStepStatus[];\n  clearError(error?: Error): void;\n  loadCheckout(id: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors>;\n  loadPaymentMethodByIds(methodIds: string[]): Promise<CheckoutSelectors>;\n  subscribeToConsignments(subscriber: (state: CheckoutSelectors) => void): () => void;\n}\n\nclass Checkout extends Component<\n  CheckoutProps &\n    WithCheckoutProps &\n    WithLanguageProps &\n    AnalyticsContextProps &\n    ExtensionContextProps,\n  CheckoutState\n> {\n  state: CheckoutState = {\n    isBillingSameAsShipping: true,\n    isCartEmpty: false,\n    isRedirecting: false,\n    isMultiShippingMode: false,\n    hasSelectedShippingOptions: false,\n    isHidingStepNumbers: true,\n    isSubscribed: false,\n    buttonConfigs: [],\n    customer: {} as ICustomer,\n    order: {} as Order,\n  };\n\n  private embeddedMessenger?: EmbeddedCheckoutMessenger;\n  private unsubscribeFromConsignments?: () => void;\n\n  componentWillUnmount(): void {\n    if (this.unsubscribeFromConsignments) {\n      this.unsubscribeFromConsignments();\n      this.unsubscribeFromConsignments = undefined;\n    }\n\n    window.removeEventListener('beforeunload', this.handleBeforeExit);\n    this.handleBeforeExit();\n  }\n\n  async componentDidMount(): Promise<void> {\n    const {\n      analyticsTracker,\n      checkoutId,\n      containerId,\n      createEmbeddedMessenger,\n      embeddedStylesheet,\n      extensionService,\n      loadCheckout,\n      loadPaymentMethodByIds,\n      subscribeToConsignments,\n    } = this.props;\n\n    try {\n      const [{ data }] = await Promise.all([\n        loadCheckout(checkoutId, {\n          params: {\n            include: [\n              'cart.lineItems.physicalItems.categoryNames',\n              'cart.lineItems.digitalItems.categoryNames',\n            ] as any, // FIXME: Currently the enum is not exported so it can't be used here.\n          },\n        }),\n        extensionService.loadExtensions(),\n      ]);\n\n      console.log('checkout data::::', data);\n\n      const providers = data.getConfig()?.checkoutSettings?.remoteCheckoutProviders || [];\n      const supportedProviders = getSupportedMethodIds(providers);\n\n      if (providers.length > 0) {\n        const configs = await loadPaymentMethodByIds(supportedProviders);\n\n        this.setState({\n          buttonConfigs: configs.data.getPaymentMethods() || [],\n        });\n      }\n\n      extensionService.preloadExtensions();\n\n      const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n      const errorFlashMessages = data.getFlashMessages('error') || [];\n\n      if (errorFlashMessages.length) {\n        const { language } = this.props;\n\n        this.setState({\n          error: new CustomError({\n            title: errorFlashMessages[0].title || language.translate('common.error_heading'),\n            message: errorFlashMessages[0].message,\n            data: {},\n            name: 'default',\n          }),\n        });\n      }\n\n      const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n      this.unsubscribeFromConsignments = subscribeToConsignments(this.handleConsignmentsUpdated);\n      this.embeddedMessenger = messenger;\n      messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n      messenger.postFrameLoaded({ contentId: containerId });\n      messenger.postLoaded();\n\n      analyticsTracker.checkoutBegin();\n\n      const consignments = data.getConsignments();\n      const cart = data.getCart();\n\n      const hasMultiShippingEnabled = data.getConfig()?.checkoutSettings.hasMultiShippingEnabled;\n      const checkoutBillingSameAsShippingEnabled =\n        data.getConfig()?.checkoutSettings.checkoutBillingSameAsShippingEnabled ?? true;\n      const removeStepNumbersFlag =\n        data.getConfig()?.checkoutSettings.features['CHECKOUT-7255.remove_checkout_step_numbers'] ??\n        false;\n      const defaultNewsletterSignupOption =\n        data.getConfig()?.shopperConfig.defaultNewsletterSignup ?? false;\n      const isMultiShippingMode =\n        !!cart &&\n        !!consignments &&\n        hasMultiShippingEnabled &&\n        isUsingMultiShipping(consignments, cart.lineItems);\n\n      this.setState({\n        isBillingSameAsShipping: checkoutBillingSameAsShippingEnabled,\n        isHidingStepNumbers: removeStepNumbersFlag,\n        isSubscribed: defaultNewsletterSignupOption,\n\n        shippingAddress: data.getShippingAddress(),\n        billingAddress: data.getBillingAddress(),\n        customer: data.getCustomer()!,\n        order: data.getOrder()!,\n      });\n\n      if (isMultiShippingMode) {\n        this.setState({ isMultiShippingMode }, this.handleReady);\n      } else {\n        this.handleReady();\n      }\n\n      window.addEventListener('beforeunload', this.handleBeforeExit);\n    } catch (error) {\n      if (error instanceof Error) {\n        this.handleUnhandledError(error);\n      }\n    }\n  }\n\n  render(): ReactNode {\n    const { error, isHidingStepNumbers } = this.state;\n    let errorModal = null;\n\n    if (error) {\n      if (isCustomError(error)) {\n        errorModal = (\n          <ErrorModal error={error} onClose={this.handleCloseErrorModal} title={error.title} />\n        );\n      } else {\n        errorModal = <ErrorModal error={error} onClose={this.handleCloseErrorModal} />;\n      }\n    }\n\n    return (\n      <div\n        className={classNames({\n          'is-embedded': isEmbedded(),\n          'remove-checkout-step-numbers': isHidingStepNumbers,\n        })}\n        data-test=\"checkout-page-container\"\n        id=\"checkout-page-container\"\n      >\n        <div className=\"header-top-container ibc-container\" style={{ height: '70px' }}>\n          <a href=\"https://localhost:3002/cart\" style={{ filter: 'brightness(0) invert(1)' }}>\n            <img\n              src=\"https://res.cloudinary.com/dsewycgig/image/upload/v1705889390/ibf_assets/ibf-brightblue_1701195858__78176.original_u75ege.png\"\n              alt=\"Ignatius Book Fairs\"\n              className=\"rounded-none\"\n              width=\"180px\"\n              height=\"76px\"\n            />\n          </a>\n          <div className=\"header-top-links-container\">\n            <a href=\"/\"> Donate </a>\n            <a href=\"/\"> Book Fairs </a>\n            <a href=\"/\"> Book Club </a>\n            <a\n              href=\"/\"\n              className=\"text-ibc-orange rounded-md bg-transparent bg-white px-4 py-2 uppercase\"\n            >\n              Shop\n            </a>\n          </div>\n        </div>\n\n        <div className=\"bg-light-page-bg ibc-container py-20 checkout-page-container\">\n          <h1 className=\"checkout-page-title\">\n            Checkout\n            <a href=\"https://localhost:3002/cart\">Edit Cart</a>\n          </h1>\n        </div>\n        <div className=\"layout optimizedCheckout-contentPrimary\">{this.renderContent()}</div>\n\n        {errorModal}\n      </div>\n    );\n  }\n\n  private renderContent(): ReactNode {\n    const {\n      isPending,\n      loginUrl,\n      promotions = [],\n      steps,\n      isShowingWalletButtonsOnTop,\n      extensionState,\n    } = this.props;\n\n    const { activeStepType, defaultStepType, isCartEmpty, isRedirecting } = this.state;\n\n    if (isCartEmpty) {\n      return <EmptyCartMessage loginUrl={loginUrl} waitInterval={3000} />;\n    }\n\n    const isPaymentStepActive = activeStepType\n      ? activeStepType === CheckoutStepType.Payment\n      : defaultStepType === CheckoutStepType.Payment;\n\n    return (\n      <LoadingOverlay hideContentWhenLoading isLoading={isRedirecting}>\n        <div className=\"layout-main\">\n          <LoadingNotification\n            isLoading={\n              (!isShowingWalletButtonsOnTop && isPending) ||\n              extensionState.isShowingLoadingIndicator\n            }\n          />\n\n          <PromotionBannerList promotions={promotions} />\n\n          {isShowingWalletButtonsOnTop && this.state.buttonConfigs?.length > 0 && (\n            <CheckoutButtonContainer\n              checkEmbeddedSupport={this.checkEmbeddedSupport}\n              isPaymentStepActive={isPaymentStepActive}\n              onUnhandledError={this.handleUnhandledError}\n              onWalletButtonClick={this.handleWalletButtonClick}\n            />\n          )}\n\n          <ol className=\"checkout-steps\">\n            {steps\n              .filter((step) => step.isRequired)\n              .map((step) =>\n                this.renderStep({\n                  ...step,\n                  isActive: activeStepType\n                    ? activeStepType === step.type\n                    : defaultStepType === step.type,\n                  isBusy: isPending,\n                }),\n              )}\n          </ol>\n        </div>\n\n        {this.renderCartSummary()}\n      </LoadingOverlay>\n    );\n  }\n\n  private renderStep(step: CheckoutStepStatus): ReactNode {\n    switch (step.type) {\n      case CheckoutStepType.Customer:\n        return this.renderCustomerStep(step);\n\n      case CheckoutStepType.Shipping:\n        return <ShippingStep address={this.state.shippingAddress!} />;\n\n      case CheckoutStepType.Billing:\n        return this.renderBillingStep(step);\n\n      case CheckoutStepType.Payment:\n        return this.renderPaymentStep(step);\n\n      default:\n        return null;\n    }\n  }\n\n  private renderCustomerStep(step: CheckoutStepStatus): ReactNode {\n    const { isGuestEnabled, isShowingWalletButtonsOnTop } = this.props;\n    const {\n      customerViewType = isGuestEnabled ? CustomerViewType.Guest : CustomerViewType.Login,\n      isSubscribed,\n    } = this.state;\n\n    return (\n      <CheckoutStep\n        {...step}\n        heading={<TranslatedString id=\"customer.customer_heading\" />}\n        key={step.type}\n        onEdit={this.handleEditStep}\n        onExpanded={this.handleExpanded}\n        suggestion={<CheckoutSuggestion />}\n        summary={<CustomerInfo onSignOut={this.handleSignOut} onSignOutError={this.handleError} />}\n      >\n        <Customer\n          checkEmbeddedSupport={this.checkEmbeddedSupport}\n          isEmbedded={isEmbedded()}\n          isSubscribed={isSubscribed}\n          isWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n          onAccountCreated={this.navigateToNextIncompleteStep}\n          onChangeViewType={this.setCustomerViewType}\n          onContinueAsGuest={this.navigateToNextIncompleteStep}\n          onContinueAsGuestError={this.handleError}\n          onReady={this.handleReady}\n          onSignIn={this.navigateToNextIncompleteStep}\n          onSignInError={this.handleError}\n          onSubscribeToNewsletter={this.handleNewsletterSubscription}\n          onUnhandledError={this.handleUnhandledError}\n          onWalletButtonClick={this.handleWalletButtonClick}\n          step={step}\n          viewType={customerViewType}\n        />\n      </CheckoutStep>\n    );\n  }\n\n  private renderBillingStep(step: CheckoutStepStatus): ReactNode {\n    const { billingAddress } = this.props;\n\n    return (\n      <CheckoutStep\n        {...step}\n        heading={<TranslatedString id=\"billing.billing_heading\" />}\n        key={step.type}\n        onEdit={this.handleEditStep}\n        onExpanded={this.handleExpanded}\n        summary={billingAddress && <StaticBillingAddress address={billingAddress} />}\n      >\n        <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n          <Billing\n            navigateNextStep={this.navigateToNextIncompleteStep}\n            onReady={this.handleReady}\n            onUnhandledError={this.handleUnhandledError}\n          />\n        </LazyContainer>\n      </CheckoutStep>\n    );\n  }\n\n  private renderPaymentStep(step: CheckoutStepStatus): ReactNode {\n    const { consignments, cart, errorLogger } = this.props;\n\n    return (\n      <CheckoutStep\n        {...step}\n        heading={<TranslatedString id=\"payment.payment_heading\" />}\n        key={step.type}\n        onEdit={this.handleEditStep}\n        onExpanded={this.handleExpanded}\n      >\n        <LazyContainer loadingSkeleton={<ChecklistSkeleton />}>\n          <Payment\n            checkEmbeddedSupport={this.checkEmbeddedSupport}\n            errorLogger={errorLogger}\n            isEmbedded={isEmbedded()}\n            isUsingMultiShipping={\n              cart && consignments ? isUsingMultiShipping(consignments, cart.lineItems) : false\n            }\n            onCartChangedError={this.handleCartChangedError}\n            onFinalize={this.navigateToOrderConfirmation}\n            onReady={this.handleReady}\n            onSubmit={this.navigateToOrderConfirmation}\n            onSubmitError={this.handleError}\n            onUnhandledError={this.handleUnhandledError}\n          />\n        </LazyContainer>\n      </CheckoutStep>\n    );\n  }\n\n  private renderCartSummary(): ReactNode {\n    return (\n      <MobileView>\n        {(matched) => {\n          if (matched) {\n            return (\n              <LazyContainer>\n                <CartSummaryDrawer />\n              </LazyContainer>\n            );\n          }\n\n          return (\n            <aside className=\"layout-cart\">\n              <LazyContainer>\n                <CartSummary />\n              </LazyContainer>\n            </aside>\n          );\n        }}\n      </MobileView>\n    );\n  }\n\n  private navigateToStep(type: CheckoutStepType, options?: { isDefault?: boolean }): void {\n    const { clearError, error, steps } = this.props;\n    const { activeStepType } = this.state;\n    const step = find(steps, { type });\n\n    if (!step) {\n      return;\n    }\n\n    if (activeStepType === step.type) {\n      return;\n    }\n\n    if (options && options.isDefault) {\n      this.setState({ defaultStepType: step.type });\n    } else {\n      this.setState({ activeStepType: step.type });\n    }\n\n    if (error) {\n      clearError(error);\n    }\n  }\n\n  private navigateToNextIncompleteStep: (options?: { isDefault?: boolean }) => void = (options) => {\n    const { steps, analyticsTracker } = this.props;\n    const activeStepIndex = findIndex(steps, { isActive: true });\n    const activeStep = activeStepIndex >= 0 && steps[activeStepIndex];\n\n    if (!activeStep) {\n      return;\n    }\n\n    const previousStep = steps[Math.max(activeStepIndex - 1, 0)];\n\n    if (previousStep) {\n      analyticsTracker.trackStepCompleted(previousStep.type);\n    }\n\n    this.navigateToStep(activeStep.type, options);\n  };\n\n  private navigateToOrderConfirmation: (orderId?: number) => void = (orderId) => {\n    const { steps, analyticsTracker } = this.props;\n\n    analyticsTracker.trackStepCompleted(steps[steps.length - 1].type);\n\n    if (this.embeddedMessenger) {\n      this.embeddedMessenger.postComplete();\n    }\n\n    SubscribeSessionStorage.removeSubscribeStatus();\n\n    this.setState({ isRedirecting: true }, () => {\n      navigateToOrderConfirmation(orderId);\n    });\n  };\n\n  private checkEmbeddedSupport: (methodIds: string[]) => boolean = (methodIds) => {\n    const { embeddedSupport } = this.props;\n\n    return embeddedSupport.isSupported(...methodIds);\n  };\n\n  private handleCartChangedError: (error: CartChangedError) => void = () => {\n    this.navigateToStep(CheckoutStepType.Shipping);\n  };\n\n  private handleConsignmentsUpdated: (state: CheckoutSelectors) => void = ({ data }) => {\n    const {\n      hasSelectedShippingOptions: prevHasSelectedShippingOptions,\n      activeStepType,\n      defaultStepType,\n    } = this.state;\n\n    const { steps } = this.props;\n\n    const newHasSelectedShippingOptions = hasSelectedShippingOptions(data.getConsignments() || []);\n\n    const isDefaultStepPaymentOrBilling =\n      !activeStepType &&\n      (defaultStepType === CheckoutStepType.Payment ||\n        defaultStepType === CheckoutStepType.Billing);\n\n    const isShippingStepFinished =\n      findIndex(steps, { type: CheckoutStepType.Shipping }) <\n        findIndex(steps, { type: activeStepType }) || isDefaultStepPaymentOrBilling;\n\n    if (\n      prevHasSelectedShippingOptions &&\n      !newHasSelectedShippingOptions &&\n      isShippingStepFinished\n    ) {\n      this.navigateToStep(CheckoutStepType.Shipping);\n      this.setState({ error: new ShippingOptionExpiredError() });\n    }\n\n    this.setState({ hasSelectedShippingOptions: newHasSelectedShippingOptions });\n  };\n\n  private handleCloseErrorModal: () => void = () => {\n    this.setState({ error: undefined });\n  };\n\n  private handleExpanded: (type: CheckoutStepType) => void = (type) => {\n    const { analyticsTracker } = this.props;\n\n    analyticsTracker.trackStepViewed(type);\n  };\n\n  private handleUnhandledError: (error: Error) => void = (error) => {\n    this.handleError(error);\n\n    // For errors that are not caught and handled by child components, we\n    // handle them here by displaying a generic error modal to the shopper.\n    this.setState({ error });\n  };\n\n  private handleError: (error: Error) => void = (error) => {\n    const { errorLogger } = this.props;\n\n    errorLogger.log(error);\n\n    if (this.embeddedMessenger) {\n      this.embeddedMessenger.postError(error);\n    }\n  };\n\n  private handleEditStep: (type: CheckoutStepType) => void = (type) => {\n    this.navigateToStep(type);\n  };\n\n  private handleReady: () => void = () => {\n    this.navigateToNextIncompleteStep({ isDefault: true });\n  };\n\n  private handleNewsletterSubscription: (subscribed: boolean) => void = (subscribed) => {\n    this.setState({ isSubscribed: subscribed });\n  };\n\n  private handleSignOut: (event: CustomerSignOutEvent) => void = ({ isCartEmpty }) => {\n    const { loginUrl, cartUrl, isPriceHiddenFromGuests, isGuestEnabled } = this.props;\n\n    if (isPriceHiddenFromGuests) {\n      if (window.top) {\n        return (window.top.location.href = cartUrl);\n      }\n    }\n\n    if (this.embeddedMessenger) {\n      this.embeddedMessenger.postSignedOut();\n    }\n\n    if (isGuestEnabled) {\n      this.setCustomerViewType(CustomerViewType.Guest);\n    }\n\n    if (isCartEmpty) {\n      this.setState({ isCartEmpty: true });\n\n      if (!isEmbedded()) {\n        if (window.top) {\n          return window.top.location.assign(loginUrl);\n        }\n      }\n    }\n\n    this.navigateToStep(CheckoutStepType.Customer);\n  };\n\n  private setCustomerViewType: (viewType: CustomerViewType) => void = (customerViewType) => {\n    const { createAccountUrl } = this.props;\n\n    if (customerViewType === CustomerViewType.CreateAccount && isEmbedded()) {\n      if (window.top) {\n        window.top.location.replace(createAccountUrl);\n      }\n\n      return;\n    }\n\n    this.navigateToStep(CheckoutStepType.Customer);\n    this.setState({ customerViewType });\n  };\n\n  private handleBeforeExit: () => void = () => {\n    const { analyticsTracker } = this.props;\n\n    analyticsTracker.exitCheckout();\n  };\n\n  private handleWalletButtonClick: (methodName: string) => void = (methodName) => {\n    const { analyticsTracker } = this.props;\n\n    analyticsTracker.walletButtonClick(methodName);\n  };\n}\n\nexport default withExtension(\n  withAnalytics(withLanguage(withCheckout(mapToCheckoutProps)(Checkout))),\n);\n","import { CheckoutSelectors, CustomError } from '@bigcommerce/checkout-sdk';\nimport { createSelector } from 'reselect';\n\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { EMPTY_ARRAY } from '../common/utility';\n\nimport { WithCheckoutProps } from './Checkout';\nimport getCheckoutStepStatuses from './getCheckoutStepStatuses';\n\nexport default function mapToCheckoutProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutProps {\n    const { data, errors, statuses } = checkoutState;\n    const { promotions = EMPTY_ARRAY } = data.getCheckout() || {};\n    const submitOrderError = errors.getSubmitOrderError() as CustomError;\n    const {\n        checkoutSettings: {\n            guestCheckoutEnabled: isGuestEnabled = false,\n            checkoutUserExperienceSettings = {\n                walletButtonsOnTop: false,\n                floatingLabelEnabled: false,\n            } ,\n        } = {},\n        links: {\n            loginLink: loginUrl = '',\n            createAccountLink: createAccountUrl = '',\n            cartLink: cartUrl = '',\n        } = {},\n        displaySettings: { hidePriceFromGuests: isPriceHiddenFromGuests = false } = {},\n    } = data.getConfig() || {};\n\n    const subscribeToConsignmentsSelector = createSelector(\n        ({ checkoutService: { subscribe } }: CheckoutContextProps) => subscribe,\n        (subscribe) => (subscriber: (state: CheckoutSelectors) => void) => {\n            return subscribe(subscriber, ({ data: { getConsignments } }) => getConsignments());\n        },\n    );\n\n    const walletButtonsOnTopFlag = Boolean(checkoutUserExperienceSettings.walletButtonsOnTop);\n\n    return {\n        billingAddress: data.getBillingAddress(),\n        cart: data.getCart(),\n        clearError: checkoutService.clearError,\n        consignments: data.getConsignments(),\n        hasCartChanged: submitOrderError && submitOrderError.type === 'cart_changed', // TODO: Need to clear the error once it's displayed\n        isGuestEnabled,\n        isLoadingCheckout: statuses.isLoadingCheckout(),\n        isPending: statuses.isPending(),\n        isPriceHiddenFromGuests,\n        isShowingWalletButtonsOnTop: walletButtonsOnTopFlag,\n        loadCheckout: checkoutService.loadCheckout,\n        loadPaymentMethodByIds: checkoutService.loadPaymentMethodByIds,\n        loginUrl,\n        cartUrl,\n        createAccountUrl,\n        promotions,\n        subscribeToConsignments: subscribeToConsignmentsSelector({\n            checkoutService,\n            checkoutState,\n        }),\n        steps: data.getCheckout() ? getCheckoutStepStatuses(checkoutState) : EMPTY_ARRAY,\n    };\n}\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport { BrowserOptions } from '@sentry/browser';\nimport React, { Component } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport {\n    createEmbeddedCheckoutStylesheet,\n    createEmbeddedCheckoutSupport,\n} from '../embeddedCheckout';\n\nimport Checkout from './Checkout';\n\nexport interface CheckoutAppProps {\n    checkoutId: string;\n    containerId: string;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nexport default class CheckoutApp extends Component<CheckoutAppProps> {\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private embeddedSupport = createEmbeddedCheckoutSupport(getLanguageService());\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<CheckoutAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n    }\n\n    render() {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <AnalyticsProvider checkoutService={this.checkoutService}>\n                            <ExtensionProvider checkoutService={this.checkoutService}>\n                                <Checkout\n                                    {...this.props}\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                    embeddedStylesheet={this.embeddedStylesheet}\n                                    embeddedSupport={this.embeddedSupport}\n                                    errorLogger={this.errorLogger}\n                                />\n                            </ExtensionProvider>\n                        </AnalyticsProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n}\n","import React, { ComponentType, Context, FunctionComponent, memo, useContext, useMemo } from 'react';\nimport { Omit } from 'utility-types';\n\nimport { MatchedProps } from './InjectHoc';\nimport MappableInjectHoc, { MapToProps, MapToPropsFactory } from './MappableInjectHoc';\n\nfunction isMapToPropsFactory<TContextProps, TMappedProps, TOwnProps>(\n    mapToProps:\n        | MapToProps<TContextProps, TMappedProps, TOwnProps>\n        | MapToPropsFactory<TContextProps, TMappedProps, TOwnProps>,\n): mapToProps is MapToPropsFactory<TContextProps, TMappedProps, TOwnProps> {\n    return mapToProps.length === 0;\n}\n\nexport default function createMappableInjectHoc<TContextProps>(\n    ContextComponent: Context<TContextProps>,\n    options?: { displayNamePrefix?: string },\n): MappableInjectHoc<NonNullable<TContextProps>> {\n    return <TMappedProps, TOwnProps>(\n        mapToPropsOrFactory:\n            | MapToProps<NonNullable<TContextProps>, TMappedProps, TOwnProps>\n            | MapToPropsFactory<NonNullable<TContextProps>, TMappedProps, TOwnProps>,\n    ) => {\n        return <TProps extends MatchedProps<TMappedProps, TProps>>(\n            OriginalComponent: ComponentType<TProps>,\n        ) => {\n            const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n                <OriginalComponent {...props} />\n            ));\n\n            const DecoratedComponent: FunctionComponent<Omit<TProps, keyof TMappedProps>> = (\n                props,\n            ) => {\n                const context = useContext(ContextComponent);\n\n                const mapToProps = useMemo(\n                    () =>\n                        isMapToPropsFactory(mapToPropsOrFactory)\n                            ? mapToPropsOrFactory()\n                            : mapToPropsOrFactory,\n                    [],\n                );\n\n                const mappedProps = context\n                    ? mapToProps(context, props as unknown as TOwnProps)\n                    : context;\n\n                if (!mappedProps) {\n                    return null;\n                }\n\n                const mergedProps = { ...mappedProps, ...props } as unknown as TProps;\n\n                return <InnerDecoratedComponent {...mergedProps} />;\n            };\n\n            if (options && options.displayNamePrefix && OriginalComponent) {\n                DecoratedComponent.displayName = `${options.displayNamePrefix}(${\n                    OriginalComponent.displayName || OriginalComponent.name\n                })`;\n            }\n\n            return DecoratedComponent;\n        };\n    };\n}\n","import { createMappableInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\nimport { CheckoutContext, CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nexport type WithCheckoutProps = CheckoutContextProps;\n\nconst withCheckout = createMappableInjectHoc(CheckoutContext, {\n    displayNamePrefix: 'WithCheckout',\n});\n\nexport default withCheckout;\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: string;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n         \n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n\n    // todo: remove these methods when all error types has specific subclasses.\n    // they are only provided for compatibility with errors defined in `app.errors.ts` while we transition\n    // to proper error subclasses.\n    protected setDefaultValues({\n        name,\n        defaultError,\n        defaultTitle,\n    }: {\n        name: string;\n        defaultError: string;\n        defaultTitle: string;\n    }): void {\n        this.name = this.name || name;\n        this.message = this.message || defaultError;\n        this.title = this.title || defaultTitle;\n    }\n}\n","import React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './ErrorCode.scss';\n\nexport interface ErrorCodeProps {\n    code: string;\n    label?: ReactNode;\n}\n\nconst ErrorCode: FunctionComponent<ErrorCodeProps> = ({ code, label }) => {\n    return (\n        <div className=\"errorCode\">\n            <span className=\"errorCode-label\">\n                {label ?? <TranslatedString id=\"common.error_code\" />}\n            </span>{' '}\n            <span className=\"errorCode-value\">{code}</span>\n        </div>\n    );\n};\n\nexport default memo(ErrorCode);\n","import { RequestError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { PureComponent, ReactNode, SyntheticEvent } from 'react';\n\nimport { TranslatedHtml, TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize } from '../../ui/button';\nimport { IconError, IconSize } from '../../ui/icon';\nimport { Modal, ModalHeader } from '../../ui/modal';\n\nimport computeErrorCode from './computeErrorCode';\nimport ErrorCode from './ErrorCode';\nimport isCustomError from './isCustomError';\nimport isRequestError from './isRequestError';\nimport isHtmlError from './isHtmlError';\nimport { CustomError } from './index';\n\nexport interface ErrorModalProps {\n    error?: Error | RequestError | CustomError;\n    message?: ReactNode;\n    title?: ReactNode;\n    shouldShowErrorCode?: boolean;\n    onClose?(event: Event, props: ErrorModalOnCloseProps): void;\n}\n\nexport interface ErrorModalOnCloseProps {\n    error: Error;\n}\n\nexport default class ErrorModal extends PureComponent<ErrorModalProps> {\n    private aria = {\n        labelledby: 'errorModalMessage',\n    };\n\n    render(): ReactNode {\n        const { error } = this.props;\n\n        return (\n            <Modal\n                additionalModalClassName=\"modal--error\"\n                aria={this.aria}\n                footer={this.renderFooter()}\n                header={this.renderHeader()}\n                isOpen={!!error}\n                onRequestClose={this.handleOnRequestClose}\n            >\n                {this.renderBody()}\n            </Modal>\n        );\n    }\n\n    private renderHeader(): ReactNode {\n        const { error, title = error && isCustomError(error) && error.title } = this.props;\n\n        return (\n            <ModalHeader>\n                <IconError\n                    additionalClassName=\"icon--error modal-header-icon\"\n                    size={IconSize.Small}\n                />\n                <span aria-live=\"assertive\" role=\"alert\">\n                    {title || <TranslatedString id=\"common.error_heading\" />}\n                </span>\n            </ModalHeader>\n        );\n    }\n\n    private renderBody(): ReactNode {\n        const { error, message = error && error.message } = this.props;\n\n        return (\n            <>\n                {error && isHtmlError(error) &&\n                    <TranslatedHtml id={error.data.translationKey} />\n                }\n                {message && (\n                    <p aria-live=\"assertive\" id=\"errorModalMessage\" role=\"alert\">\n                        {message}\n                    </p>\n                )}\n\n                <div className=\"optimizedCheckout-contentSecondary\">{this.renderErrorCode()}</div>\n            </>\n        );\n    }\n\n    private renderFooter(): ReactNode {\n        return (\n            <Button onClick={this.handleOnRequestClose} size={ButtonSize.Small}>\n                <TranslatedString id=\"common.ok_action\" />\n            </Button>\n        );\n    }\n\n    private renderErrorCode(): ReactNode {\n        const { error, shouldShowErrorCode = true } = this.props;\n\n        if (!error || !shouldShowErrorCode) {\n            return;\n        }\n\n        if (isRequestError(error) && error.headers?.['x-request-id']) {\n            return (\n                <ErrorCode\n                    code={error.headers['x-request-id']}\n                    label={<TranslatedString id=\"common.request_id\" />}\n                />\n            );\n        }\n\n        const errorCode = computeErrorCode(error);\n\n        if (!errorCode) {\n            return;\n        }\n\n        return <ErrorCode code={errorCode} />;\n    }\n\n    private handleOnRequestClose: (event: SyntheticEvent) => void = (event) => {\n        const { error, onClose = noop } = this.props;\n\n        if (error) {\n            onClose(event.nativeEvent, { error });\n        }\n    };\n}\n","import { CustomError } from \"@bigcommerce/checkout/payment-integration-api\";\n\nexport default function isHtmlError(error: Error): error is CustomError {\n\n    return 'type' in error &&\n        error.type === 'custom' &&\n        'data' in error &&\n        typeof error.data === 'object' &&\n        error.data !== null &&\n        'shouldBeTranslatedAsHtml' in error.data &&\n        typeof error.data.shouldBeTranslatedAsHtml === 'boolean';\n}\n","import HashStatic from 'object-hash';\n\nexport default function computeErrorCode(value: any): string | undefined {\n    try {\n        return HashStatic(value).toUpperCase();\n    } catch (error) {}\n}\n","import CustomError from './CustomError';\n\n// todo: remove this method in favour of creating proper subclasses for each error type.\n// it's only provided for compatibility with errors defined in `app.errors.ts` while we transition\n// to proper error subclasses.\nexport default function createCustomErrorType({\n    name,\n    defaultError = '',\n    defaultTitle = '',\n    shouldReport = false,\n}: {\n    name: string;\n    defaultError?: string;\n    defaultTitle?: string;\n    shouldReport?: boolean;\n}) {\n    class CustomErrorType extends CustomError {\n        constructor(data = {}, errorMessage = '', errorTitle = '') {\n            super({\n                data,\n                message: errorMessage,\n                title: errorTitle,\n            });\n\n            // todo: this should use new.taget.prototype in the parent class once we can make it work\n            setPrototypeOf(this, CustomErrorType.prototype);\n\n            this.setDefaultValues({\n                name,\n                defaultError,\n                defaultTitle,\n            });\n        }\n    }\n\n    CustomErrorType.shouldReport = shouldReport;\n\n    return CustomErrorType;\n}\n\nexport function setPrototypeOf(object: any, prototype: any) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import { BrowserOptions } from '@sentry/browser';\n\nexport default interface ErrorLogger {\n    /**\n     * Logs an error in, tagging it with an error code.\n     *\n     * @param error The error object to be logged\n     * @param tags The tags attached to the log entry\n     * @param level The level of the log\n     * @param meta Any extra meta data\n     */\n    log(error: Error, tags?: ErrorTags, level?: ErrorLevelType, meta?: ErrorMeta): void;\n}\n\nexport interface ErrorLoggerOptions {\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport interface ErrorLoggerServiceConfig {\n    sentry?: BrowserOptions;\n}\n\nexport interface ErrorTags {\n    /**\n     * A code that identifies uniquely each error type\n     */\n    errorCode: string;\n}\n\nexport interface ErrorMeta {\n    [key: string]: unknown;\n}\n\nexport enum ErrorLevelType {\n    Info = 'info',\n    Warning = 'warning',\n    Error = 'error',\n    Debug = 'debug',\n}\n","import {\n  ErrorLevelType,\n  ErrorLogger,\n  ErrorMeta,\n  ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nexport interface ConsoleErrorLoggerOptions {\n    console?: Console;\n    errorTypes?: string[];\n}\n\n// tslint:disable:no-console\nexport default class ConsoleErrorLogger implements ErrorLogger {\n    private console: Console;\n\n    constructor(options?: ConsoleErrorLoggerOptions) {\n        const { console: customConsole = console } = options || {};\n\n        this.console = customConsole;\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        meta?: ErrorMeta,\n    ): void {\n        switch (level) {\n            case ErrorLevelType.Error:\n                return this.console.error(error, tags, meta);\n\n            case ErrorLevelType.Info:\n                return this.console.info(error, tags, meta);\n\n            case ErrorLevelType.Warning:\n                return this.console.warn(error, tags, meta);\n\n            default:\n                return this.console.log(error, tags, meta);\n        }\n    }\n}\n","import { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nexport default class NoopErrorLogger implements ErrorLogger {\n    log() {}\n}\n","import {\n    BrowserOptions,\n    captureException,\n    Event,\n    init,\n    Integrations,\n    SeverityLevel,\n    StackFrame,\n    withScope,\n} from '@sentry/browser';\nimport { RewriteFrames } from '@sentry/integrations';\nimport { EventHint, Exception } from '@sentry/types';\n\nimport {\n    ErrorLevelType,\n    ErrorLogger,\n    ErrorMeta,\n    ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport computeErrorCode from './computeErrorCode';\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\n\nconst FILENAME_PREFIX = 'app://';\n\nexport interface SentryErrorLoggerOptions {\n    consoleLogger?: ConsoleErrorLogger;\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport enum SeverityLevelEnum {\n    DEBUG = 'debug',\n    ERROR = 'error',\n    INFO = 'info',\n    WARNING = 'warning',\n}\n\nexport default class SentryErrorLogger implements ErrorLogger {\n    private consoleLogger: ErrorLogger;\n    private publicPath: string;\n\n    constructor(config: BrowserOptions, options?: SentryErrorLoggerOptions) {\n        const {\n            consoleLogger = new NoopErrorLogger(),\n            publicPath = '',\n            sampleRate = 0.1,\n        } = options || {};\n\n        this.consoleLogger = consoleLogger;\n        this.publicPath = publicPath;\n\n        init({\n            sampleRate,\n            beforeSend: this.handleBeforeSend,\n            denyUrls: [\n                ...(config.denyUrls || []),\n                'polyfill~checkout',\n                'sentry~checkout',\n            ],\n            integrations: [\n                new Integrations.GlobalHandlers({\n                    onerror: false,\n                    onunhandledrejection: true,\n                }),\n                new RewriteFrames({\n                    iteratee: this.handleRewriteFrame,\n                }),\n            ],\n            ...config,\n        });\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        payload?: ErrorMeta,\n    ): void {\n        this.consoleLogger.log(error, tags, level);\n\n        withScope((scope) => {\n            const { errorCode = computeErrorCode(error) } = tags || {};\n\n            if (errorCode) {\n                scope.setTags({ errorCode });\n            }\n\n            scope.setLevel(this.mapToSentryLevel(level));\n\n            if (payload) {\n                scope.setExtras(payload);\n            }\n\n            scope.setFingerprint(['{{ default }}']);\n\n            captureException(error);\n        });\n    }\n\n    private mapToSentryLevel(level: ErrorLevelType): SeverityLevel {\n        switch (level) {\n            case ErrorLevelType.Info:\n                return SeverityLevelEnum.INFO;\n\n            case ErrorLevelType.Warning:\n                return SeverityLevelEnum.WARNING;\n\n            case ErrorLevelType.Debug:\n                return SeverityLevelEnum.DEBUG;\n\n            case ErrorLevelType.Error:\n            default:\n                return SeverityLevelEnum.ERROR;\n        }\n    }\n\n    /**\n     * Ignore exceptions that don't have a stacktrace at all, or have a stacktrace that references files external to\n     * this app. For example, if the exception is caused by a piece of third party code, one of the frames in the\n     * stacktrace will reference a file that is not a part of the app. This behaviour is different to the whitelist\n     * config provided by Sentry, as the latter only examines the topmost frame in the stacktrace. The config is not\n     * sufficient for us because some stores have customisation code built on top of our code, resulting in a stacktrace\n     * whose topmost frame is ours but frames below it are not.\n     */\n    private shouldReportExceptions(exceptions: Exception[], originalException: unknown): boolean {\n        // Ignore exceptions that are not an instance of Error because they are most likely not thrown by our own code,\n        // as we have a lint rule that prevents us from doing so. Although these exceptions don't actually have a\n        // stacktrace, meaning that the condition below should theoretically cover the scenario, but we still need this\n        // condition because Sentry client creates a \"synthentic\" stacktrace for them using the information it has.\n        if (!exceptions.length || !(originalException instanceof Error)) {\n            return false;\n        }\n\n        return exceptions.every((exception) => {\n            if (!exception.stacktrace?.frames?.length) {\n                return false;\n            }\n\n            return exception.stacktrace.frames.every((frame) =>\n                frame.filename?.startsWith(FILENAME_PREFIX),\n            );\n        });\n    }\n\n    private handleBeforeSend: (event: Event, hint?: EventHint) => Event | null = (event, hint) => {\n        if (event.exception) {\n            if (\n                !this.shouldReportExceptions(\n                    event.exception.values ?? [],\n                    hint?.originalException ?? null,\n                )\n            ) {\n                return null;\n            }\n\n            return event;\n        }\n\n        return event;\n    };\n\n    private handleRewriteFrame: (frame: StackFrame) => StackFrame = (frame) => {\n        if (this.publicPath && frame.filename) {\n            // We want to remove the base path of the filename, otherwise we\n            // will need to specify it when we upload the sourcemaps so that the\n            // filenames can match up.\n            const filename = frame.filename.replace(new RegExp(`^${this.publicPath}/?`), '');\n\n            // `frame` needs to be modified in-place (based on the example in\n            // their documentation).\n            if (filename !== frame.filename) {\n                frame.filename = `${FILENAME_PREFIX}/${filename}`;\n            }\n        }\n\n        return frame;\n    };\n}\n","import {\n  ErrorLogger,\n  ErrorLoggerOptions,\n  ErrorLoggerServiceConfig,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\nimport SentryErrorLogger from './SentryErrorLogger';\n\nexport default function createErrorLogger(\n    serviceConfig?: ErrorLoggerServiceConfig,\n    options?: ErrorLoggerOptions,\n): ErrorLogger {\n    if (serviceConfig && serviceConfig.sentry) {\n        return new SentryErrorLogger(serviceConfig.sentry, {\n            ...options,\n            consoleLogger: new ConsoleErrorLogger(options),\n        });\n    }\n\n    if (process.env.NODE_ENV === 'test') {\n        return new NoopErrorLogger();\n    }\n\n    return new ConsoleErrorLogger(options);\n}\n","import CustomError from './CustomError';\n\nexport default function isCustomError(error: Error): error is CustomError {\n    const customError = error as CustomError;\n\n    return (\n        typeof customError.title !== 'undefined' &&\n        typeof customError.data !== 'undefined' &&\n        typeof customError.type !== 'undefined'\n    );\n}\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\ninterface ErrorWithType extends RequestError {\n    type: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction hasOwnProperty<X extends {}, Y extends PropertyKey>(\n    obj: X,\n    key: Y,\n): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport default function isErrorWithType(error: unknown): error is ErrorWithType {\n    return (\n        typeof error === 'object' &&\n        error !== null &&\n        hasOwnProperty(error, 'type') &&\n        typeof error.type === 'string'\n    );\n}\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\nexport default function isRequestError(error: unknown): error is RequestError {\n    const requestError = error as RequestError;\n\n    return requestError.type === 'request';\n}\n","import { ComponentType } from 'react';\n\nimport { ResolvableComponent } from '.';\n\nexport default function isResolvableComponent<TProps, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n): Component is ResolvableComponent<TProps, TIdentifier> {\n    return 'resolveIds' in Component;\n}\n","import { ComponentType } from 'react';\n\nimport { isResolvableComponent } from '@bigcommerce/checkout/payment-integration-api';\n\ninterface ResolveResult<TProps> {\n    component: ComponentType<TProps>;\n    matches: number;\n    default: boolean;\n}\n\nexport default function resolveComponent<TResolveId extends Record<string, unknown>, TProps>(\n    query: TResolveId,\n    components: Record<string, ComponentType<TProps>>,\n): ComponentType<TProps> | undefined {\n    const results: Array<ResolveResult<TProps>> = [];\n\n    for (const [_, Component] of Object.entries(components)) {\n        if (!isResolvableComponent<TProps, TResolveId>(Component)) {\n            continue;\n        }\n\n        for (const resolverId of Component.resolveIds) {\n            const result = { component: Component, matches: 0, default: false };\n\n            for (const [key, value] of Object.entries(resolverId)) {\n                if (key in query && query[key] !== value) {\n                    result.matches = 0;\n                    break;\n                }\n\n                if (query[key] === value) {\n                    result.matches++;\n                }\n\n                if (key === 'default' && value === true) {\n                    result.default = true;\n                }\n            }\n\n            results.push(result);\n        }\n    }\n\n    const matched = results\n        .sort((a, b) => b.matches - a.matches)\n        .filter((result) => result.matches > 0)[0];\n\n    return matched?.component ?? results.find((result) => result.default)?.component;\n}\n","// NOTE: For now, need to coerce the type as mutable array / object. Otherwise,\n// we'll need to change the props of all components as readonly.\nexport const EMPTY_ARRAY = Object.freeze([]) as never[];\nexport const EMPTY_OBJECT = Object.freeze({}) as any;\n","export default function isBuyNowCart(): boolean {\n    const lastPathName = window.location.pathname.split('/').pop();\n\n    return !(lastPathName === 'checkout' || lastPathName === 'embedded-checkout');\n}\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isFloatingLabelEnabled(checkoutSettings: CheckoutSettings): boolean {\n    return Boolean(checkoutSettings.checkoutUserExperienceSettings.floatingLabelEnabled);\n}\n","const DEFAULT_OPTIONS = {\n    count: 5,\n    interval: 1000,\n};\n\nexport interface RetryOptions {\n    count?: number;\n    interval?: number;\n}\n\nexport default async function retry<T>(fn: () => Promise<T>, options?: RetryOptions): Promise<T> {\n    const { count, interval } = { ...DEFAULT_OPTIONS, ...options };\n\n    try {\n        return await fn();\n    } catch (error) {\n        if (count === 1) {\n            throw error;\n        }\n\n        await new Promise((resolve) => setTimeout(resolve, interval));\n\n        return retry(fn, { interval, count: count - 1 });\n    }\n}\n","import { CustomerPasswordRequirements, ShopperConfig } from '@bigcommerce/checkout-sdk';\n\nexport interface PasswordRequirements {\n    minLength: number;\n    alpha: RegExp;\n    numeric: RegExp;\n    description?: string;\n}\n\nexport function getPasswordRequirementsFromConfig(config: ShopperConfig): PasswordRequirements {\n    const {\n        passwordRequirements: { minlength, error: description, alpha, numeric },\n    } = config;\n\n    return getPasswordRequirements({\n        minlength,\n        description,\n        alpha,\n        numeric,\n    });\n}\n\nexport default function getPasswordRequirements({\n    minlength,\n    description,\n    alpha,\n    numeric,\n}: CustomerPasswordRequirements): PasswordRequirements {\n    const allSlashes = new RegExp('/', 'g');\n\n    return {\n        minLength: minlength,\n        description,\n        alpha: new RegExp(alpha.replace(allSlashes, '')),\n        numeric: new RegExp(numeric.replace(allSlashes, '')),\n    };\n}\n","import { assign, kebabCase, map, pickBy } from 'lodash';\n\nexport default function toCSSRule(\n    selector: string,\n    ...styles: Array<{ [key: string]: any } | undefined>\n): string {\n    const mergedStyles = assign({}, ...styles);\n    const props = map(\n        pickBy(mergedStyles, (value) => typeof value === 'string'),\n        (value, key) => `${kebabCase(key)}: ${value};`,\n    ).join(' ');\n\n    return `${selector} {${props}}`;\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { toCSSRule } from '../common/dom';\n\nexport default class EmbeddedCheckoutStyleParser {\n    parse(styles: EmbeddedCheckoutStyles): string[] {\n        const rules: string[] = [];\n\n        if (styles.body) {\n            rules.push(toCSSRule('body', styles.body));\n            rules.push(toCSSRule('.optimizedCheckout-overlay', styles.body));\n        }\n\n        if (styles.text) {\n            rules.push(toCSSRule('.optimizedCheckout-contentPrimary', styles.text));\n        }\n\n        if (styles.secondaryText) {\n            rules.push(toCSSRule('.optimizedCheckout-contentSecondary', styles.secondaryText));\n        }\n\n        if (styles.heading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingPrimary', styles.heading));\n        }\n\n        if (styles.secondaryHeading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingSecondary', styles.secondaryHeading));\n        }\n\n        if (styles.link) {\n            rules.push(toCSSRule('a', styles.link));\n            rules.push(toCSSRule('a:focus', styles.link, styles.link.focus));\n            rules.push(toCSSRule('a:hover', styles.link, styles.link.hover));\n        }\n\n        if (styles.label) {\n            rules.push(toCSSRule('.optimizedCheckout-form-label', styles.label));\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-label',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .form-inlineMessage',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n        }\n\n        if (styles.button) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonPrimary', styles.button));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:active',\n                    styles.button,\n                    styles.button.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:focus',\n                    styles.button,\n                    styles.button.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:hover',\n                    styles.button,\n                    styles.button.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:focus',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:hover',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-loading',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n        }\n\n        if (styles.secondaryButton) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonSecondary', styles.secondaryButton));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-loading',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n        }\n\n        if (styles.input) {\n            rules.push(toCSSRule('.optimizedCheckout-form-input', styles.input));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:focus', styles.input, styles.input.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:hover', styles.input, styles.input.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-input::placeholder',\n                    styles.input,\n                    styles.input.placeholder,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:focus',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:hover',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n        }\n\n        if (styles.select) {\n            rules.push(toCSSRule('.optimizedCheckout-form-select', styles.select));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n        }\n\n        if (styles.checkbox) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checkbox', styles.checkbox));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n        }\n\n        if (styles.radio) {\n            rules.push(toCSSRule('.optimizedCheckout-form-radio', styles.radio));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:focus', styles.radio, styles.radio.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:hover', styles.radio, styles.radio.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:focus',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:hover',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n        }\n\n        if (styles.step) {\n            rules.push(toCSSRule('.optimizedCheckout-checkoutStep', styles.step));\n            rules.push(toCSSRule('.optimizedCheckout-step', styles.step.icon));\n        }\n\n        if (styles.checklist) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist', styles.checklist));\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist-item', styles.checklist));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item:hover',\n                    styles.checklist,\n                    styles.checklist.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item--selected',\n                    styles.checklist,\n                    styles.checklist.checked,\n                ),\n            );\n        }\n\n        if (styles.discountBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-discountBanner', styles.discountBanner));\n        }\n\n        if (styles.loadingBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-loadingToaster', styles.loadingBanner));\n        }\n\n        if (styles.orderSummary) {\n            rules.push(toCSSRule('.optimizedCheckout-orderSummary', styles.orderSummary));\n            rules.push(\n                toCSSRule('.optimizedCheckout-orderSummary-cartSection', styles.orderSummary),\n            );\n        }\n\n        return rules;\n    }\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { appendStylesheet } from '../common/dom';\n\nimport EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\n\nexport default class EmbeddedCheckoutStylesheet {\n    private _parser: EmbeddedCheckoutStyleParser;\n\n    constructor(embeddedCheckoutStyleParser: EmbeddedCheckoutStyleParser) {\n        this._parser = embeddedCheckoutStyleParser;\n    }\n\n    append(styles: EmbeddedCheckoutStyles): HTMLStyleElement {\n        return appendStylesheet(this._parser.parse(styles));\n    }\n}\n","export default function appendStylesheet(rules: string[]): HTMLStyleElement {\n    const style = document.createElement('style');\n\n    document.head.appendChild(style);\n\n    if (style.sheet instanceof CSSStyleSheet) {\n        const { sheet } = style;\n\n        rules.forEach((rule, index) => {\n            sheet.insertRule(rule, index);\n        });\n    }\n\n    return style;\n}\n","import EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\nimport EmbeddedCheckoutStylesheet from './EmbeddedCheckoutStylesheet';\n\nexport default function createEmbeddedCheckoutStylesheet() {\n    const embeddedCheckoutStyleParser = new EmbeddedCheckoutStyleParser();\n\n    return new EmbeddedCheckoutStylesheet(embeddedCheckoutStyleParser);\n}\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import { FormField } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport {\n    array,\n    ArraySchema,\n    date,\n    number,\n    NumberSchema,\n    object,\n    ObjectSchema,\n    Schema,\n    string,\n} from 'yup';\n\nimport { DynamicFormFieldType } from '../ui/form';\n\nexport type TranslateValidationErrorFunction = (\n    validationType: 'max' | 'min' | 'required' | 'invalid',\n    field: {\n        name: string;\n        label: string;\n        min?: number;\n        max?: number;\n    },\n) => string | undefined;\n\nexport interface FormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    translate?: TranslateValidationErrorFunction;\n}\n\nexport interface CustomFormFieldValues {\n    customFields: CustomFormFields;\n}\n\nexport interface CustomFormFields {\n    [id: string]: string | string[] | number;\n}\n\nexport default memoize(function getCustomFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<CustomFormFieldValues> {\n    return object({\n        customFields: object(\n            formFields\n                .filter(({ custom }) => !!custom)\n                .reduce((schema, { name, label, required, fieldType, type, min, max }) => {\n                    let maxValue: number | undefined;\n                    let minValue: number | undefined;\n\n                    if (type === 'date') {\n                        schema[name] = date()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail date\n                            // validation when it's optional\n                            .strict(true)\n                            .nullable(true)\n                            .transform((value, originalValue) =>\n                                originalValue === '' ? null : value,\n                            );\n                    } else if (type === 'integer') {\n                        schema[name] = number()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail number\n                            // validation when it's optional\n                            .strict(true)\n                            .transform((value) => (isNaN(value) ? undefined : value));\n\n                        maxValue = typeof max === 'number' ? max : undefined;\n                        minValue = typeof min === 'number' ? min : undefined;\n                    } else if (fieldType === DynamicFormFieldType.checkbox) {\n                        schema[name] = array();\n                    } else {\n                        schema[name] = string();\n                    }\n\n                    if (maxValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).max(\n                            maxValue,\n                            translate('max', { label, name, max: maxValue + 1 }),\n                        );\n                    }\n\n                    if (minValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).min(\n                            minValue,\n                            translate('min', { label, name, min: minValue - 1 }),\n                        );\n                    }\n\n                    if (required) {\n                        const requiredErrorMessage = translate('required', { name, label });\n\n                        schema[name] =\n                            fieldType === DynamicFormFieldType.checkbox\n                                ? (schema[name] as ArraySchema<string>).min(1, requiredErrorMessage)\n                                : (schema[name] as ArraySchema<string>).required(\n                                      requiredErrorMessage,\n                                  );\n                    }\n\n                    return schema;\n                }, {} as { [key: string]: Schema<any> }),\n        ).nullable(true),\n    }) as ObjectSchema<CustomFormFieldValues>;\n});\n","import { forIn, isDate, padStart } from 'lodash';\n\nexport default function mapCustomFormFieldsFromFormValues(customFieldsObject: {\n    [id: string]: any;\n}): Array<{ fieldId: string; fieldValue: string }> {\n    const customFields: Array<{ fieldId: string; fieldValue: string }> = [];\n\n    forIn(customFieldsObject, (value, key) => {\n        let fieldValue: string;\n\n        if (isDate(value)) {\n            const padMonth = padStart((value.getMonth() + 1).toString(), 2, '0');\n            const padDay = padStart(value.getDate().toString(), 2, '0');\n\n            fieldValue = `${value.getFullYear()}-${padMonth}-${padDay}`;\n        } else {\n            fieldValue = value;\n        }\n\n        customFields.push({\n            fieldId: key,\n            fieldValue,\n        });\n    });\n\n    return customFields;\n}\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst CheckoutButton: FunctionComponent<CheckoutButtonProps> = ({\n    checkoutService: { deinitializeCustomer, initializeCustomer },\n    containerId,\n    methodId,\n    onUnhandledError,\n    onWalletButtonClick,\n}) => {\n    useEffect(() => {\n        initializeCustomer({\n            methodId,\n            [methodId]: {\n                container: containerId,\n                onUnhandledError,\n                onClick: () => onWalletButtonClick(methodId),\n            },\n        }).catch(onUnhandledError);\n\n        return () => {\n            deinitializeCustomer({ methodId }).catch(onUnhandledError);\n        };\n    }, [\n        containerId,\n        deinitializeCustomer,\n        initializeCustomer,\n        methodId,\n        onUnhandledError,\n        onWalletButtonClick,\n    ]);\n\n    return <div id={containerId} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    CheckoutButton,\n    [],\n);\n","import setPrototypeOf from '../setPrototypeOf';\n\nimport CustomError from './CustomError';\n\nexport default class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","export default function setPrototypeOf<T extends object>(object: T, prototype: object): T {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else if (hasProto(object)) {\n        // eslint-disable-next-line no-proto\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction hasProto(object: object): object is object & { __proto__: object } {\n    return '__proto__' in object;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    EmbeddedCheckoutUnsupportedError,\n    isEmbedded,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst GooglePayButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const { language, onUnhandledError } = props;\n\n    if (isEmbedded()) {\n        onUnhandledError(\n            new EmbeddedCheckoutUnsupportedError(\n                language.translate('embedded_checkout.unsupported_error', {\n                    methods: 'googlepay',\n                }),\n            ),\n        );\n\n        return null;\n    }\n\n    return <CheckoutButton {...props} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    GooglePayButton,\n    [\n        { id: 'googlepayadyenv2' },\n        { id: 'googlepayadyenv3' },\n        { id: 'googlepayauthorizenet' },\n        { id: 'googlepaybnz' },\n        { id: 'googlepaybraintree' },\n        { id: 'googlepaypaypalcommerce' },\n        { id: 'googlepaycheckoutcom' },\n        { id: 'googlepaycybersourcev2' },\n        { id: 'googlepayorbital' },\n        { id: 'googlepaystripe' },\n        { id: 'googlepaystripeupe' },\n        { id: 'googlepayworldpayaccess' },\n    ],\n);\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import {\n    CheckoutPayment,\n    GiftCertificateOrderPayment,\n    OrderPayment,\n} from '@bigcommerce/checkout-sdk';\n\nexport default function isGiftCertificatePayment(\n    payment: OrderPayment | CheckoutPayment,\n): payment is GiftCertificateOrderPayment {\n    return payment.providerId === 'giftcertificate';\n}\n","// `document.currentScript` can only be called at the global level as it only\n// holds a reference to the script when it is initially processed.\nconst path = document.currentScript ? (document.currentScript as HTMLScriptElement).src : undefined;\n\nexport default function getCurrentScriptPath(): string | undefined {\n    return path;\n}\n","import getCurrentScriptPath from './getCurrentScriptPath';\n\nexport default function configurePublicPath(publicPath?: string): string {\n    if (!publicPath) {\n        const scriptPath = getCurrentScriptPath();\n\n        if (!scriptPath) {\n            throw new Error(\n                'Unable to configure the public path of the application because it is not specified and it cannot be inferred using the path of the current script.',\n            );\n        }\n\n        __webpack_public_path__ = `${scriptPath.split('/').slice(0, -1).join('/')}/`;\n\n        return __webpack_public_path__;\n    }\n\n    __webpack_public_path__ = publicPath.substr(-1) === '/' ? publicPath : `${publicPath}/`;\n\n    return __webpack_public_path__;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { CheckoutAppProps } from './CheckoutApp';\n\nexport type RenderCheckoutOptions = CheckoutAppProps;\nexport type RenderCheckout = typeof renderCheckout;\n\nexport default function renderCheckout({\n    containerId,\n    publicPath,\n    ...props\n}: RenderCheckoutOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: CheckoutApp } = require('./CheckoutApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <CheckoutApp containerId={containerId} publicPath={configuredPublicPath} {...props} />,\n        document.getElementById(containerId),\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { OrderConfirmationAppProps } from './OrderConfirmationApp';\n\nexport type RenderOrderConfirmationOptions = OrderConfirmationAppProps;\nexport type RenderOrderConfirmation = typeof renderOrderConfirmation;\n\nexport default function renderOrderConfirmation({\n    containerId,\n    publicPath,\n    ...props\n}: RenderOrderConfirmationOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: OrderConfirmationApp } = require('./OrderConfirmationApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <OrderConfirmationApp\n            containerId={containerId}\n            publicPath={configuredPublicPath}\n            {...props}\n        />,\n        document.getElementById(containerId),\n    );\n}\n","import { createRequestSender, RequestSender } from '@bigcommerce/request-sender';\n\nimport { CreatedCustomer, CreatedCustomerResponse } from './CreatedCustomer';\n\nexport interface CustomerCreateRequestBody {\n    confirmPassword: string;\n    newsletter: boolean;\n    orderId: number;\n    password: string;\n}\n\nexport default class AccountService {\n    constructor(private requestSender: RequestSender = createRequestSender()) {}\n\n    create(body: CustomerCreateRequestBody): Promise<CreatedCustomer> {\n        return this.requestSender\n            .put<CreatedCustomerResponse>('/internalapi/v1/checkout/customer', { body })\n            .then((response) => response.body.data.customer);\n    }\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface PasswordField {\n    minLength: number;\n}\n\nconst SignUpPasswordField: FunctionComponent<PasswordField> = ({ minLength }) => {\n    const renderPasswordInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const renderPasswordConfirmationInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const passwordLabelContent = useMemo(\n        () => (\n            <>\n                <TranslatedString id=\"customer.password_label\" />{' '}\n                <small>\n                    {`${minLength}-`}\n                    <TranslatedString id=\"customer.password_minimum_character_label\" />\n                </small>\n            </>\n        ),\n        [minLength],\n    );\n\n    const passwordConfirmationLabelContent = useMemo(\n        () => <TranslatedString id=\"customer.password_confirmation_label\" />,\n        [],\n    );\n\n    return (\n        <>\n            <FormField\n                input={renderPasswordInput}\n                labelContent={passwordLabelContent}\n                name=\"password\"\n            />\n\n            <FormField\n                input={renderPasswordConfirmationInput}\n                labelContent={passwordConfirmationLabelContent}\n                name=\"confirmPassword\"\n            />\n        </>\n    );\n};\n\nexport default memo(SignUpPasswordField);\n","import { FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\nimport { object, ref, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { PasswordRequirements } from '../customer';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport SignUpPasswordField from './SignUpPasswordField';\n\nexport interface SignUpFormProps {\n    isSigningUp?: boolean;\n    customerCanBeCreated: boolean;\n    passwordRequirements: PasswordRequirements;\n    onSignUp(data: SignUpFormValues): void;\n}\n\nexport interface SignUpFormValues {\n    password: string;\n    confirmPassword: string;\n}\n\nconst GuestSignUpForm: FunctionComponent<\n    SignUpFormProps & WithLanguageProps & FormikProps<SignUpFormValues>\n> = ({ isSigningUp, customerCanBeCreated, passwordRequirements: { minLength } }) => (\n    <Fieldset\n        legend={\n            <Legend>\n                <TranslatedString\n                    id={\n                        customerCanBeCreated\n                            ? 'customer.create_account_text'\n                            : 'customer.set_password_text'\n                    }\n                />\n            </Legend>\n        }\n    >\n        {!customerCanBeCreated && (\n            <p>\n                <TranslatedString id=\"customer.account_created_text\" />\n            </p>\n        )}\n\n        <Form className=\"guest-signup form\">\n            <SignUpPasswordField minLength={minLength} />\n\n            <div className=\"form-actions\">\n                <Button\n                    id=\"createAccountButton\"\n                    isLoading={isSigningUp}\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString\n                        id={\n                            customerCanBeCreated\n                                ? 'customer.create_account_action'\n                                : 'customer.set_password_action'\n                        }\n                    />\n                </Button>\n            </div>\n        </Form>\n    </Fieldset>\n);\n\nexport default withLanguage(\n    withFormik<SignUpFormProps & WithLanguageProps, SignUpFormValues>({\n        mapPropsToValues: () => ({\n            password: '',\n            confirmPassword: '',\n        }),\n        handleSubmit: (values, { props: { onSignUp } }) => {\n            onSignUp(values);\n        },\n        validationSchema: ({\n            language,\n            passwordRequirements: { description, numeric, alpha, minLength },\n        }: SignUpFormProps & WithLanguageProps) =>\n            object({\n                password: string()\n                    .required(description || language.translate('customer.password_required_error'))\n                    .matches(\n                        numeric,\n                        description ||\n                            language.translate('customer.password_number_required_error'),\n                    )\n                    .matches(\n                        alpha,\n                        description ||\n                            language.translate('customer.password_letter_required_error'),\n                    )\n                    .min(\n                        minLength,\n                        description ||\n                            language.translate('customer.password_under_minimum_length_error'),\n                    )\n                    .max(100, language.translate('customer.password_over_maximum_length_error')),\n                confirmPassword: string()\n                    .required(language.translate('customer.password_confirmation_required_error'))\n                    .oneOf(\n                        [ref('password')],\n                        language.translate('customer.password_confirmation_error'),\n                    ),\n            }),\n    })(memo(GuestSignUpForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst PasswordSavedSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.set_password_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default PasswordSavedSuccessAlert;\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst SignedUpSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.create_account_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default SignedUpSuccessAlert;\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationRequirementsError extends CustomError {\n    constructor(data: Error, requirements: string) {\n        super({\n            name: 'ACCOUNT_CREATION_REQUIREMENTS_ERROR',\n            message: requirements,\n            title: getLanguageService().translate(\n                'customer.create_account_requirements_error_heading',\n            ),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationRequirementsError.prototype);\n    }\n}\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationFailedError extends CustomError {\n    constructor(data: Error) {\n        super({\n            name: 'ACCOUNT_CREATION_FAILED',\n            message: getLanguageService().translate('customer.create_account_error'),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationFailedError.prototype);\n    }\n}\n","import { GatewayOrderPayment, Order, OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isGiftCertificatePayment } from '../giftCertificate';\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport interface PaymentInstructionsProps {\n    order: Order;\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return !isGiftCertificatePayment(payment) && !isStoreCreditPayment(payment);\n}\n\nfunction getPaymentInstructions(order: Order): string {\n    const gatewayPayment = (order.payments || []).find(isDefaultOrderPayment);\n    const instructions = gatewayPayment && gatewayPayment.detail.instructions;\n\n    return instructions || '';\n}\n\nexport default getPaymentInstructions;\n","import { GiftCertificate, OrderPayments } from '@bigcommerce/checkout-sdk';\n\nimport isGiftCertificatePayment from './isGiftCertificatePayment';\n\nexport default function mapFromPayments(payments: OrderPayments): GiftCertificate[] {\n    return payments.filter(isGiftCertificatePayment).map(({ amount, detail }) => ({\n        code: detail.code,\n        remaining: detail.remaining,\n        used: amount,\n        balance: amount + detail.remaining,\n        purchaseDate: '',\n    }));\n}\n","import { OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport default function getStoreCreditAmount(payments?: OrderPayment[]): number {\n    return (payments || [])\n        .filter(isStoreCreditPayment)\n        .reduce((total, payment) => total + payment.amount, 0);\n}\n","import { Order } from '@bigcommerce/checkout-sdk';\n\nimport { mapFromPayments } from '../giftCertificate';\n\nimport getStoreCreditAmount from './getStoreCreditAmount';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    baseAmount,\n    discountAmount,\n    isTaxIncluded,\n    shippingCostBeforeDiscount,\n    payments,\n    handlingCostTotal,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n    fees,\n}: Order): OrderSummarySubtotalsProps {\n    return {\n        subtotalAmount: baseAmount,\n        shippingAmount: shippingCostBeforeDiscount,\n        giftWrappingAmount: giftWrappingCostTotal,\n        discountAmount,\n        storeCreditAmount: getStoreCreditAmount(payments),\n        handlingAmount: handlingCostTotal,\n        coupons,\n        giftCertificates: payments && mapFromPayments(payments),\n        taxes,\n        isTaxIncluded,\n        fees,\n    };\n}\n","import React, { FunctionComponent } from 'react';\n\nconst OrderConfirmationSection: FunctionComponent = ({ children }) => (\n    <section className=\"orderConfirmation-section\">{children}</section>\n);\n\nexport default OrderConfirmationSection;\n","import React, { FunctionComponent } from 'react';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface MandateTextComponentProps {\n    mandateText: {\n        [key: string]: string;\n    },\n    methodId: string;\n    providerId: string;\n}\n\nexport const MandateTextComponent: FunctionComponent<MandateTextComponentProps> = ({\n    mandateText,\n    providerId,\n    methodId,\n}) => {\n    if (!Object.keys(mandateText).length) {\n        return null;\n    }\n\n    return (\n        <ul data-test='order-confirmation-mandate-text-list'>\n            {Object.entries(mandateText).map((field, index) => {\n                return (\n                    <li key={index} data-test={`order-confirmation-mandate-text-list-item-${index}`}>\n                        <TranslatedString\n                            id={`order_confirmation.mandate.${providerId}.${methodId}.${field[0]}`}\n                        />:\n                        <b>\n                            {` ${field[1]}`}\n                        </b>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n","import React, { FunctionComponent } from 'react';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { MandateTextComponent } from './MandateTextComponent';\nimport { GatewayOrderPayment } from '@bigcommerce/checkout-sdk';\n\nexport interface PaymentsWithMandatesProps {\n    paymentsWithMandates: GatewayOrderPayment[];\n}\n\nexport const PaymentsWithMandates: FunctionComponent<PaymentsWithMandatesProps> = ({\n    paymentsWithMandates,\n}) => <>\n    {paymentsWithMandates.map((payment) => {\n        if (payment?.mandate?.url) {\n            return (\n                <a\n                    data-test=\"order-confirmation-mandate-link-text\"\n                    href={payment.mandate.url}\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    <TranslatedString\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </a>\n            );\n        } else if (payment?.mandate?.id) {\n            return (\n                <p\n                    data-test=\"order-confirmation-mandate-id-text\"\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                >\n                    <TranslatedString\n                        data={{ mandate: payment.mandate.id }}\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </p>\n            );\n        } else if (payment?.mandate?.mandateText && payment.methodId) {\n            return <MandateTextComponent\n                key='mandateTextList'\n                mandateText={payment.mandate.mandateText}\n                methodId={payment.methodId}\n                providerId={payment.providerId}\n            />\n        }\n    })}\n</>\n","import { GatewayOrderPayment, GiftCertificateOrderPayment, Order, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport { PaymentsWithMandates } from './PaymentsWithMandates';\n\nexport interface OrderStatusProps {\n    config: StoreConfig;\n    supportEmail: string;\n    supportPhoneNumber?: string;\n    order: Order;\n}\n\ntype PaymentWithMandate = GatewayOrderPayment &\n    Required<Pick<GatewayOrderPayment, 'mandate' | 'methodId'>>;\n\nconst isPaymentWithMandate = (\n    payment: GatewayOrderPayment | GiftCertificateOrderPayment,\n): payment is PaymentWithMandate => !!payment.methodId && 'mandate' in payment && !!payment.mandate;\n\nconst OrderStatus: FunctionComponent<OrderStatusProps> = ({\n    config,\n    order,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    const paymentsWithMandates = order.payments?.filter(isPaymentWithMandate) || [];\n\n    return (\n        <OrderConfirmationSection>\n            {order.orderId && (\n                <p data-test=\"order-confirmation-order-number-text\">\n                    <TranslatedHtml\n                        data={{ orderNumber: order.orderId }}\n                        id=\"order_confirmation.order_number_text\"\n                    />\n                </p>\n            )}\n\n            <p data-test=\"order-confirmation-order-status-text\">\n                <OrderStatusMessage\n                    config={config}\n                    orderNumber={order.orderId}\n                    orderStatus={order.status}\n                    supportEmail={supportEmail}\n                    supportPhoneNumber={supportPhoneNumber}\n                />\n            </p>\n            <PaymentsWithMandates\n                paymentsWithMandates={paymentsWithMandates}\n            />\n            {order.hasDigitalItems && (\n                <p data-test=\"order-confirmation-digital-items-text\">\n                    <TranslatedHtml\n                        id={\n                            order.isDownloadable\n                                ? 'order_confirmation.order_with_downloadable_digital_items_text'\n                                : 'order_confirmation.order_without_downloadable_digital_items_text'\n                        }\n                    />\n                </p>\n            )}\n        </OrderConfirmationSection>\n    );\n};\n\ninterface OrderStatusMessageProps {\n    config: StoreConfig;\n    orderNumber: number;\n    orderStatus: string;\n    supportEmail?: string;\n    supportPhoneNumber?: string;\n}\n\nconst OrderStatusMessage: FunctionComponent<OrderStatusMessageProps> = ({\n    config,\n    orderNumber,\n    orderStatus,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    switch (orderStatus) {\n        case 'MANUAL_VERIFICATION_REQUIRED':\n        case 'AWAITING_PAYMENT':\n            return <TranslatedHtml id=\"order_confirmation.order_pending_review_text\" />;\n\n        case 'PENDING':\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_pending_status_text\"\n                />\n            );\n\n        case 'INCOMPLETE':\n            if (config.checkoutSettings.features['CHECKOUT-6891.update_incomplete_order_wording_on_order_confirmation_page']) {\n                return (\n                    <TranslatedHtml\n                        data={{ orderNumber, supportEmail }}\n                        id=\"order_confirmation.order_pending_status_text\"\n                    />\n                );\n            }\n\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_incomplete_status_text\"\n                />\n            );\n\n        default:\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail, supportPhoneNumber }}\n                    id={\n                        supportPhoneNumber\n                            ? 'order_confirmation.order_with_support_number_text'\n                            : 'order_confirmation.order_without_support_number_text'\n                    }\n                />\n            );\n    }\n};\n\nexport default memo(OrderStatus);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPrint: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconPrint);\n","import { throttle } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconPrint } from '../ui/icon';\n\nexport interface PrintLinkProps {\n    className?: string;\n}\n\nconst PRINT_MODAL_THROTTLE = 500;\n\nconst PrintLink: FunctionComponent<PrintLinkProps> = ({ className }) => {\n    const handleClick = useCallback(\n        throttle(() => {\n            window.print();\n        }, PRINT_MODAL_THROTTLE),\n        [],\n    );\n\n    if (typeof window.print !== 'function') {\n        return null;\n    }\n\n    return (\n        <a\n            className={className || 'cart-header-link'}\n            href=\"#\"\n            id=\"cart-print-link\"\n            onClick={preventDefault(handleClick)}\n        >\n            <IconPrint /> <TranslatedString id=\"cart.print_action\" />\n        </a>\n    );\n};\n\nexport default memo(PrintLink);\n","import React, { FunctionComponent } from 'react';\n\nexport interface HeaderProps {\n    testId?: string;\n}\n\nconst PrimaryHeader: FunctionComponent<HeaderProps> = ({ children, testId }) => (\n    <h1 className=\"optimizedCheckout-headingPrimary\" data-test={testId}>\n        {children}\n    </h1>\n);\n\nexport default PrimaryHeader;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { PrimaryHeader } from '../ui/header';\n\nexport interface HeaderProps {\n    name?: string;\n}\n\nconst ThankYouHeader: FunctionComponent<HeaderProps> = ({ name }) => (\n    <PrimaryHeader testId=\"order-confirmation-heading\">\n        {name && (\n            <TranslatedString data={{ name }} id=\"order_confirmation.thank_you_customer_heading\" />\n        )}\n\n        {!name && <TranslatedString id=\"order_confirmation.thank_you_heading\" />}\n    </PrimaryHeader>\n);\n\nexport default memo(ThankYouHeader);\n","import {\n    CheckoutSelectors,\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions,\n    Order,\n    ShopperConfig,\n    StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport DOMPurify from 'dompurify';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport { ErrorModal } from '../common/error';\nimport { retry } from '../common/utility';\nimport { getPasswordRequirementsFromConfig } from '../customer';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport {\n    CreatedCustomer,\n    GuestSignUpForm,\n    PasswordSavedSuccessAlert,\n    SignedUpSuccessAlert,\n    SignUpFormValues,\n} from '../guestSignup';\nimport {\n    AccountCreationFailedError,\n    AccountCreationRequirementsError,\n} from '../guestSignup/errors';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { LazyContainer, LoadingSpinner } from '../ui/loading';\nimport { MobileView } from '../ui/responsive';\n\nimport getPaymentInstructions from './getPaymentInstructions';\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport OrderStatus from './OrderStatus';\nimport PrintLink from './PrintLink';\nimport ThankYouHeader from './ThankYouHeader';\n\nconst OrderSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary\" */\n                './OrderSummary'\n            ),\n    ),\n);\n\nconst OrderSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary-drawer\" */\n                './OrderSummaryDrawer'\n            ),\n    ),\n);\n\nexport interface OrderConfirmationState {\n    error?: Error;\n    hasSignedUp?: boolean;\n    isSigningUp?: boolean;\n}\n\nexport interface OrderConfirmationProps {\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    errorLogger: ErrorLogger;\n    orderId: number;\n    createAccount(values: SignUpFormValues): Promise<CreatedCustomer>;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\ninterface WithCheckoutOrderConfirmationProps {\n    order?: Order;\n    config?: StoreConfig;\n    loadOrder(orderId: number): Promise<CheckoutSelectors>;\n    isLoadingOrder(): boolean;\n}\n\nclass OrderConfirmation extends Component<\n    OrderConfirmationProps & WithCheckoutOrderConfirmationProps & AnalyticsContextProps,\n    OrderConfirmationState\n> {\n    state: OrderConfirmationState = {};\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n\n    componentDidMount(): void {\n        const {\n            containerId,\n            createEmbeddedMessenger,\n            embeddedStylesheet,\n            loadOrder,\n            orderId,\n            analyticsTracker\n        } = this.props;\n\n        loadOrder(orderId)\n            .then(({ data }) => {\n                const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n                const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n                this.embeddedMessenger = messenger;\n\n                messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n                messenger.postFrameLoaded({ contentId: containerId });\n\n                analyticsTracker.orderPurchased();\n            })\n            .catch(this.handleUnhandledError);\n    }\n\n    render(): ReactNode {\n        const { order, config, isLoadingOrder } = this.props;\n\n        if (!order || !config || isLoadingOrder()) {\n            return <LoadingSpinner isLoading={true} />;\n        }\n\n        const paymentInstructions = getPaymentInstructions(order);\n        const {\n            storeProfile: { orderEmail, storePhoneNumber },\n            shopperConfig,\n            links: { siteLink },\n        } = config;\n\n        return (\n            <div\n                className={classNames('layout optimizedCheckout-contentPrimary', {\n                    'is-embedded': isEmbedded(),\n                })}\n            >\n                <div className=\"layout-main\">\n                    <div className=\"orderConfirmation\">\n                        <ThankYouHeader name={order.billingAddress.firstName} />\n\n                        <OrderStatus\n                            config={config}\n                            order={order}\n                            supportEmail={orderEmail}\n                            supportPhoneNumber={storePhoneNumber}\n                        />\n\n                        {paymentInstructions && (\n                            <OrderConfirmationSection>\n                                <div\n                                    dangerouslySetInnerHTML={{\n                                        __html: DOMPurify.sanitize(paymentInstructions),\n                                    }}\n                                    data-test=\"payment-instructions\"\n                                />\n                            </OrderConfirmationSection>\n                        )}\n\n                        {this.renderGuestSignUp({\n                            shouldShowPasswordForm: order.customerCanBeCreated,\n                            customerCanBeCreated: !order.customerId,\n                            shopperConfig,\n                        })}\n\n                        <div className=\"continueButtonContainer\">\n                            <form action={siteLink} method=\"get\" target=\"_top\">\n                                <Button type=\"submit\" variant={ButtonVariant.Secondary}>\n                                    <TranslatedString id=\"order_confirmation.continue_shopping\" />\n                                </Button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n\n                {this.renderOrderSummary()}\n                {this.renderErrorModal()}\n            </div>\n        );\n    }\n\n    private renderGuestSignUp({\n        customerCanBeCreated,\n        shouldShowPasswordForm,\n        shopperConfig,\n    }: {\n        customerCanBeCreated: boolean;\n        shouldShowPasswordForm: boolean;\n        shopperConfig: ShopperConfig;\n    }): ReactNode {\n        const { isSigningUp, hasSignedUp } = this.state;\n\n        const { order } = this.props;\n\n        return (\n            <>\n                {shouldShowPasswordForm && !hasSignedUp && (\n                    <GuestSignUpForm\n                        customerCanBeCreated={customerCanBeCreated}\n                        isSigningUp={isSigningUp}\n                        onSignUp={this.handleSignUp}\n                        passwordRequirements={getPasswordRequirementsFromConfig(shopperConfig)}\n                    />\n                )}\n\n                {hasSignedUp &&\n                    (order?.customerId ? <PasswordSavedSuccessAlert /> : <SignedUpSuccessAlert />)}\n            </>\n        );\n    }\n\n    private renderOrderSummary(): ReactNode {\n        const { order, config } = this.props;\n\n        if (!order || !config) {\n            return null;\n        }\n\n        const { currency, shopperCurrency } = config;\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer>\n                                <OrderSummaryDrawer\n                                    {...mapToOrderSummarySubtotalsProps(order)}\n                                    headerLink={\n                                        <PrintLink className=\"modal-header-link cart-modal-link\" />\n                                    }\n                                    isUpdatedCartSummayModal={false}\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <aside className=\"layout-cart\">\n                            <LazyContainer>\n                                <OrderSummary\n                                    headerLink={<PrintLink />}\n                                    {...mapToOrderSummarySubtotalsProps(order)}\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </LazyContainer>\n                        </aside>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private renderErrorModal(): ReactNode {\n        const { error } = this.state;\n\n        return (\n            <ErrorModal\n                error={error}\n                onClose={this.handleErrorModalClose}\n                shouldShowErrorCode={false}\n            />\n        );\n    }\n\n    private handleErrorModalClose: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleSignUp: (values: SignUpFormValues) => void = ({ password, confirmPassword }) => {\n        const { createAccount, config } = this.props;\n\n        const shopperConfig = config && config.shopperConfig;\n        const passwordRequirements =\n            (shopperConfig &&\n                shopperConfig.passwordRequirements &&\n                shopperConfig.passwordRequirements.error) ||\n            '';\n\n        this.setState({\n            isSigningUp: true,\n        });\n\n        createAccount({\n            password,\n            confirmPassword,\n        })\n            .then(() => {\n                this.setState({\n                    hasSignedUp: true,\n                    isSigningUp: false,\n                });\n            })\n            .catch((error) => {\n                this.setState({\n                    error:\n                        error.status < 500\n                            ? new AccountCreationRequirementsError(error, passwordRequirements)\n                            : new AccountCreationFailedError(error),\n                    hasSignedUp: false,\n                    isSigningUp: false,\n                });\n            });\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        this.setState({ error });\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n}\n\nexport function mapToOrderConfirmationProps(\n    context: CheckoutContextProps,\n): WithCheckoutOrderConfirmationProps | null {\n    const {\n        checkoutState: {\n            data: { getOrder, getConfig },\n            statuses: { isLoadingOrder },\n        },\n        checkoutService,\n    } = context;\n\n    const config = getConfig();\n    const order = getOrder();\n\n    return {\n        config,\n        isLoadingOrder,\n        loadOrder: checkoutService.loadOrder,\n        order,\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToOrderConfirmationProps)(OrderConfirmation));\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport { BrowserOptions } from '@sentry/browser';\nimport React, { Component, ReactNode } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport '../../scss/App.scss';\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { createErrorLogger } from '../common/error';\nimport { createEmbeddedCheckoutStylesheet } from '../embeddedCheckout';\nimport { AccountService, CreatedCustomer, SignUpFormValues } from '../guestSignup';\n\nimport OrderConfirmation from './OrderConfirmation';\n\nexport interface OrderConfirmationAppProps {\n    containerId: string;\n    orderId: number;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nclass OrderConfirmationApp extends Component<OrderConfirmationAppProps> {\n    private accountService = new AccountService();\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<OrderConfirmationAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n    }\n\n    render(): ReactNode {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <AnalyticsProvider checkoutService={ this.checkoutService }>\n                            <OrderConfirmation\n                                {...this.props}\n                                createAccount={this.createAccount}\n                                createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                embeddedStylesheet={this.embeddedStylesheet}\n                                errorLogger={this.errorLogger}\n                            />\n                        </AnalyticsProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n\n    private createAccount: (values: SignUpFormValues) => Promise<CreatedCustomer> = ({\n        password,\n        confirmPassword,\n    }) => {\n        const { orderId } = this.props;\n\n        return this.accountService.create({\n            orderId,\n            newsletter: false,\n            password,\n            confirmPassword,\n        });\n    };\n}\n\nexport default OrderConfirmationApp;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nexport default PaymentMethodId;\n","import { CheckoutPayment, OrderPayment } from '@bigcommerce/checkout-sdk';\n\nexport default function isStoreCreditPayment(payment: OrderPayment | CheckoutPayment): boolean {\n    return payment.providerId === 'storecredit';\n}\n","import { Consignment } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nexport default function hasSelectedShippingOptions(consignments: Consignment[]): boolean {\n    if (!consignments.length) {\n        return false;\n    }\n\n    return every(\n        consignments,\n        (consignment) =>\n            consignment.selectedShippingOption &&\n            consignment.selectedShippingOption.id &&\n            // Selected option is available\n            consignment.availableShippingOptions &&\n            consignment.availableShippingOptions.filter(\n                ({ id }) => id === consignment.selectedShippingOption?.id,\n            ).length,\n    );\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconSuccess: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconSuccess);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconInfo: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconInfo);\n","import classNames from 'classnames';\nimport React, { FunctionComponent, ReactNode } from 'react';\n\nimport { IconError, IconInfo, IconSuccess } from '../icon';\n\nexport interface AlertProps {\n    additionalClassName?: string;\n    icon?: ReactNode;\n    testId?: string;\n    type?: AlertType;\n}\n\nexport enum AlertType {\n    Error = 'error',\n    Info = 'info',\n    Success = 'success',\n    Warning = 'warning',\n}\n\nfunction renderDefaultIcon(type?: AlertType): ReactNode {\n    switch (type) {\n        case AlertType.Error:\n        case AlertType.Warning:\n            return <IconError />;\n\n        case AlertType.Success:\n            return <IconSuccess />;\n\n        case AlertType.Info:\n        default:\n            return <IconInfo />;\n    }\n}\n\nconst Alert: FunctionComponent<AlertProps> = ({\n    additionalClassName,\n    children,\n    icon,\n    testId,\n    type,\n}) => (\n    <div\n        className={classNames(\n            'alertBox',\n            additionalClassName,\n            { 'alertBox--info': type === AlertType.Info || !type },\n            { 'alertBox--error': type === AlertType.Error },\n            { 'alertBox--success': type === AlertType.Success },\n            { 'alertBox--warning': type === AlertType.Warning },\n        )}\n        data-test={testId}\n    >\n        <div className=\"alertBox-column alertBox-icon\">{icon || renderDefaultIcon(type)}</div>\n\n        <div aria-live=\"assertive\" className=\"alertBox-column alertBox-message\" role=\"alert\">\n            {children}\n        </div>\n    </div>\n);\n\nexport default Alert;\n","import classNames from 'classnames';\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import { Field, FieldConfig, FieldProps, getIn } from 'formik';\nimport { isDate, noop } from 'lodash';\nimport React, {\n    Component,\n    createElement,\n    FunctionComponent,\n    memo,\n    useCallback,\n    useMemo,\n} from 'react';\nimport shallowEqual from 'shallowequal';\n\nimport FormFieldContainer from './FormFieldContainer';\n\nexport interface BasicFormFieldProps extends FieldConfig {\n    additionalClassName?: string;\n    className?: string;\n    testId?: string;\n    onChange?(value: any): void;\n}\n\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\n    additionalClassName,\n    className,\n    component,\n    render,\n    testId,\n    onChange,\n    ...rest\n}) => {\n    const renderInnerField = useCallback(\n        (props: FieldProps) => (\n            <InnerField\n                {...props}\n                additionalClassName={additionalClassName}\n                className={className}\n                component={component}\n                onChange={onChange}\n                render={render}\n                testId={testId}\n            />\n        ),\n        [additionalClassName, className, component, render, testId, onChange],\n    );\n\n    return <Field {...rest} render={renderInnerField} />;\n};\n\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\n\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\n    ({ additionalClassName, component, field, form, onChange, render, testId }) => {\n        const input = useMemo(\n            () => (\n                <InnerFieldInput\n                    component={component}\n                    field={field}\n                    form={form}\n                    onChange={onChange}\n                    render={render}\n                />\n            ),\n            [field, form, onChange, component, render],\n        );\n\n        return (\n            <FormFieldContainer\n                additionalClassName={additionalClassName}\n                hasError={getIn(form.errors, field.name)}\n                testId={testId}\n            >\n                {input}\n            </FormFieldContainer>\n        );\n    },\n    (\n        { form: prevForm, field: prevField, ...prevProps },\n        { form: nextForm, field: nextField, ...nextProps },\n    ) =>\n        shallowEqual(prevProps, nextProps) &&\n        shallowEqual(prevForm, nextForm) &&\n        shallowEqual(prevField, nextField),\n);\n\ntype InnerFieldInputProps = FieldProps &\n    Pick<FieldConfig, 'component' | 'render'> & {\n        onChange?(value: string): void;\n    };\n\nclass InnerFieldInput extends Component<InnerFieldInputProps> {\n    componentDidUpdate({ field: prevField }: InnerFieldInputProps) {\n        const {\n            field: { value },\n            onChange = noop,\n        } = this.props;\n        const comparableValue = isDate(value) ? value.getTime() : value;\n        const comparablePrevValue = isDate(prevField.value)\n            ? prevField.value.getTime()\n            : prevField.value;\n\n        if (comparableValue !== comparablePrevValue) {\n            onChange(value);\n        }\n    }\n\n    render() {\n        const { component = 'input', field, render } = this.props;\n\n        if (render) {\n            return (render as any)(this.props);\n        }\n\n        if (typeof component === 'string') {\n            return createElement(component as any, field);\n        }\n\n        return createElement(component as any, this.props);\n    }\n}\n\nexport default memo(BasicFormField);\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport CheckboxInput from './CheckboxInput';\nimport FormFieldError from './FormFieldError';\n\nexport interface CheckboxFormFieldProps {\n    additionalClassName?: string;\n    disabled?: boolean;\n    name: string;\n    id?: string;\n    labelContent: ReactNode;\n    onChange?(isChecked: boolean): void;\n    testId?: string;\n}\n\nconst CheckboxFormField: FunctionComponent<CheckboxFormFieldProps> = ({\n    additionalClassName,\n    disabled = false,\n    labelContent,\n    onChange,\n    name,\n    id,\n    testId,\n}) => {\n    const renderField = useCallback(\n        ({ field }: FieldProps) => (\n            <>\n                <CheckboxInput\n                    {...field}\n                    checked={!!field.value}\n                    disabled={disabled}\n                    id={id || field.name}\n                    label={labelContent}\n                    testId={testId}\n                />\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n            </>\n        ),\n        [disabled, id, labelContent, name],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(CheckboxFormField);\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface CheckboxInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n}\n\nconst CheckboxInput = forwardRef(\n    (\n        { additionalClassName, label, id, testId, ...rest }: CheckboxInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                className={classNames(\n                    'form-checkbox',\n                    'optimizedCheckout-form-checkbox',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"checkbox\"\n                testId={testId}\n            />\n            <Label htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default CheckboxInput;\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface RadioInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n}\n\nconst RadioInput = forwardRef(\n    (\n        { additionalClassName, label, value, checked, id, ...rest }: RadioInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                checked={checked}\n                className={classNames(\n                    'form-radio',\n                    'optimizedCheckout-form-radio',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"radio\"\n                value={value}\n            />\n            <Label htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default RadioInput;\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isDate, noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport ReactDatePicker from 'react-datepicker';\n\nimport { withDate, WithDateProps } from '@bigcommerce/checkout/locale';\n\nimport { IconChevronDown } from '../icon';\n\nimport CheckboxInput from './CheckboxInput';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport { InputProps } from './Input';\nimport RadioInput from './RadioInput';\nimport TextArea from './TextArea';\nimport TextInput from './TextInput';\n\nexport interface DynamicInputProps extends InputProps {\n    id: string;\n    additionalClassName?: string;\n    value?: string | string[];\n    rows?: number;\n    fieldType?: DynamicFormFieldType;\n    options?: FormFieldItem[];\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst DynamicInput: FunctionComponent<DynamicInputProps & WithDateProps> = ({\n    additionalClassName,\n    date,\n    fieldType,\n    id,\n    name,\n    onChange = noop,\n    options,\n    placeholder,\n    isFloatingLabelEnabled,\n    value,\n    ...rest\n}) => {\n    const { inputFormat } = date;\n    const handleDateChange = useCallback(\n        (dateValue, event) =>\n            onChange({\n                ...event,\n                target: {\n                    name,\n                    value: dateValue,\n                },\n            }),\n        [onChange, name],\n    );\n\n    switch (fieldType) {\n        case DynamicFormFieldType.dropdown:\n            return (\n                <>\n                    <div\n                        className={classNames(\n                            { 'dropdown-chevron': !isFloatingLabelEnabled },\n                            { 'floating-select-chevron': isFloatingLabelEnabled },\n                        )}>\n                        <IconChevronDown />\n                    </div>\n                    <select\n                        {...(rest as any)}\n                        className={classNames(\n                            { 'floating-select': isFloatingLabelEnabled },\n                            'form-select optimizedCheckout-form-select',\n                        )}\n                        data-test={`${id}-select`}\n                        id={id}\n                        name={name}\n                        onChange={onChange}\n                        value={value === null ? '' : value}\n                    >\n                        {placeholder && <option value=\"\">{placeholder}</option>}\n                        {options &&\n                            options.map(({ label, value: optionValue }) => (\n                                <option key={optionValue} value={optionValue}>\n                                    {label}\n                                </option>\n                            ))}\n                    </select>\n                </>\n            );\n\n        case DynamicFormFieldType.radio:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <RadioInput\n                            {...rest}\n                            checked={optionValue === value}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-radio`}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.checkbox:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <CheckboxInput\n                            {...rest}\n                            checked={Array.isArray(value) ? value.includes(optionValue) : false}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-checkbox`}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.date:\n            return (\n                <ReactDatePicker\n                    {...(rest as any)}\n                    autoComplete=\"off\"\n                    // FIXME: we can avoid this by simply using onChangeRaw, but it's not being triggered properly\n                    // https://github.com/Hacker0x01/react-datepicker/issues/1357\n                    // onChangeRaw={ rest.onChange }\n                    calendarClassName=\"optimizedCheckout-contentPrimary\"\n                    className={classNames('form-input optimizedCheckout-form-input', {\n                        'floating-input': isFloatingLabelEnabled,\n                    })}\n                    dateFormat={inputFormat}\n                    maxDate={rest.max ? new Date(`${rest.max}T00:00:00Z`) : undefined}\n                    minDate={rest.min ? new Date(`${rest.min}T00:00:00Z`) : undefined}\n                    name={name}\n                    onChange={handleDateChange}\n                    placeholderText={inputFormat.toUpperCase()}\n                    popperClassName=\"optimizedCheckout-contentPrimary\"\n                    selected={isDate(value) ? value : undefined}\n                />\n            );\n\n        case DynamicFormFieldType.multiline:\n            return (\n                <TextArea\n                    {...(rest as any)}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    testId={`${id}-text`}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n\n        default:\n            return (\n                <TextInput\n                    {...rest}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    placeholder={placeholder}\n                    testId={`${id}-${\n                        fieldType === DynamicFormFieldType.password ? 'password' : 'text'\n                    }`}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n    }\n};\n\nexport default memo(withDate(DynamicInput));\n","import React, { FunctionComponent, memo, MouseEvent, useCallback } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './MultiCheckboxControl.scss';\n\nexport interface MultiCheckboxControlProps {\n    testId?: string;\n    onSelectedAll(): void;\n    onSelectedNone(): void;\n}\n\nconst MultiCheckboxControl: FunctionComponent<MultiCheckboxControlProps> = ({\n    testId,\n    onSelectedAll,\n    onSelectedNone,\n}) => {\n    const handleSelectAllClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedAll();\n        },\n        [onSelectedAll],\n    );\n\n    const handleSelectNoneClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedNone();\n        },\n        [onSelectedNone],\n    );\n\n    return (\n        <ul className=\"multiCheckbox--controls\">\n            <li className=\"multiCheckbox--control\">\n                <TranslatedString id=\"address.select\" />\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-all-button`}\n                    href=\"#\"\n                    onClick={handleSelectAllClick}\n                >\n                    <TranslatedString id=\"address.select_all\" />\n                </a>\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-none-button`}\n                    href=\"#\"\n                    onClick={handleSelectNoneClick}\n                >\n                    <TranslatedString id=\"address.select_none\" />\n                </a>\n            </li>\n        </ul>\n    );\n};\n\nexport default memo(MultiCheckboxControl);\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport { FieldArray, FieldArrayRenderProps, getIn } from 'formik';\nimport { difference, kebabCase, noop, pick } from 'lodash';\nimport React, { ChangeEvent, FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport FormFieldContainer from './FormFieldContainer';\nimport FormFieldError from './FormFieldError';\nimport MultiCheckboxControl from './MultiCheckboxControl';\n\nexport interface CheckboxGroupFormFieldProps {\n    id: string;\n    label: ReactNode;\n    name: string;\n    options: FormFieldItem[];\n    onChange?(values: string[]): void;\n}\n\ntype MultiCheckboxFormFieldProps = CheckboxGroupFormFieldProps &\n    Pick<FieldArrayRenderProps, 'push' | 'remove' | 'pop' | 'form'>;\n\nconst MultiCheckboxFormField: FunctionComponent<MultiCheckboxFormFieldProps> = ({\n    form: { values, errors },\n    id,\n    label,\n    name,\n    onChange = noop,\n    options,\n    push,\n    remove,\n}) => {\n    const handleSelectAll = useCallback(() => {\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        difference(\n            options.map(({ value }) => value),\n            checkedValues,\n        ).forEach((val) => push(val));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, options, push, values]);\n\n    const handleSelectNone = useCallback(() => {\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        checkedValues.forEach(() => remove(0));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, remove, values]);\n\n    const handleInputChange = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            const checkedValues: string[] = getIn(values, name) || [];\n            const { value, checked } = event.target;\n\n            if (checked) {\n                push(value);\n            } else {\n                remove(checkedValues.indexOf(value));\n            }\n\n            onChange(getIn(values, name));\n        },\n        [name, onChange, push, remove, values],\n    );\n\n    return (\n        <FormFieldContainer hasError={getIn(errors, name) && getIn(errors, name).length}>\n            {label}\n\n            {options.length > 1 && (\n                <MultiCheckboxControl\n                    onSelectedAll={handleSelectAll}\n                    onSelectedNone={handleSelectNone}\n                    testId={id}\n                />\n            )}\n\n            <DynamicInput\n                fieldType={DynamicFormFieldType.checkbox}\n                id={id}\n                name={name}\n                onChange={handleInputChange}\n                options={options}\n                value={getIn(values, name) || []}\n            />\n\n            <FormFieldError\n                errorId={`${id ?? name}-field-error-message`}\n                name={name}\n                testId={`${kebabCase(name)}-field-error-message`}\n            />\n        </FormFieldContainer>\n    );\n};\n\nconst CheckboxGroupFormField: FunctionComponent<CheckboxGroupFormFieldProps> = ({\n    id,\n    label,\n    name,\n    onChange,\n    options,\n}) => {\n    const renderField = useCallback(\n        (renderProps: FieldArrayRenderProps) => (\n            <MultiCheckboxFormField\n                id={id}\n                label={label}\n                name={name}\n                onChange={onChange}\n                options={options}\n                {...pick(renderProps, ['form', 'pop', 'push', 'remove'])}\n            />\n        ),\n        [id, label, name, onChange, options],\n    );\n\n    return <FieldArray name={name} render={renderField} />;\n};\n\nexport default memo(CheckboxGroupFormField);\n","import { FormField as FormFieldType } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { FieldProps } from 'formik';\nimport { includes } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport CheckboxGroupFormField from './CheckboxGroupFormField';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport FormField from './FormField';\nimport Label from './Label';\n\nexport interface DynamicFormFieldOption {\n    code: string;\n    name: string;\n}\n\nexport interface DynamicFormFieldProps {\n    field: FormFieldType;\n    inputId?: string;\n    extraClass?: string;\n    autocomplete?: string;\n    parentFieldName?: string;\n    placeholder?: string;\n    label?: ReactNode;\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string | string[]): void;\n}\n\nconst DynamicFormField: FunctionComponent<DynamicFormFieldProps> = ({\n    field: {\n        fieldType,\n        type,\n        secret,\n        name,\n        label: fieldLabel,\n        required,\n        options,\n        max,\n        min,\n        maxLength,\n    },\n    parentFieldName,\n    onChange,\n    placeholder,\n    inputId,\n    autocomplete,\n    label,\n    extraClass,\n    isFloatingLabelEnabled,\n}) => {\n    const fieldInputId = inputId || name;\n    const fieldName = parentFieldName ? `${parentFieldName}.${name}` : name;\n    const isFloatingLabelSupportedFieldType = Boolean(\n        isFloatingLabelEnabled &&\n            (includes(['text', 'password', 'dropdown', 'date', 'multiline'], fieldType) ||\n                !fieldType),\n    );\n    const labelComponent = useMemo(\n        () => (\n            <Label\n                htmlFor={fieldInputId}\n                id={`${fieldInputId}-label`}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n            >\n                {label || fieldLabel}\n                {!required && (\n                    <>\n                        {' '}\n                        <small className=\"optimizedCheckout-contentSecondary\">\n                            <TranslatedString id=\"common.optional_text\" />\n                        </small>\n                    </>\n                )}\n            </Label>\n        ),\n        [fieldInputId, fieldLabel, required, isFloatingLabelSupportedFieldType, label],\n    );\n\n    const dynamicFormFieldType = useMemo((): DynamicFormFieldType => {\n        if (fieldType === 'text') {\n            if (type === 'integer') {\n                return DynamicFormFieldType.number;\n            }\n\n            if (includes(name, 'phone') || includes(name, 'tel')) {\n                return DynamicFormFieldType.telephone;\n            }\n\n            return secret ? DynamicFormFieldType.password : DynamicFormFieldType.text;\n        }\n\n        return fieldType as DynamicFormFieldType;\n    }, [fieldType, type, secret, name]);\n\n    const renderInput = useCallback(\n        ({ field }: FieldProps<string>) => (\n            <DynamicInput\n                {...field}\n                aria-labelledby={`${fieldInputId}-label ${fieldInputId}-field-error-message`}\n                autoComplete={autocomplete}\n                fieldType={dynamicFormFieldType}\n                id={fieldInputId}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                max={max}\n                maxLength={maxLength || undefined}\n                min={min}\n                options={options && options.items}\n                placeholder={placeholder || (options && options.helperLabel)}\n                rows={options && (options as any).rows}\n            />\n        ),\n        [\n            fieldInputId,\n            max,\n            maxLength,\n            min,\n            options,\n            placeholder,\n            dynamicFormFieldType,\n            autocomplete,\n        ],\n    );\n\n    return (\n        <div\n            className={classNames(\n                'dynamic-form-field',\n                { 'floating-form-field': isFloatingLabelSupportedFieldType },\n                extraClass,\n            )}\n        >\n            {fieldType === DynamicFormFieldType.checkbox ? (\n                <CheckboxGroupFormField\n                    id={fieldInputId}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                    options={(options && options.items) || []}\n                />\n            ) : (\n                <FormField\n                    id={fieldInputId}\n                    input={renderInput}\n                    isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default memo(DynamicFormField);\n","enum DynamicFormFieldType {\n    telephone = 'tel',\n    dropdown = 'dropdown',\n    number = 'number',\n    password = 'password',\n    checkbox = 'checkbox',\n    multiline = 'multiline',\n    date = 'date',\n    radio = 'radio',\n    text = 'text',\n}\n\nexport default DynamicFormFieldType;\n","import classNames from 'classnames';\nimport React, { FieldsetHTMLAttributes, forwardRef, ReactNode, Ref } from 'react';\n\nexport interface FieldsetProps extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\n    additionalClassName?: string;\n    testId?: string;\n    legend?: ReactNode;\n}\n\nconst Fieldset = forwardRef(\n    (\n        { additionalClassName, children, className, legend, testId, ...rest }: FieldsetProps,\n        ref: Ref<HTMLFieldSetElement>,\n    ) => (\n        <fieldset\n            {...rest}\n            className={className || classNames('form-fieldset', additionalClassName)}\n            data-test={testId}\n            ref={ref}\n        >\n            {legend}\n\n            <div className=\"form-body\">{children}</div>\n        </fieldset>\n    ),\n);\n\nexport default Fieldset;\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { Form as FormikForm, FormikFormProps } from 'formik';\nimport { values } from 'lodash';\nimport React, { createRef, FunctionComponent, memo, useCallback, useRef } from 'react';\n\nimport { FormContextType, FormProvider } from '@bigcommerce/checkout/ui';\n\nexport interface FormProps extends FormikFormProps {\n    testId?: string;\n}\n\nconst Form: FunctionComponent<FormProps> = ({ className, testId, ...rest }) => {\n    const ref = useRef({ containerRef: createRef<HTMLDivElement>() });\n\n    const focusOnError = () => {\n        const { current } = ref.current.containerRef;\n\n        if (!current) {\n            return;\n        }\n\n        const errorInputSelectors = [\n            '.form-field--error input',\n            '.form-field--error textarea',\n            '.form-field--error select',\n        ];\n\n        const erroredFormField = current.querySelector<HTMLElement>(errorInputSelectors.join(', '));\n\n        if (erroredFormField) {\n            erroredFormField.focus({ preventScroll: true });\n\n            try {\n                erroredFormField.offsetParent?.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'center',\n                    inline: 'center',\n                });\n            } catch {\n                erroredFormField.offsetParent?.scrollIntoView();\n            }\n        }\n    };\n\n    const handleSubmitCapture = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => {\n            return () => {\n                setSubmitted(true);\n\n                // use timeout to allow Formik validation to happen\n                setTimeout(() => focusOnError());\n            };\n        }),\n        [focusOnError],\n    );\n\n    const renderContent = useCallback(\n        memoizeOne(({ setSubmitted }: FormContextType) => {\n            return (\n                <div ref={ref.current.containerRef}>\n                    <FormikForm\n                        {...rest}\n                        className={className}\n                        data-test={testId}\n                        noValidate\n                        onSubmitCapture={handleSubmitCapture(setSubmitted)}\n                    />\n                </div>\n            );\n        }),\n        [className, handleSubmitCapture, testId, ...values(rest)],\n    );\n\n    return <FormProvider>{renderContent}</FormProvider>;\n};\n\nexport default memo(Form);\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport FormFieldError from './FormFieldError';\nimport Label from './Label';\n\nexport interface FormFieldProps {\n    additionalClassName?: string;\n    name: string;\n    label?: ReactNode | ((fieldName: string) => ReactNode);\n    labelContent?: ReactNode;\n    footer?: ReactNode;\n    id?: string;\n    isFloatingLabelEnabled?: boolean;\n    input(field: FieldProps<string>): ReactNode;\n    onChange?(value: string): void;\n}\n\nconst FormField: FunctionComponent<FormFieldProps> = ({\n    additionalClassName,\n    labelContent,\n    label,\n    onChange,\n    footer,\n    input,\n    name,\n    id,\n    isFloatingLabelEnabled,\n}) => {\n    const renderField = useCallback(\n        (props) => (\n            <>\n                {isFloatingLabelEnabled && input(props)}\n\n                {label && (typeof label === 'function' ? label(name) : label)}\n                {labelContent && !label && (\n                    <Label\n                        htmlFor={name}\n                        id={`${id ?? name}-label`}\n                        isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    >\n                        {labelContent}\n                    </Label>\n                )}\n\n                {!isFloatingLabelEnabled && input(props)}\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n\n                {footer}\n            </>\n        ),\n        [label, labelContent, id, input, name, footer, isFloatingLabelEnabled],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(FormField);\n","import classNames from 'classnames';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldContainerProps {\n    additionalClassName?: string;\n    children: ReactNode;\n    className?: string;\n    hasError?: boolean;\n    testId?: string;\n}\n\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\n    additionalClassName,\n    children,\n    className,\n    hasError,\n    testId,\n}) => (\n    <FormContext.Consumer>\n        {({ isSubmitted }) => (\n            <div\n                className={\n                    className ||\n                    classNames('form-field', additionalClassName, {\n                        'form-field--error': hasError && isSubmitted,\n                    })\n                }\n                data-test={testId}\n            >\n                {children}\n            </div>\n        )}\n    </FormContext.Consumer>\n);\n\nexport default memo(FormFieldContainer);\n","import { ErrorMessage } from 'formik';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldErrorProps {\n    name: string;\n    testId?: string;\n    errorId: string;\n}\n\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\n    const renderMessage = useCallback(\n        (message: string) => (\n            <ul className=\"form-field-errors\" data-test={testId}>\n                <li className=\"form-field-error\">\n                    <label\n                        aria-live=\"polite\"\n                        className=\"form-inlineMessage\"\n                        htmlFor={name}\n                        id={errorId}\n                        role=\"alert\"\n                    >\n                        {message}\n                    </label>\n                </li>\n            </ul>\n        ),\n        [errorId, name, testId],\n    );\n\n    return (\n        <FormContext.Consumer>\n            {({ isSubmitted }) =>\n                isSubmitted && <ErrorMessage name={name} render={renderMessage} />\n            }\n        </FormContext.Consumer>\n    );\n};\n\nexport default memo(FormFieldError);\n","import classNames from 'classnames';\nimport { includes } from 'lodash';\nimport React, { forwardRef, InputHTMLAttributes, Ref } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Input = forwardRef(\n    (\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => {\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\n\n        return (\n            <input\n                {...{\n                    ...rest,\n                    className: classNames(className, {\n                        'floating-input':\n                            isFloatingLabelEnabled && !includes(floatingLabelDisabledFieldNames, name),\n                    }),\n                    name,\n                }}\n                data-test={testId}\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default Input;\n","import classNames from 'classnames';\nimport React, { FunctionComponent, LabelHTMLAttributes } from 'react';\n\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n    testId?: string;\n    hidden?: boolean;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Label: FunctionComponent<LabelProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    isFloatingLabelEnabled,\n    ...rest\n}) => (\n    <label\n        { ...rest }\n        className={ classNames(\n            { 'floating-label': isFloatingLabelEnabled },\n            className || 'form-label',\n            { 'is-srOnly': hidden },\n            'optimizedCheckout-form-label'\n        ) }\n        data-test={ testId }\n    >\n        { children }\n    </label>\n);\n\nexport default Label;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nexport interface LegendProps extends React.HTMLAttributes<HTMLLegendElement> {\n    hidden?: boolean;\n    testId?: string;\n}\n\nconst Legend: FunctionComponent<LegendProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    ...rest\n}) => (\n    <legend\n        {...rest}\n        className={classNames(\n            className || 'form-legend',\n            { 'is-srOnly': hidden },\n            { 'optimizedCheckout-headingSecondary': !hidden },\n        )}\n        data-test={testId}\n    >\n        {children}\n    </legend>\n);\n\nexport default Legend;\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref, TextareaHTMLAttributes } from 'react';\n\nexport interface TextAreaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n    additionalClassName?: string;\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst TextArea = forwardRef(\n    (\n        { additionalClassName, testId, className, isFloatingLabelEnabled, ...rest }: TextAreaProps,\n        ref: Ref<HTMLTextAreaElement>,\n    ) => {\n        return (\n            <textarea\n                {...rest}\n                className={\n                    className ||\n                    classNames(\n                        { 'floating-textarea': isFloatingLabelEnabled },\n                        'form-input',\n                        'optimizedCheckout-form-input',\n                        additionalClassName,\n                    )\n                }\n                data-test={testId}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default TextArea;\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\n\nexport interface TextInputProps extends InputProps {\n    additionalClassName?: string;\n    appearFocused?: boolean;\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst TextInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            isFloatingLabelEnabled,\n            appearFocused,\n            type = 'text',\n            ...rest\n        }: TextInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <Input\n            {...rest}\n            className={classNames(\n                'form-input',\n                'optimizedCheckout-form-input',\n                { 'form-input--focus': appearFocused },\n                { 'optimizedCheckout-form-input--focus': appearFocused },\n                additionalClassName,\n            )}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            ref={ref}\n            type={type}\n        />\n    ),\n);\n\nexport default TextInput;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconBolt: FunctionComponent = () => (\n    <svg\n        aria-labelledby=\"iconCardBoltTitle\"\n        data-test=\"bolt-icon\"\n        height=\"12\"\n        role=\"img\"\n        viewBox=\"0 0 12 12\"\n        width=\"12\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <title id=\"iconCardBoltTitle\">Bolt</title>\n        <path d=\"M0 7.502h7.5v4.5L12 4.502H4.5V0z\" fill=\"#FFFFFF\" id=\"mark\" />\n    </svg>\n);\n\nexport default withIconContainer(IconBolt);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronDown: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronDown);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconClose: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconClose);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconError: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconError);\n","import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import React, { FunctionComponent, ReactNode, Suspense } from 'react';\n\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './LazyContainer.scss';\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LazyContainerProps {\n    children: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst filterError = (error: Error) => error.name === 'ChunkLoadError';\n\nconst LazyContainer: FunctionComponent<LazyContainerProps> = ({ loadingSkeleton, children }) => (\n    <ErrorBoundary\n        fallback={\n            <div className=\"lazyContainer-error\">\n                <TranslatedString id=\"common.unstable_network_error\" />\n            </div>\n        }\n        filter={filterError}\n    >\n        <Suspense fallback={loadingSkeleton || <LoadingSpinner isLoading />}>{children}</Suspense>\n    </ErrorBoundary>\n);\n\nexport default LazyContainer;\n","import React, { FunctionComponent } from 'react';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LoadingOverlayProps {\n    isLoading: boolean;\n    hideContentWhenLoading?: boolean;\n    unmountContentWhenLoading?: boolean;\n}\n\nconst LoadingOverlay: FunctionComponent<LoadingOverlayProps> = ({\n    children,\n    hideContentWhenLoading,\n    unmountContentWhenLoading,\n    isLoading,\n}) => {\n    if (hideContentWhenLoading || unmountContentWhenLoading) {\n        return (\n            <>\n                <LoadingSpinner isLoading={isLoading} />\n                {unmountContentWhenLoading && isLoading ? null : (\n                    <div\n                        style={{\n                            display: hideContentWhenLoading && isLoading ? 'none' : undefined,\n                        }}\n                    >\n                        {children}\n                    </div>\n                )}\n            </>\n        );\n    }\n\n    return (\n        <div className=\"loadingOverlay-container\">\n            {children}\n            {isLoading && <div className=\"loadingOverlay optimizedCheckout-overlay\" />}\n        </div>\n    );\n};\n\nexport default LoadingOverlay;\n","import React, { FunctionComponent, memo } from 'react';\n\nexport interface LoadingSpinnerProps {\n    isLoading: boolean;\n}\n\nconst LoadingSpinner: FunctionComponent<LoadingSpinnerProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loadingSpinner loadingOverlay-container\" style={{ height: 100 }}>\n            <div className=\"loadingOverlay optimizedCheckout-overlay\" />\n        </div>\n    );\n};\n\nexport default memo(LoadingSpinner);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, KeyboardEvent, MouseEvent, ReactNode, useCallback } from 'react';\nimport ReactModal from 'react-modal';\nimport { Omit } from 'utility-types';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { IconClose } from '../icon';\n\nexport type ModalProps = Omit<\n    ReactModal.Props,\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\n> & {\n    children: ReactNode;\n    closeButtonLabel?: string | ReactNode;\n    footer?: ReactNode;\n    header?: ReactNode;\n    additionalHeaderClassName?: string;\n    additionalBodyClassName?: string;\n    additionalModalClassName?: string;\n    shouldShowCloseButton?: boolean;\n};\n\nconst Modal: FunctionComponent<ModalProps> = ({\n    children,\n    closeButtonLabel = 'Close',\n    footer,\n    header,\n    additionalHeaderClassName,\n    additionalBodyClassName,\n    additionalModalClassName,\n    onRequestClose = noop,\n    shouldShowCloseButton = false,\n    ...rest\n}) => {\n    const handleClose = useCallback(\n        (event: MouseEvent | KeyboardEvent) => {\n            onRequestClose(event);\n        },\n        [onRequestClose],\n    );\n\n    return (\n        <ReactModal\n            {...rest}\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\n            bodyOpenClassName=\"has-activeModal\"\n            className={{\n                base: classNames(\n                    'modal optimizedCheckout-contentPrimary',\n                    additionalModalClassName,\n                ),\n                afterOpen: 'modal--afterOpen',\n                beforeClose: 'modal--beforeClose',\n            }}\n            closeTimeoutMS={200}\n            onRequestClose={onRequestClose}\n            overlayClassName={{\n                base: 'modalOverlay',\n                afterOpen: 'modalOverlay--afterOpen',\n                beforeClose: 'modalOverlay--beforeClose',\n            }}\n            shouldCloseOnEsc={true}\n            shouldCloseOnOverlayClick={false}\n        >\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\n                {header}\n\n                {shouldShowCloseButton && (\n                     \n                    <a\n                        className=\"modal-close\"\n                        data-test=\"modal-close-button\"\n                        href=\"#\"\n                        onClick={preventDefault(handleClose)}\n                    >\n                        {closeButtonLabel && <span className=\"is-srOnly\">{closeButtonLabel}</span>}\n\n                        <IconClose />\n                    </a>\n                )}\n            </div>\n\n            <div\n                className={classNames('modal-body', additionalBodyClassName)}\n                data-test=\"modal-body\"\n            >\n                {children}\n            </div>\n\n            {Boolean(footer) && (\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\n                    {footer}\n                </div>\n            )}\n        </ReactModal>\n    );\n};\n\nexport default Modal;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\ninterface ModalHeaderProps {\n    children: React.ReactNode;\n    additionalClassName?: string;\n}\n\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\n    <h2\n        className={classNames(\n            'modal-header-title optimizedCheckout-headingSecondary',\n            additionalClassName,\n        )}\n        data-test=\"modal-heading\"\n    >\n        {children}\n    </h2>\n);\n\nexport default ModalHeader;\n","import React, { FunctionComponent, memo } from 'react';\nimport Media, { MediaQueryObject, MultiQueryProps } from 'react-media';\n\nimport { MOBILE_MAX_WIDTH } from './breakpoints';\n\nconst queries = {\n    print: 'print',\n    mobile: `screen and (max-width: ${MOBILE_MAX_WIDTH}px)`,\n};\n\nconst ViewPicker: FunctionComponent<Pick<MultiQueryProps<MediaQueryObject>, 'children'>> = ({\n    children,\n}) => {\n    return <Media queries={queries}>{children}</Media>;\n};\n\nexport default memo(ViewPicker);\n","import React, { FunctionComponent, memo } from 'react';\n\nimport ViewPicker from './ViewPicker';\n\nconst MobileView: FunctionComponent<{ children(matched: boolean): React.ReactNode }> = ({\n    children,\n}) => {\n    return (\n        <ViewPicker>\n            {(matches: { mobile: boolean }) => {\n                return children(matches.mobile);\n            }}\n        </ViewPicker>\n    );\n};\n\nexport default memo(MobileView);\n","// These values have to match with screensizes.scss\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n","import { Component, ReactNode } from 'react';\n\nexport interface ToggleProps {\n    openByDefault?: boolean;\n    children(props: any): ReactNode;\n}\n\nexport interface ToggleState {\n    isOpen: boolean;\n}\n\nexport default class Toggle extends Component<ToggleProps, ToggleState> {\n    constructor(props: ToggleProps) {\n        super(props);\n\n        this.state = { isOpen: !!props.openByDefault };\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { isOpen } = this.state;\n\n        return children({\n            isOpen,\n            toggle: this.toggle,\n        });\n    }\n\n    private toggle: (event: Event) => void = (event) => {\n        const { isOpen } = this.state;\n\n        event.preventDefault();\n\n        this.setState({ isOpen: !isOpen });\n    };\n}\n","import { kebabCase } from 'lodash';\n\nexport default function getAppliedStyles(\n    element: HTMLElement,\n    properties: string[],\n): { [key: string]: string } {\n    const declaration = window.getComputedStyle(element);\n\n    return properties.reduce(\n        (result, propertyName) => ({\n            ...result,\n            [propertyName]: declaration.getPropertyValue(kebabCase(propertyName)),\n        }),\n        {},\n    );\n}\n","export default function parseAnchor(text: string): string[] {\n    const div = document.createElement('div');\n\n    div.innerHTML = text;\n\n    const anchor = div.querySelector('a');\n\n    if (!anchor) {\n        return [];\n    }\n\n    const anchorSiblings = div.innerHTML.split(anchor.outerHTML);\n\n    return [anchorSiblings[0], anchor.text, anchorSiblings[1]];\n}\n","import { SyntheticEvent } from 'react';\n\nexport default function preventDefault<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.preventDefault();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import { Component, ReactNode } from 'react';\n\nimport ErrorLogger from './ErrorLogger';\n\nexport interface ErrorBoundaryProps {\n    children: ReactNode;\n    fallback?: ReactNode;\n    logger?: ErrorLogger;\n    filter?(error: Error): boolean;\n}\n\ninterface ErrorBoundaryState {\n    error?: Error;\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n        return { error };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    state: ErrorBoundaryState = {};\n\n    componentDidCatch(error: Error): void {\n        const { filter = () => true, logger } = this.props;\n\n        if (!filter(error)) {\n            throw error;\n        }\n\n        if (logger) {\n            logger.log(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { children, fallback, filter = () => true } = this.props;\n\n        const { error } = this.state;\n\n        if (error && filter(error)) {\n            return fallback || null;\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorBoundary;\n","import { isEmpty, pickBy } from 'lodash';\nimport React, { ComponentType, Context, FunctionComponent, memo, useContext } from 'react';\n\nimport InjectHoc from './InjectHoc';\n\nexport interface InjectHocOptions<TInjectedProps> {\n    displayNamePrefix?: string;\n    pickProps?(value: TInjectedProps[keyof TInjectedProps], key: keyof TInjectedProps): boolean;\n}\n\nexport default function createInjectHoc<\n    TInjectedProps extends object | undefined,\n    TPickedProps extends Partial<TInjectedProps> = TInjectedProps,\n>(\n    ContextComponent: Context<TInjectedProps>,\n    options?: InjectHocOptions<TInjectedProps>,\n): InjectHoc<NonNullable<TPickedProps>> {\n    return <TProps extends TPickedProps>(OriginalComponent: ComponentType<TProps>) => {\n        const { displayNamePrefix = '', pickProps = () => true } = options || {};\n\n        const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n            <OriginalComponent {...props} />\n        ));\n\n        const DecoratedComponent = (props: Omit<TProps, keyof NonNullable<TPickedProps>>) => {\n            const context = useContext(ContextComponent);\n            const injectedProps = pickBy(context, (value, key) =>\n                pickProps(value, key as keyof TInjectedProps),\n            );\n\n            if (isEmpty(injectedProps)) {\n                return null;\n            }\n\n            const mergedProps = { ...injectedProps, ...props } as unknown as TProps;\n\n            return <InnerDecoratedComponent {...mergedProps} />;\n        };\n\n        if (displayNamePrefix) {\n            DecoratedComponent.displayName = `${displayNamePrefix}(${\n                OriginalComponent.displayName || OriginalComponent.name\n            })`;\n        }\n\n        return DecoratedComponent;\n    };\n}\n","import { CurrencyService, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface LocaleContextType {\n    language: LanguageService;\n    date?: {\n        inputFormat: string;\n    };\n    currency?: CurrencyService;\n}\n\nconst LocaleContext = createContext<LocaleContextType | undefined>(undefined);\n\nexport default LocaleContext;\n\nexport function useLocale() {\n    const context = useContext(LocaleContext);\n\n    if (!context) {\n        throw new Error('useLocale must be used within a LocaleContextProvider');\n    }\n\n    return context;\n}\n","import { CheckoutService, createCurrencyService, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { Component, ReactNode } from 'react';\n\nimport getLanguageService from './getLanguageService';\nimport LocaleContext from './LocaleContext';\n\nexport interface LocaleProviderProps {\n    checkoutService: CheckoutService;\n}\n\nexport interface LocaleProviderState {\n    config?: StoreConfig;\n}\n\nclass LocaleProvider extends Component<LocaleProviderProps> {\n    state: Readonly<LocaleProviderState> = {};\n\n    private languageService = getLanguageService();\n    private unsubscribe?: () => void;\n\n    private getContextValue = memoizeOne((config?: StoreConfig) => {\n        return {\n            currency: config ? createCurrencyService(config) : undefined,\n            date: config\n                ? {\n                      inputFormat: config.inputDateFormat,\n                  }\n                : undefined,\n            language: this.languageService,\n        };\n    });\n\n    componentDidMount(): void {\n        const { checkoutService } = this.props;\n\n        this.unsubscribe = checkoutService.subscribe(\n            ({ data }) => {\n                this.setState({ config: data.getConfig() });\n            },\n            ({ data }) => data.getConfig(),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { config } = this.state;\n\n        return (\n            <LocaleContext.Provider value={this.getContextValue(config)}>\n                {children}\n            </LocaleContext.Provider>\n        );\n    }\n}\n\nexport default LocaleProvider;\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedHtmlProps {\n    id: string;\n    data?: any;\n}\n\nexport const TranslatedHtml: FunctionComponent<TranslatedHtmlProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return (\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(language.translate(id, data), { ADD_ATTR: ['target'] }),\n            }}\n        />\n    );\n};\n\nexport default TranslatedHtml;\n","import React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedStringProps {\n    id: string;\n    data?: any;\n}\n\nconst TranslatedString: FunctionComponent<TranslatedStringProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return <>{language.translate(id, data)}</>;\n};\n\nexport default TranslatedString;\n","import FALLBACK_TRANSLATIONS from './en.json';\n\nexport const FALLBACK_LOCALE = 'en';\n\nexport { FALLBACK_TRANSLATIONS };\n","import { createLanguageService, LanguageConfig, LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { FALLBACK_LOCALE, FALLBACK_TRANSLATIONS } from './translations';\n\nlet languageService: LanguageService | undefined;\n\nexport default function getLanguageService(): LanguageService {\n    languageService =\n        languageService ??\n        createLanguageService({\n            fallbackLocale: FALLBACK_LOCALE,\n            fallbackTranslations: FALLBACK_TRANSLATIONS,\n        });\n\n    return languageService;\n}\n\nexport type InitializeLanguageService = typeof initializeLanguageService;\n\nexport function initializeLanguageService(config: LanguageConfig): LanguageService {\n    languageService = createLanguageService({\n        ...config,\n        defaultLocale: config.locale,\n        defaultTranslations: config.defaultTranslations,\n        fallbackLocale: FALLBACK_LOCALE,\n        fallbackTranslations: FALLBACK_TRANSLATIONS,\n    });\n\n    return languageService;\n}\n","import { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithDateProps {\n    date: {\n        inputFormat: string;\n    };\n}\n\nconst withDate: InjectHoc<WithDateProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'withDate',\n    pickProps: (value, key) => key === 'date' && !!value,\n});\n\nexport default withDate;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithLanguageProps {\n    language: LanguageService;\n}\n\nconst withLanguage: InjectHoc<WithLanguageProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithLanguage',\n    pickProps: (value, key) => key === 'language' && !!value,\n});\n\nexport default withLanguage;\n","enum PaymentMethodId {\n    Adyen = 'adyen',\n    AdyenV2 = 'adyenv2',\n    AdyenV2GooglePay = 'googlepayadyenv2',\n    AdyenV3GooglePay = 'googlepayadyenv3',\n    AdyenV3 = 'adyenv3',\n    Affirm = 'affirm',\n    Afterpay = 'afterpay',\n    AmazonPay = 'amazonpay',\n    ApplePay = 'applepay',\n    Barclaycard = 'barclaycard',\n    BlueSnapV2 = 'bluesnapv2',\n    BlueSnapDirect = 'bluesnapdirect',\n    Boleto = 'boleto',\n    Bolt = 'bolt',\n    Braintree = 'braintree',\n    BraintreeAch = 'braintreeach',\n    BraintreeVenmo = 'braintreevenmo',\n    AuthorizeNetGooglePay = 'googlepayauthorizenet',\n    BNZGooglePay = 'googlepaybnz',\n    BraintreeAcceleratedCheckout = 'braintreeacceleratedcheckout',\n    BraintreeGooglePay = 'googlepaybraintree',\n    PayPalCommerceAcceleratedCheckout = 'paypalcommerceacceleratedcheckout',\n    PayPalCommerceGooglePay = 'googlepaypaypalcommerce',\n    BraintreeVisaCheckout = 'braintreevisacheckout',\n    BraintreeLocalPaymentMethod = 'braintreelocalmethods',\n    BraintreePaypalCredit = 'braintreepaypalcredit',\n    CBAMPGS = 'cba_mpgs',\n    CCAvenueMars = 'ccavenuemars',\n    ChasePay = 'chasepay',\n    Checkoutcom = 'checkoutcom',\n    CheckoutcomGooglePay = 'googlepaycheckoutcom',\n    Clearpay = 'clearpay',\n    Converge = 'converge',\n    CybersourceV2GooglePay = 'googlepaycybersourcev2',\n    DigitalRiver = 'digitalriver',\n    Fawry = 'fawry',\n    Humm = 'humm',\n    Ideal = 'ideal',\n    Klarna = 'klarna',\n    Laybuy = 'laybuy',\n    Masterpass = 'masterpass',\n    Mollie = 'mollie',\n    Moneris = 'moneris',\n    Opy = 'opy',\n    OrbitalGooglePay = 'googlepayorbital',\n    Oxxo = 'oxxo',\n    PaypalExpress = 'paypalexpress',\n    PaypalPaymentsPro = 'paypal',\n    PaypalCommerce = 'paypalcommerce',\n    PaypalCommerceCredit = 'paypalcommercecredit',\n    PaypalCommerceCreditCards = 'paypalcommercecreditcards',\n    PaypalCommerceAlternativeMethod = 'paypalcommercealternativemethods',\n    PaypalCommerceVenmo = 'paypalcommercevenmo',\n    Qpay = 'qpay',\n    Quadpay = 'quadpay',\n    Ratepay = 'ratepay',\n    SagePay = 'sagepay',\n    Sepa = 'sepa',\n    Sezzle = 'sezzle',\n    SquareV2 = 'squarev2',\n    StripeGooglePay = 'googlepaystripe',\n    StripeUPEGooglePay = 'googlepaystripeupe',\n    StripeV3 = 'stripev3',\n    StripeUPE = 'stripeupe',\n    WorldpayAccess = 'worldpayaccess',\n    WorldpayAccessGooglePay = 'googlepayworldpayaccess',\n    Zip = 'zip',\n}\n\nexport default PaymentMethodId;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface CheckoutContextProps {\n    checkoutService: CheckoutService;\n    checkoutState: CheckoutSelectors;\n}\n\nconst CheckoutContext = createContext<CheckoutContextProps | undefined>(undefined);\n\nexport function useCheckout() {\n    const context = useContext(CheckoutContext);\n\n    if (!context) {\n        throw new Error('useCheckout must be used within a CheckoutContextProvider');\n    }\n\n    return context;\n}\n\nexport default CheckoutContext;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { Component, ReactNode } from 'react';\n\nimport CheckoutContext from './CheckoutContext';\n\nexport interface CheckoutProviderProps {\n    checkoutService: CheckoutService;\n}\n\nexport interface CheckoutProviderState {\n    checkoutState: CheckoutSelectors;\n}\n\nexport default class CheckoutProvider extends Component<\n    CheckoutProviderProps,\n    CheckoutProviderState\n> {\n    state: Readonly<CheckoutProviderState>;\n\n    private unsubscribe?: () => void;\n\n    private getContextValue = memoizeOne(\n        (checkoutService: CheckoutService, checkoutState: CheckoutSelectors) => {\n            return {\n                checkoutService,\n                checkoutState,\n            };\n        },\n    );\n\n    constructor(props: Readonly<CheckoutProviderProps>) {\n        super(props);\n\n        this.state = {\n            checkoutState: props.checkoutService.getState(),\n        };\n    }\n\n    componentDidMount(): void {\n        const { checkoutService } = this.props;\n\n        this.unsubscribe = checkoutService.subscribe((checkoutState) =>\n            this.setState({ checkoutState }),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { checkoutService, children } = this.props;\n        const { checkoutState } = this.state;\n\n        return (\n            <CheckoutContext.Provider value={this.getContextValue(checkoutService, checkoutState)}>\n                {children}\n            </CheckoutContext.Provider>\n        );\n    }\n}\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: any;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n}\n","import React, { ComponentType } from 'react';\n\nimport ResolvableComponent from './ResolvableComponent';\n\nexport default function toResolvableComponent<TProps extends Record<string, any>, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n    resolveIds: TIdentifier[],\n): ResolvableComponent<TProps, TIdentifier> {\n    return Object.assign((props: TProps) => <Component {...props} />, { resolveIds });\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPayPalFastlane: FunctionComponent = () => (\n    <svg viewBox=\"0 0 101 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M.009 9.791 1.653.298C1.681.1 1.805 0 1.997 0H7.74c.22 0 .332.141.29.354l-.236 1.334c-.028.185-.152.298-.344.298H3.627l-.359 2.058h3.479c.22 0 .332.142.29.354l-.221 1.306C6.788 5.9 6.664 6 6.472 6H2.936l-.662 3.847c-.028.198-.152.298-.344.298H.298c-.22 0-.332-.142-.289-.354m6.78-1.49c0-1.844 1.905-2.468 3.906-2.71.234-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.035.269-1.23.796-.068.185-.18.27-.358.27H7.975c-.18 0-.304-.085-.304-.241 0-.044.014-.086.028-.128.441-1.334 1.67-2.186 3.507-2.186s2.843.71 2.843 2.428c0 .326-.04.739-.11 1.122l-.373 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.11.341-.318.341h-1.283c-.192 0-.304-.1-.304-.282 0-.17.04-.37.069-.554-.524.539-1.2.978-2.402.978-1.42 0-2.332-.725-2.332-1.986zm5.036-1.205.054-.256-.372.041c-.746.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.504-.78 1.725-1.773zm2.446 1.36c-.04-.17-.07-.297-.07-.438 0-.242.124-.313.318-.313h1.588c.192 0 .29.1.332.298.152.554.607.795 1.284.795.773 0 1.186-.326 1.186-.751 0-.369-.415-.54-1.104-.752l-.813-.256c-1.173-.369-2.14-.795-2.14-2.115 0-1.603 1.475-2.483 3.423-2.483 1.519 0 2.762.412 3.12 1.986.015.07.029.141.029.226 0 .142-.124.198-.318.198h-1.504c-.18 0-.276-.085-.36-.27-.165-.37-.538-.596-1.13-.596-.691 0-1.036.27-1.036.653s.332.554 1.284.852l.539.17c1.243.398 2.278.866 2.278 2.059 0 1.732-1.519 2.639-3.59 2.639-1.602 0-2.996-.468-3.313-1.902h-.005zm7.786.455c0-.269.04-.483.083-.725l.676-3.888h-.745c-.22 0-.332-.141-.29-.354l.166-.951c.029-.185.152-.298.344-.298h.8l.29-1.717c.028-.198.152-.298.344-.298h1.519c.22 0 .332.142.29.354l-.29 1.661h.966c.22 0 .332.142.29.356l-.166.951c-.029.186-.152.298-.345.298h-1.02l-.442 2.54c-.083.483-.152.851-.152 1.149 0 .468.152.624.47.624.124 0 .235-.015.318-.015.22 0 .29.17.249.383l-.152.922c-.055.356-.263.412-.76.412-1.297 0-2.443-.071-2.443-1.405m3.995.88 1.63-9.493C27.71.1 27.834 0 28.026 0h1.519c.22 0 .332.141.29.354l-1.643 9.493c-.028.198-.152.298-.344.298h-1.505c-.221 0-.332-.141-.29-.354zm3.147-1.49c0-1.844 1.905-2.468 3.906-2.71.235-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.034.269-1.229.796-.069.185-.18.27-.359.27h-1.407c-.18 0-.304-.085-.304-.241 0-.044.015-.086.028-.128.442-1.334 1.67-2.186 3.508-2.186 1.837 0 2.843.71 2.843 2.428 0 .326-.04.739-.112 1.122l-.372 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.111.341-.318.341h-1.284c-.192 0-.303-.1-.303-.282 0-.17.04-.37.068-.554-.524.539-1.2.978-2.401.978-1.422 0-2.333-.725-2.333-1.986V8.3m4.914-1.205.055-.256-.373.041c-.745.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.505-.78 1.725-1.773zm2.475 2.695 1.16-6.798c.028-.2.152-.298.344-.298h1.421c.22 0 .318.142.275.356l-.11.666c.357-.524 1.13-1.193 2.4-1.193 1.382 0 2.182.88 2.182 2.256 0 .269-.029.54-.083.866l-.731 4.2c-.028.198-.152.298-.344.298h-1.519c-.22 0-.332-.141-.29-.353l.566-3.25c.083-.482.11-.851.11-1.121 0-.766-.274-1.179-.95-1.179-.898 0-1.436.725-1.671 2.086l-.608 3.52c-.028.197-.152.297-.344.297h-1.519c-.22 0-.332-.141-.29-.353m8.063-2.824c0-2.384 1.588-4.456 4.35-4.456 2.14 0 3.45 1.22 3.45 3.42 0 .256-.014.483-.04.71-.028.2-.152.297-.344.297h-5.233c.028 1.051.496 1.689 1.56 1.689.538 0 .91-.198 1.214-.51a.47.47 0 0 1 .387-.186h1.67c.193 0 .305.057.305.2 0 .042-.015.1-.069.198-.705 1.25-1.836 2.071-3.671 2.071-2.098 0-3.576-1.178-3.576-3.434zm5.591-1.405c0-.908-.484-1.476-1.421-1.476-1.009 0-1.616.71-1.78 1.476h3.203zm34.293-.611-1.504 2.6-.764-2.579a.195.195 0 0 0-.185-.141h-1.355a.15.15 0 0 0-.14.195l1.367 4.343-1.236 2.046c-.06.099.009.227.123.227h1.462a.24.24 0 0 0 .206-.12l3.817-6.465a.148.148 0 0 0-.126-.225h-1.46a.23.23 0 0 0-.204.119zM62.935 12c-.135 0-.206-.063-.206-.168 0-.032.01-.074.03-.116l.66-1.613-1.947-5.21c-.03-.084-.052-.126-.052-.189 0-.105.083-.136.216-.136h.7c.135 0 .227.073.268.2l.937 2.816c.176.527.299.886.433 1.329h.02c.176-.517.268-.823.454-1.36l.957-2.785q.078-.202.278-.2h.629c.134 0 .227.041.227.147a.5.5 0 0 1-.052.169l-2.699 6.927c-.051.127-.134.19-.268.19h-.587zm-4.082-1.772c-.927 0-1.524-.422-1.833-.906v.537c0 .158-.083.243-.237.243h-.505c-.154 0-.237-.085-.237-.243V2.803c0-.158.083-.243.237-.243h.577c.154 0 .237.085.237.243v1.381c0 .38 0 .697-.01 1.086.308-.454.906-.875 1.761-.875 1.535 0 2.523 1.244 2.523 2.921s-1.03 2.911-2.513 2.911m-.205-.876c1.009 0 1.596-.801 1.596-2.025s-.597-2.035-1.606-2.035-1.606.855-1.606 2.035.597 2.025 1.617 2.025zm12.82-1.666c1.397 0 2.58-1.043 2.796-2.454.218-1.424-.87-2.666-2.408-2.67h-2.482a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.194zm1.1-2.52c-.082.527-.479.915-1.24.915h-.972l.294-1.916h.955c.788 0 1.044.475.962 1zm7.386-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.656 1.918 0 0-.638 1.929.803 2.988 0 0 1.336 1.019 2.842-.063l-.026.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.182.182 0 0 0-.178-.214zm-1.831 2.72c-.108.705-.675 1.225-1.4 1.225a1.3 1.3 0 0 1-.393-.058c-.537-.178-.844-.705-.757-1.28.108-.706.676-1.226 1.403-1.226q.216 0 .392.06c.54.178.843.707.755 1.28zm11.3.136c1.396 0 2.58-1.043 2.795-2.454.218-1.424-.87-2.666-2.408-2.67h-2.48a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.19v.002zm1.101-2.52c-.082.527-.478.915-1.239.915h-.972l.294-1.916h.955c.786 0 1.043.475.962 1zm7.387-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.655 1.918 0 0-.639 1.929.803 2.988 0 0 1.337 1.019 2.842-.063l-.027.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.183.183 0 0 0-.18-.214m-1.831 2.72c-.109.705-.674 1.225-1.4 1.225q-.216 0-.392-.058c-.537-.178-.845-.705-.757-1.28.108-.706.677-1.226 1.402-1.226q.216 0 .392.06c.537.178.843.707.756 1.28zm3.233-4.82L98.206 9.92a.18.18 0 0 0 .178.212h1.314a.2.2 0 0 0 .192-.169l1.107-7.19a.18.18 0 0 0-.178-.213h-1.315a.2.2 0 0 0-.191.17\"\n            fill=\"#333333\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconPayPalFastlane);\n","import React from 'react';\n\nimport { IconPayPalFastlane } from '@bigcommerce/checkout/ui';\n\nimport './PoweredByPayPalFastlaneLabel.scss';\n\nconst PoweredByPayPalFastlaneLabel = () => (\n    <div className=\"powered-by-paypal-fastlane\" data-test=\"paypal-fastlane-icon\">\n        <IconPayPalFastlane />\n    </div>\n);\n\nexport default PoweredByPayPalFastlaneLabel;\n","import {\n    Address,\n    AddressRequestBody,\n    BillingAddress,\n    CustomerAddress,\n} from '@bigcommerce/checkout-sdk';\nimport { isEqual, omit } from 'lodash';\n\ntype ComparableAddress = CustomerAddress | Address | BillingAddress | AddressRequestBody;\ntype ComparableAddressFields = keyof CustomerAddress | keyof Address | keyof BillingAddress;\n\nconst normalizeAddress = (address: Partial<ComparableAddress>) => {\n    const ignoredFields: ComparableAddressFields[] = [\n        'id',\n        'shouldSaveAddress',\n        'stateOrProvince',\n        'type',\n        'email',\n        'country',\n        'customFields',\n    ];\n\n    return omit(address, ignoredFields);\n};\n\nconst isEqualToPayPalFastlaneAddress = (\n    bcAddress: Partial<ComparableAddress>,\n    paypalFastlaneAddress: Partial<ComparableAddress>,\n): boolean => isEqual(normalizeAddress(bcAddress), normalizeAddress(paypalFastlaneAddress));\n\nconst isPayPalFastlaneAddress = (address: Address, addresses?: Address[]): boolean => {\n    if (!addresses || addresses.length === 0) {\n        return false;\n    }\n\n    return addresses.some((paypalFastlaneAddress) =>\n        isEqualToPayPalFastlaneAddress(address, paypalFastlaneAddress),\n    );\n};\n\nexport default isPayPalFastlaneAddress;\n","import {\n    CardInstrument,\n    CustomerAddress,\n    PaymentProviderCustomer,\n} from '@bigcommerce/checkout-sdk';\n\ninterface PayPalFastlaneCustomer {\n    authenticationState?: string;\n    addresses?: CustomerAddress[];\n    instruments?: CardInstrument[];\n}\n\nexport default function isPayPalFastlaneCustomer(\n    customer?: PaymentProviderCustomer,\n): customer is PayPalFastlaneCustomer {\n    if (!customer) {\n        return false;\n    }\n\n    return (\n        'authenticationState' in customer || 'addresses' in customer || 'instruments' in customer\n    );\n}\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBraintreeFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.Braintree || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BraintreeAcceleratedCheckout\n    );\n};\n\nexport default isBraintreeFastlaneMethod;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isPayPalCommerceFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.PaypalCommerceCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.PayPalCommerceAcceleratedCheckout\n    );\n};\n\nexport default isPayPalCommerceFastlaneMethod;\n","import isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isPayPalCommerceFastlaneMethod from './is-paypal-commerce-fastlane-method';\n\nconst isPaypalFastlaneMethod = (methodId?: string): boolean => {\n    return isBraintreeFastlaneMethod(methodId) || isPayPalCommerceFastlaneMethod(methodId);\n};\n\nexport default isPaypalFastlaneMethod;\n","import { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isPayPalCommerceFastlaneMethod from './is-paypal-commerce-fastlane-method';\nimport isPayPalFastlaneAddress from './is-paypal-fastlane-address';\nimport isPayPalFastlaneCustomer from './is-paypal-fastlane-customer';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\n\nconst usePayPalFastlaneAddress = () => {\n    const { checkoutState } = useCheckout();\n    const { getConfig, getCustomer, getPaymentProviderCustomer } = checkoutState.data;\n    const paymentWithCustomCheckout =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n\n    const isPayPalFastlaneEnabled = isPayPalFastlaneMethod(paymentWithCustomCheckout);\n\n    const paymentProviderCustomer = getPaymentProviderCustomer();\n    const paypalFastlaneCustomer = isPayPalFastlaneCustomer(paymentProviderCustomer)\n        ? paymentProviderCustomer\n        : {};\n\n    const customerAuthenticationState =\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        paymentProviderCustomer?.authenticationState;\n\n    const shouldHideBraintreeFastlaneForStoreMembers =\n        isBraintreeFastlaneMethod(paymentWithCustomCheckout) &&\n        getConfig()?.checkoutSettings.features[\n            'PAYPAL-4001.braintree_fastlane_stored_member_flow_removal'\n        ];\n    const shouldHidePayPalCommerceFastlaneForStoreMembers =\n        isPayPalCommerceFastlaneMethod(paymentWithCustomCheckout) &&\n        getConfig()?.checkoutSettings.features[\n            'PAYPAL-4001.paypal_commerce_fastlane_stored_member_flow_removal'\n        ];\n\n    const shouldHidePayPalFastlaneForStoreMembers =\n        shouldHideBraintreeFastlaneForStoreMembers ||\n        shouldHidePayPalCommerceFastlaneForStoreMembers;\n\n    const paypalFastlaneAddresses = paypalFastlaneCustomer.addresses || [];\n\n    // Info: BC address support will be deprecated for Fastlane in nearest future\n    const bcAddresses = shouldHidePayPalFastlaneForStoreMembers\n        ? []\n        : getCustomer()?.addresses || [];\n    const mergedBcAndPayPalFastlaneAddresses = isPayPalFastlaneEnabled\n        ? [\n              ...paypalFastlaneAddresses,\n              ...bcAddresses.filter(\n                  (address) => !isPayPalFastlaneAddress(address, paypalFastlaneAddresses),\n              ),\n          ]\n        : bcAddresses;\n\n    const shouldShowPayPalFastlaneLabel =\n        paypalFastlaneAddresses.length > 0 && isPayPalFastlaneEnabled;\n\n    const shouldShowPayPalFastlaneShippingForm =\n        paypalFastlaneAddresses.length > 0 &&\n        customerAuthenticationState &&\n        customerAuthenticationState !== 'CANCELED' &&\n        customerAuthenticationState !== 'unrecognized' &&\n        getConfig()?.checkoutSettings.features['PAYPAL-3996.paypal_fastlane_shipping_update'];\n\n    return {\n        isPayPalFastlaneEnabled,\n        paypalFastlaneAddresses,\n        shouldShowPayPalFastlaneLabel,\n        shouldShowPayPalFastlaneShippingForm,\n        mergedBcAndPayPalFastlaneAddresses,\n        shouldHidePayPalFastlaneForStoreMembers,\n    };\n};\n\nexport default usePayPalFastlaneAddress;\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst AddressFormSkeleton: FunctionComponent<LoadingSkeletonProps> = ({ children, isLoading }) => {\n    const skeleton = (\n        <div className=\"checkout-form\">\n            <div className=\"form-legend-container\">\n                <div className=\"address-form-heading-skeleton form-legend optimizedCheckout-headingSecondary\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"name-fields-skeleton\">\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                </div>\n                <div className=\"skeleton-container\">\n                    <div className=\"input-skeleton\" />\n                </div>\n            </div>\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default AddressFormSkeleton;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface ChecklistSkeletonProps {\n    additionalClassName?: string;\n    rows?: number;\n}\n\nconst ChecklistSkeleton: FunctionComponent<LoadingSkeletonProps & ChecklistSkeletonProps> = ({\n    additionalClassName,\n    children,\n    isLoading = true,\n    rows = 3,\n}) => {\n    const content = [];\n\n    for (let i = 0; i < rows; i += 1) {\n        content.push(\n            <div className=\"skeleton-container\" key={`checklist-skeleton-item${i}`}>\n                <div className=\"checklist-skeleton-circle\" />\n                <div className=\"checklist-skeleton-rectangle\" />\n            </div>,\n        );\n    }\n\n    const skeleton = (\n        <div className={classNames(additionalClassName, 'checklist-skeleton')}>{content}</div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default ChecklistSkeleton;\n","import React, { FunctionComponent, ReactNode } from 'react';\n\nexport interface LoadingSkeletonProps {\n    isLoading?: boolean;\n    renderWhileLoading?: boolean;\n    skeleton?: ReactNode;\n}\n\nexport const LoadingSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading = true,\n    renderWhileLoading = false,\n    skeleton,\n}) => {\n    const shouldShowChildren = renderWhileLoading || !isLoading;\n\n    return (\n        <>\n            {isLoading && skeleton}\n            {Boolean(children) && shouldShowChildren && (\n                <div\n                    className=\"loading-skeleton\"\n                    style={\n                        isLoading ? { position: 'absolute', left: '100%', top: '-100%' } : undefined\n                    }\n                >\n                    {children}\n                </div>\n            )}\n        </>\n    );\n};\n","import { isFunction, noop } from 'lodash';\nimport React, { createContext, FunctionComponent, memo, ReactNode, useMemo, useState } from 'react';\n\nexport interface FormContextType {\n    isSubmitted: boolean;\n    setSubmitted(isSubmitted: boolean): void;\n}\n\nexport const FormContext = createContext<FormContextType>({\n    isSubmitted: false,\n    setSubmitted: noop,\n});\n\ntype FormContextFunction = (props: FormContextType) => ReactNode;\n\nexport interface FormProviderProps {\n    initialIsSubmitted?: boolean;\n    children: ReactNode | FormContextFunction;\n}\n\nexport const FormProvider: FunctionComponent<FormProviderProps> = memo(\n    ({ children, initialIsSubmitted = false }) => {\n        const [isSubmitted, setSubmitted] = useState(initialIsSubmitted);\n        const contextValue = useMemo(() => ({ isSubmitted, setSubmitted }), [isSubmitted]);\n\n        return (\n            <FormContext.Provider value={contextValue}>\n                {isFunction(children) ? children({ isSubmitted, setSubmitted }) : children}\n            </FormContext.Provider>\n        );\n    },\n);\n\nexport default FormContext;\n","import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n"],"names":["createContext","undefined","createAnalyticsService","createFn","createArguments","analyticsTracker","checkoutService","children","getStepTracker","useMemo","createStepTracker","getBodlService","createBodlService","subscribe","getBraintreeAnalyticTracker","createBraintreeAnalyticTracker","getPayPalCommerceAnalyticTracker","createPayPalCommerceAnalyticTracker","checkoutBegin","trackCheckoutStarted","trackStepCompleted","currentStep","stepCompleted","trackStepViewed","step","orderPurchased","trackOrderComplete","customerEmailEntry","email","customerSuggestionInit","payload","customerSuggestionExecute","customerPaymentMethodExecuted","showShippingMethods","selectedPaymentMethod","methodName","methodId","clickPayButton","paymentRejected","paymentComplete","exitCheckout","walletButtonClick","AnalyticsContext","value","AddressType","address","countries","country","find","code","countryCode","states","isEmpty","subdivisions","state","stateOrProvinceCode","localizedCountry","name","localizedProvince","stateOrProvince","withCheckout","context","type","getBillingCountries","getShippingCountries","getBillingAddressFields","getShippingAddressFields","fields","memo","addressWithoutLocalization","isValidAddress","filter","field","custom","className","firstName","lastName","phone","company","address1","address2","city","postalCode","WHITELIST_REGEXP","memoize","formFields","translate","reduce","schema","required","label","trim","matches","concat","getCustomFormFieldsValidationSchema","getTranslateAddressError","language","requiredFieldErrorTranslationIds","min","max","getFormFieldsValidationSchema","isValidSync","mapAddressToFormValues","values","addressFormValues","fieldName","fieldType","defaultValue","customFields","fieldValue","getValue","toString","shouldSaveAddress","Date","getDefaultValue","split","year","month","day","Number","displayNamePrefix","checkoutState","checkout","getCheckout","payments","paypalFastlaneAddresses","showPayPalFastlaneLabel","payment","providerId","id","ExtensionContext","extensionReducer","action","ExtensionActionType","SHOW_LOADING_INDICATOR","isShowingLoadingIndicator","createReloadCheckoutHandler","commandType","ExtensionCommandType","handler","loadCheckout","getState","data","createSetIframeStyleHandler","extension","style","extensionContainer","document","querySelector","iframe","Object","assign","createShowLoadingIndicatorHandler","dispatch","show","handlers","loadExtensions","this","preloadExtensions","extensions","getExtensions","cartId","getCart","parentOrigin","getConfig","links","siteLink","forEach","url","URL","searchParams","set","link","createElement","rel","as","href","head","appendChild","renderExtension","container","region","getExtensionByRegion","registerHandlers","removeListeners","removers","remover","isRegionEnabled","Boolean","handlerProps","createHandlerFactory","handlerFactory","isCommandHandler","push","handleExtensionCommand","ExtensionProvider","useReducer","extensionState","extensionValues","isExtensionEnabled","checkoutSettings","features","extensionService","ExtensionService","Provider","isSupported","message","EmbeddedCheckoutUnsupportedError","prototype","CustomError","unsupportedMethods","langService","ids","indexOf","length","methods","join","UNSUPPORTED_METHODS","withExtension","isWaiting","componentDidMount","waitInterval","props","waitToken","setTimeout","setState","componentWillUnmount","clearInterval","render","loginUrl","LoadingOverlay","hideContentWhenLoading","isLoading","TranslatedHtml","PureComponent","CustomerViewType","buttonsCount","skeleton","Array","fill","map","_v","i","key","LoadingSkeleton","renderWhileLoading","isApplePayWindow","window","APPLE_PAY","SUPPORTED_METHODS","getSupportedMethodIds","methodIds","containerId","initialize","isShowingWalletButtonsOnTop","onError","onClick","noop","heightOption","buttonHeight","deinitialize","navigateToOrderConfirmation","orderId","isBuyNowCart","location","pathname","replace","Promise","rest","localeContext","useContext","LocaleContext","initializeOptions","useCallback","options","applepay","shippingLabel","subtotalLabel","onPaymentAuthorize","useEffect","beautifyAmazonButton","amazonButton","shadowRoot","height","onComplete","paypalCommerceIds","getCustomer","isPaymentDataRequired","isInitializedCustomer","getInitializeCustomerError","config","availableMethodIds","remoteCheckoutProviders","customer","isGuest","checkEmbeddedSupport","isPaymentStepActive","onUnhandledError","onWalletButtonClick","error","position","left","top","TranslatedString","includes","isPayPalCommerce","resolveId","ResolvedCheckoutButton","resolveComponent","deinitializeCustomer","initializeCustomer","analyticsContext","Error","isExecutingPaymentMethodCheckout","executePaymentMethodCheckout","useState","showSuggestion","setShowSuggestion","bolt","onInit","hasBoltAccount","fn","event","stopPropagation","provider","providerFlow","Button","IconBolt","additionalClassName","providerWithCustomCheckout","PaymentMethodId","isInitializing","hideText","supportedMethodIds","filterUnsupportedMethodIds","SUPPORTED_SIGNOUT_METHODS","isSupportedSignoutMethod","canSignOut","every","getBillingAddress","isSigningOut","billingAddress","isSignedIn","signOut","signOutCustomer","onSignOut","onSignOutError","isCartEmpty","reload","isErrorWithType","size","testId","variant","stripeLinkMinAmount","cart","cartAmount","isStripeLinkMinAmount","EMAIL_REGEXP","getEmailValidationSchema","getTranslateCreateCustomerError","passwordRequirements","description","numeric","alpha","minLength","password","getAcceptsMarketingEmailsDefault","defaultShouldSubscribe","requiresMarketingConsent","withLanguage","withFormik","handleSubmit","onSubmit","mapPropsToValues","acceptsMarketingEmails","validationSchema","requirements","getCreateCustomerValidationSchema","getPasswordRequirements","fixNewsletterCheckboxExperimentEnabled","createAccountError","isCreatingAccount","onCancel","isFloatingLabelEnabled","createAccountErrorMessage","isRequestError","status","splitMessage","updatedItems","items","item","transformFormFieldsData","Form","Fieldset","Alert","DynamicFormField","autocomplete","extraClass","parentFieldName","disabled","preventDefault","translatedString","parsedString","parseAnchor","onChange","renderInput","TextInput","autoComplete","labelContent","FormField","input","onSendLoginEmail","isOpen","isSendingEmail","emailHasBeenRequested","onRequestClose","sentEmailError","sentEmail","submitForm","formEmail","modalHeaderStringId","okButton","footer","LoadingSpinner","sent_email","form","expiry","minutes","Math","round","Modal","additionalBodyClassName","additionalModalClassName","header","ModalHeader","shouldShowCloseButton","PrivacyPolicyCheckboxFieldLink","CheckboxFormField","PrivacyPolicyFieldset","PrivacyPolicyAutoConsent","getPrivacyPolicyValidationSchema","isRequired","schemaFields","privacyPolicy","oneOf","Input","checked","Label","htmlFor","setSubscribeStatus","shouldSubscribe","sessionStorage","setItem","getSubscribeStatus","getItem","removeSubscribeStatus","removeItem","getShouldSubscribeValue","SubscribeSessionStorage","onContinueAsGuest","privacyPolicyUrl","isExpressPrivacyPolicy","baseSchema","canSubscribe","checkoutButtons","continueAsGuestButtonLabelId","onChangeEmail","onShowLogin","renderField","fieldProps","legend","Legend","hidden","BasicFormField","tabIndex","role","withIconContainer","viewBox","xmlns","d","Toggle","openByDefault","toggle","onSignIn","canCancel","forgotPasswordUrl","isSignInEmailEnabled","isSigningIn","onCreateAccount","signInError","shouldShowCreateAccountLink","viewType","changeEmailLink","body","mapErrorMessage","target","mapCreateAccountFromFormValues","mapCustomFormFieldsFromFormValues","setStatus","valSuccess","continueAsAGuestButton","setContinueAsAGuestButton","emailValue","setEmailValue","authentication","setAuthentication","isStripeLoading","setIsStripeLoading","isNewAuth","setIsNewAuth","handleOnClickSubmitButton","setEmailCallback","authenticated","isComplete","handleLoading","mounted","stripeupe","onEmailChange","getStyles","getStripeStyles","gatewayId","getStylesFromElement","properties","parentContainer","getElementById","getAppliedStyles","formInput","formLabel","formError","labelText","color","fieldText","fieldPlaceholderText","fieldErrorText","fieldBackground","fieldInnerShadow","fieldBorder","buttonText","display","placeholder","isEmailLoginFormOpen","isReady","hasRequestedLoginEmail","closeEmailLoginFormForm","handleEmailLoginClicked","draftEmail","handleSendLoginEmail","sendLoginEmail","handleContinueAsGuest","formValues","continueAsGuest","hasBillingId","onChangeViewType","onContinueAsGuestError","onSubscribeToNewsletter","updateSubscriptionWhenUnchecked","acceptsMarketingNewsletter","acceptsAbandonedCartEmails","paymentProviderCustomer","getPaymentProviderCustomer","shouldEncourageSignIn","stripeLinkAuthenticationState","executePaymentMethodCheckoutOrContinue","handleSignIn","credentials","signIn","onSignInError","handleCreateAccount","createAccount","onAccountCreated","showCreateAccount","handleCancelCreateAccount","clearError","handleCancelSignIn","handleChangeEmail","handleShowLogin","continueWithCheckoutCallback","checkoutPaymentMethodExecuted","onReady","shouldRenderGuestForm","shouldRenderCreateAccountForm","shouldRenderLoginForm","renderEmailLoginLinkForm","renderLoginForm","renderGuestForm","renderCreateAccountForm","checkoutButtonIds","isContinuingAsGuest","isSubscribed","isWalletButtonsOnTop","shouldRenderStripeForm","isLoadingGuestForm","isSendingSignInEmail","signInEmailError","signInEmail","customerAccountFields","isEmbedded","isGuestEnabled","isAccountCreationEnabled","Component","withAnalytics","getCustomerAccountFields","getSignInEmail","getSignInError","getSignInEmailError","getCreateCustomerAccountError","isInitializingCustomer","isCreatingCustomerAccount","getProviderWithCustomCheckout","shopperConfig","showNewsletterSignup","createCustomerAccount","sendSignInEmail","defaultNewsletterSignup","forgotPasswordLink","guestCheckoutEnabled","signInCustomer","Customer","width","icon","dangerouslySetInnerHTML","__html","banners","result","promotion","banner","index","text","hasUnassignedLineItems","consignments","lineItems","total","consignment","lineItemIds","physicalItems","addedByPromotion","isUsingMultiShipping","some","getLanguageService","title","ShippingOptionExpiredError","heading","isActive","isEditable","onEdit","summary","isClosed","containerRef","createRef","contentRef","handleTransitionEnd","node","done","addEventListener","onAnimationEnd","focusStep","componentDidUpdate","prevProps","timeoutRef","clearTimeout","suggestion","ref","renderContent","isBusy","MobileView","matched","CSSTransition","addEndListener","classNames","enter","exit","in","mountOnEnter","onExited","timeout","unmountOnExit","delay","matchMedia","getTransitionDelay","getChildInput","getScrollPosition","onExpanded","focus","isNaN","scrollTo","current","getParentContainer","topOffset","innerHeight","getBoundingClientRect","scrollY","pageYOffset","parentElement","classList","contains","timeoutDelay","parseFloat","getComputedStyle","transitionDuration","CheckoutStepType","lineItem","isShippingRequired","customItems","getCustomerStepStatus","createSelector","hasEmail","isUsingWallet","isUsingStripeLinkAndCheckoutPageIsReloaded","shouldUseStripeLinkByMinimumAmount","getStripeLinkAndCheckoutPageIsReloaded","getBillingStepStatus","billingAddressFields","hasAddress","billingAddressCustomFields","hasCustomFields","isAmazonPayBillingStepComplete","getShippingStepStatus","getShippingAddress","getConsignments","shippingAddress","shippingAddressFields","hasOptions","hasSelectedShippingOptions","hasUnassignedItems","getPaymentStepStatus","getOrder","order","customerStep","shippingStep","billingStep","paymentStep","steps","compact","defaultActiveStep","isPrevStepComplete","slice","prevStep","defaultConfig","AddressDisplay","displayConfig","finalConfig","ShippingStep","Billing","lazy","retry","CartSummary","CartSummaryDrawer","Payment","isBillingSameAsShipping","isRedirecting","isMultiShippingMode","isHidingStepNumbers","buttonConfigs","navigateToNextIncompleteStep","activeStepIndex","findIndex","activeStep","previousStep","navigateToStep","embeddedMessenger","postComplete","embeddedSupport","handleCartChangedError","handleConsignmentsUpdated","prevHasSelectedShippingOptions","activeStepType","defaultStepType","newHasSelectedShippingOptions","isDefaultStepPaymentOrBilling","isShippingStepFinished","handleCloseErrorModal","handleExpanded","handleUnhandledError","handleError","log","postError","handleEditStep","handleReady","isDefault","handleNewsletterSubscription","subscribed","handleSignOut","cartUrl","isPriceHiddenFromGuests","postSignedOut","setCustomerViewType","customerViewType","createAccountUrl","handleBeforeExit","handleWalletButtonClick","unsubscribeFromConsignments","removeEventListener","checkoutId","createEmbeddedMessenger","embeddedStylesheet","loadPaymentMethodByIds","subscribeToConsignments","all","params","include","console","providers","supportedProviders","configs","getPaymentMethods","errorFlashMessages","getFlashMessages","messenger","receiveStyles","styles","append","postFrameLoaded","contentId","postLoaded","hasMultiShippingEnabled","checkoutBillingSameAsShippingEnabled","removeStepNumbersFlag","defaultNewsletterSignupOption","errorModal","isCustomError","ErrorModal","onClose","src","alt","isPending","promotions","renderStep","renderCartSummary","renderCustomerStep","renderBillingStep","renderPaymentStep","StaticBillingAddress","LazyContainer","loadingSkeleton","AddressFormSkeleton","navigateNextStep","errorLogger","ChecklistSkeleton","onCartChangedError","onFinalize","onSubmitError","errors","statuses","submitOrderError","getSubmitOrderError","checkoutUserExperienceSettings","walletButtonsOnTop","floatingLabelEnabled","loginLink","createAccountLink","cartLink","displaySettings","hidePriceFromGuests","subscribeToConsignmentsSelector","subscriber","walletButtonsOnTopFlag","hasCartChanged","isLoadingCheckout","Checkout","createCheckoutService","locale","getLocale","shouldWarnMutation","createEmbeddedCheckoutStylesheet","createErrorLogger","sentry","sentryConfig","errorTypes","publicPath","sampleRate","sentrySampleRate","ErrorBoundary","logger","LocaleProvider","CheckoutProvider","AnalyticsProvider","createEmbeddedCheckoutMessenger","ContextComponent","CheckoutContext","mapToPropsOrFactory","OriginalComponent","InnerDecoratedComponent","DecoratedComponent","mapToProps","isMapToPropsFactory","mappedProps","mergedProps","displayName","captureStackTrace","stack","setDefaultValues","defaultError","defaultTitle","aria","labelledby","handleOnRequestClose","nativeEvent","renderFooter","renderHeader","renderBody","IconError","shouldBeTranslatedAsHtml","isHtmlError","translationKey","renderErrorCode","shouldShowErrorCode","headers","errorCode","computeErrorCode","toUpperCase","setPrototypeOf","object","__proto__","ErrorLevelType","customConsole","tags","level","meta","Info","info","Warning","warn","SeverityLevelEnum","FILENAME_PREFIX","handleBeforeSend","hint","exception","shouldReportExceptions","originalException","handleRewriteFrame","frame","filename","RegExp","consoleLogger","beforeSend","denyUrls","integrations","onerror","onunhandledrejection","iteratee","scope","setTags","setLevel","mapToSentryLevel","setExtras","setFingerprint","INFO","WARNING","Debug","DEBUG","ERROR","exceptions","stacktrace","frames","startsWith","serviceConfig","customError","obj","hasOwnProperty","call","isResolvableComponent","query","components","results","entries","resolveIds","resolverId","component","default","sort","a","b","EMPTY_ARRAY","freeze","lastPathName","pop","DEFAULT_OPTIONS","count","interval","resolve","getPasswordRequirementsFromConfig","minlength","allSlashes","toCSSRule","selector","mergedStyles","pickBy","kebabCase","parse","rules","secondaryText","secondaryHeading","hover","button","active","secondaryButton","select","checkbox","radio","checklist","discountBanner","loadingBanner","orderSummary","embeddedCheckoutStyleParser","_parser","sheet","CSSStyleSheet","rule","insertRule","appendStylesheet","maxValue","minValue","strict","nullable","transform","originalValue","requiredErrorMessage","customFieldsObject","forIn","isDate","padMonth","padStart","getMonth","padDay","getDate","getFullYear","fieldId","toResolvableComponent","catch","hasProto","isGiftCertificatePayment","path","currentScript","configurePublicPath","scriptPath","substr","renderCheckout","configuredPublicPath","CheckoutApp","renderOrderConfirmation","OrderConfirmationApp","requestSender","create","put","then","response","renderPasswordInput","renderPasswordConfirmationInput","passwordLabelContent","passwordConfirmationLabelContent","confirmPassword","onSignUp","isSigningUp","customerCanBeCreated","AccountCreationRequirementsError","AccountCreationFailedError","isDefaultOrderPayment","isStoreCreditPayment","gatewayPayment","detail","instructions","mapFromPayments","amount","remaining","used","balance","purchaseDate","getStoreCreditAmount","mapToOrderSummarySubtotalsProps","baseAmount","discountAmount","isTaxIncluded","shippingCostBeforeDiscount","handlingCostTotal","giftWrappingCostTotal","coupons","taxes","fees","subtotalAmount","shippingAmount","giftWrappingAmount","storeCreditAmount","handlingAmount","giftCertificates","MandateTextComponent","mandateText","keys","PaymentsWithMandates","paymentsWithMandates","mandate","isPaymentWithMandate","OrderStatusMessage","orderNumber","orderStatus","supportEmail","supportPhoneNumber","hasDigitalItems","isDownloadable","handleClick","throttle","print","OrderSummary","OrderSummaryDrawer","handleErrorModalClose","handleSignUp","hasSignedUp","loadOrder","isLoadingOrder","paymentInstructions","orderEmail","storePhoneNumber","renderGuestSignUp","shouldShowPasswordForm","customerId","method","renderOrderSummary","renderErrorModal","currency","shopperCurrency","headerLink","isUpdatedCartSummayModal","storeCurrency","orderAmount","OrderConfirmation","accountService","newsletter","selectedShippingOption","availableShippingOptions","AlertType","Success","renderDefaultIcon","ButtonVariant","ButtonSize","getClassName","isFullWidth","Primary","Secondary","Action","Small","Tiny","Large","InnerField","InnerFieldInput","hasError","getIn","prevForm","prevField","nextForm","nextField","nextProps","getTime","renderInnerField","Field","errorId","forwardRef","withDate","date","inputFormat","handleDateChange","dateValue","DynamicFormFieldType","IconChevronDown","optionValue","CheckboxInput","isArray","calendarClassName","dateFormat","maxDate","minDate","placeholderText","popperClassName","selected","TextArea","onSelectedAll","onSelectedNone","handleSelectAllClick","handleSelectNoneClick","MultiCheckboxFormField","remove","handleSelectAll","checkedValues","difference","val","handleSelectNone","handleInputChange","FormFieldContainer","FormFieldError","renderProps","pick","FieldArray","secret","fieldLabel","maxLength","inputId","fieldInputId","isFloatingLabelSupportedFieldType","labelComponent","dynamicFormFieldType","helperLabel","rows","useRef","focusOnError","erroredFormField","preventScroll","offsetParent","scrollIntoView","behavior","block","inline","handleSubmitCapture","memoizeOne","setSubmitted","noValidate","onSubmitCapture","isSubmitted","renderMessage","ErrorMessage","appearFocused","IconSize","Medium","filterError","fallback","Suspense","unmountContentWhenLoading","closeButtonLabel","additionalHeaderClassName","handleClose","ariaHideApp","bodyOpenClassName","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","queries","mobile","MOBILE_MAX_WIDTH","SMALL_SCREEN_MAX_WIDTH","element","declaration","propertyName","getPropertyValue","div","innerHTML","anchor","anchorSiblings","outerHTML","getDerivedStateFromError","componentDidCatch","createInjectHoc","pickProps","injectedProps","useLocale","languageService","getContextValue","createCurrencyService","inputDateFormat","unsubscribe","ADD_ATTR","FALLBACK_LOCALE","createLanguageService","fallbackLocale","fallbackTranslations","initializeLanguageService","defaultLocale","defaultTranslations","useCheckout","normalizeAddress","omit","addresses","paypalFastlaneAddress","bcAddress","isEqual","isEqualToPayPalFastlaneAddress","isPayPalFastlaneCustomer","paymentWithCustomCheckout","isPayPalFastlaneEnabled","paypalFastlaneCustomer","customerAuthenticationState","authenticationState","shouldHideBraintreeFastlaneForStoreMembers","shouldHidePayPalCommerceFastlaneForStoreMembers","shouldHidePayPalFastlaneForStoreMembers","bcAddresses","mergedBcAndPayPalFastlaneAddresses","shouldShowPayPalFastlaneLabel","shouldShowPayPalFastlaneShippingForm","content","shouldShowChildren","FormContext","FormProvider","initialIsSubmitted","contextValue","isFunction"],"sourceRoot":""}